{
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nvar nodemailer = require('nodemailer');\n\nvar cors = require('cors');\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser'); //connect db\n\n\nvar connect_db = require('./db');\n\nvar path = require('path'); // import Route ------------------------------------------------------------------------\n\n\nvar rootRouter = require('./routes/index.route');\n\nvar app = express();\napp.use(cors()); // parse application/x-www-form-urlencoded \n\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\nvar port = process.env.PORT; // congifg ------------------------------------------------------------------------------\n\napp.set('view engine', 'pug'); //app.set('views', './views')\n// Route --------------------------------------------------------------------------------\n\napp.use('/', rootRouter);\napp.get('/api/image/:name', function (req, res) {\n  var fileName = req.params.name;\n  res.sendFile(path.resolve(\"./assets/image/\".concat(fileName)));\n});\napp.listen(port, function () {\n  console.log('Start server port = ', port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJub2RlbWFpbGVyIiwiY29ycyIsImV4cHJlc3MiLCJib2R5UGFyc2VyIiwiY29ubmVjdF9kYiIsInBhdGgiLCJyb290Um91dGVyIiwiYXBwIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNldCIsImdldCIsInJlcSIsInJlcyIsImZpbGVOYW1lIiwicGFyYW1zIiwibmFtZSIsInNlbmRGaWxlIiwicmVzb2x2ZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUVBLElBQU1DLFVBQVUsR0FBR0YsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O0FBRUEsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxPQUFPLEdBQUdKLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1LLFVBQVUsR0FBR0wsT0FBTyxDQUFDLGFBQUQsQ0FBMUIsQyxDQUVBOzs7QUFDQSxJQUFNTSxVQUFVLEdBQUdOLE9BQU8sQ0FBQyxNQUFELENBQTFCOztBQUNBLElBQUlPLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBbEIsQyxDQUVBOzs7QUFDQSxJQUFNUSxVQUFVLEdBQUdSLE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQSxJQUFNUyxHQUFHLEdBQUdMLE9BQU8sRUFBbkI7QUFDQUssR0FBRyxDQUFDQyxHQUFKLENBQVFQLElBQUksRUFBWixFLENBQ0E7O0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTCxVQUFVLENBQUNNLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUUwsVUFBVSxDQUFDUSxJQUFYLEVBQVI7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF6QixDLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkIsRSxDQUNBO0FBRUE7O0FBQ0FULEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYUYsVUFBYjtBQUVBQyxHQUFHLENBQUNVLEdBQUosQ0FBUSxrQkFBUixFQUEyQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBa0I7QUFDNUMsTUFBSUMsUUFBUSxHQUFHRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFBMUI7QUFDQUgsRUFBQUEsR0FBRyxDQUFDSSxRQUFKLENBQWFsQixJQUFJLENBQUNtQixPQUFMLDBCQUErQkosUUFBL0IsRUFBYjtBQUNBLENBSEQ7QUFLQWIsR0FBRyxDQUFDa0IsTUFBSixDQUFXYixJQUFYLEVBQWdCLFlBQUk7QUFDbkJjLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaLEVBQW9DZixJQUFwQztBQUNBLENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC8iLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKVxuXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxuXG4vL2Nvbm5lY3QgZGJcbmNvbnN0IGNvbm5lY3RfZGIgPSByZXF1aXJlKCcuL2RiJylcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5cbi8vIGltcG9ydCBSb3V0ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IHJvb3RSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9pbmRleC5yb3V0ZScpXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuYXBwLnVzZShjb3JzKCkpXG4vLyBwYXJzZSBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQgXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUXG5cbi8vIGNvbmdpZmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdwdWcnKVxuLy9hcHAuc2V0KCd2aWV3cycsICcuL3ZpZXdzJylcblxuLy8gUm91dGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmFwcC51c2UoJy8nLCByb290Um91dGVyKVxuXG5hcHAuZ2V0KCcvYXBpL2ltYWdlLzpuYW1lJyxmdW5jdGlvbihyZXEsIHJlcyl7XG5cdGxldCBmaWxlTmFtZSA9IHJlcS5wYXJhbXMubmFtZVxuXHRyZXMuc2VuZEZpbGUocGF0aC5yZXNvbHZlKGAuL2Fzc2V0cy9pbWFnZS8ke2ZpbGVOYW1lfWApKTtcbn0pXG5cbmFwcC5saXN0ZW4ocG9ydCwoKT0+e1xuXHRjb25zb2xlLmxvZygnU3RhcnQgc2VydmVyIHBvcnQgPSAnLCBwb3J0KVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "nodemailer",
        "cors",
        "express",
        "bodyParser",
        "connect_db",
        "path",
        "rootRouter",
        "app",
        "use",
        "urlencoded",
        "extended",
        "json",
        "port",
        "process",
        "env",
        "PORT",
        "set",
        "get",
        "req",
        "res",
        "fileName",
        "params",
        "name",
        "sendFile",
        "resolve",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,IAAMM,UAAU,GAAGN,OAAO,CAAC,MAAD,CAA1B;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAAlB,C,CAEA;;;AACA,IAAMQ,UAAU,GAAGR,OAAO,CAAC,sBAAD,CAA1B;;AAEA,IAAMS,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQP,IAAI,EAAZ,E,CACA;;AACAM,GAAG,CAACC,GAAJ,CAAQL,UAAU,CAACM,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQL,UAAU,CAACQ,IAAX,EAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAzB,C,CAEA;;AACAR,GAAG,CAACS,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CACA;AAEA;;AACAT,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,UAAb;AAEAC,GAAG,CAACU,GAAJ,CAAQ,kBAAR,EAA2B,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC5C,MAAIC,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAWC,IAA1B;AACAH,EAAAA,GAAG,CAACI,QAAJ,CAAalB,IAAI,CAACmB,OAAL,0BAA+BJ,QAA/B,EAAb;AACA,CAHD;AAKAb,GAAG,CAACkB,MAAJ,CAAWb,IAAX,EAAgB,YAAI;AACnBc,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCf,IAApC;AACA,CAFD",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/",
      "sourcesContent": [
        "require('dotenv').config();\n\nconst nodemailer = require('nodemailer')\n\nconst cors = require('cors')\nconst express = require('express')\nconst bodyParser = require('body-parser')\n\n//connect db\nconst connect_db = require('./db')\nvar path = require('path')\n\n// import Route ------------------------------------------------------------------------\nconst rootRouter = require('./routes/index.route')\n\nconst app = express()\napp.use(cors())\n// parse application/x-www-form-urlencoded \napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\nconst port = process.env.PORT\n\n// congifg ------------------------------------------------------------------------------\napp.set('view engine', 'pug')\n//app.set('views', './views')\n\n// Route --------------------------------------------------------------------------------\napp.use('/', rootRouter)\n\napp.get('/api/image/:name',function(req, res){\n\tlet fileName = req.params.name\n\tres.sendFile(path.resolve(`./assets/image/${fileName}`));\n})\n\napp.listen(port,()=>{\n\tconsole.log('Start server port = ', port)\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1608444297841
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/db.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/db.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar connect = mongoose.connect('mongodb://localhost/luanvan_d', {\n  useNewUrlParser: true\n}).then(function () {\n  return console.log(\"connect\");\n});\nmodule.exports = connect;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFNQyxPQUFPLEdBQUdGLFFBQVEsQ0FBQ0UsT0FBVCxDQUFpQiwrQkFBakIsRUFBa0Q7QUFBQ0MsRUFBQUEsZUFBZSxFQUFFO0FBQWxCLENBQWxELEVBQ2ZDLElBRGUsQ0FDVjtBQUFBLFNBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosQ0FBSjtBQUFBLENBRFUsQ0FBaEI7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixPQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgY29ubmVjdCA9IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3QvbHVhbnZhbl9kJywge3VzZU5ld1VybFBhcnNlcjogdHJ1ZX0pXG4udGhlbigoKT0+Y29uc29sZS5sb2coXCJjb25uZWN0XCIpKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbm5lY3RcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "require",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,OAAO,GAAGF,QAAQ,CAACE,OAAT,CAAiB,+BAAjB,EAAkD;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAlD,EACfC,IADe,CACV;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAJ;AAAA,CADU,CAAhB;AAGAC,MAAM,CAACC,OAAP,GAAiBN,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\nconst connect = mongoose.connect('mongodb://localhost/luanvan_d', {useNewUrlParser: true})\n.then(()=>console.log(\"connect\"))\n\nmodule.exports = connect\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1602683317658
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/index.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/index.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/index.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/index.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "index.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar rootRouter = express.Router(); //----------------------------------------------------------\n//const nguoidung = require('./nguoidung.route')\n\nvar cauhoi = require('./cauhoi.route');\n\nvar phuongan = require('./phuongan.route');\n\nvar mon = require('./mon.route');\n\nvar dethi = require('./dethi.route');\n\nvar kithi = require('./kithi.route');\n\nvar nhom = require('./nhom.route');\n\nvar taikhoan = require('./taikhoan.route');\n\nvar thongbao = require('./thongbao.route');\n\nvar baithi = require('./baithi.route');\n\nvar cauhoibaithi = require('./cauhoibaithi.route');\n\nvar phuonganbaithi = require('./phuonganbaithi.route');\n\nvar sendmail = require('./sendmail.route'); //----------------------------------------------------------\n//rootRouter.use('/api/nguoidung', nguoidung)\n\n\nrootRouter.use('/api/cau-hoi', cauhoi);\nrootRouter.use('/api/phuongan', phuongan);\nrootRouter.use('/api/mon', mon);\nrootRouter.use('/api/de-thi', dethi);\nrootRouter.use('/api/ki-thi', kithi);\nrootRouter.use('/api/nhom', nhom);\nrootRouter.use('/api/tai-khoan', taikhoan);\nrootRouter.use('/api/thong-bao', thongbao);\nrootRouter.use('/api/bai-thi', baithi);\nrootRouter.use('/api/cau-hoi-bai-thi', cauhoibaithi);\nrootRouter.use('/api/phuong-an-bai-thi', phuonganbaithi);\nrootRouter.use('/api/sendmail', sendmail); //----------------------------------------------------------\n\nmodule.exports = rootRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm9vdFJvdXRlciIsIlJvdXRlciIsImNhdWhvaSIsInBodW9uZ2FuIiwibW9uIiwiZGV0aGkiLCJraXRoaSIsIm5ob20iLCJ0YWlraG9hbiIsInRob25nYmFvIiwiYmFpdGhpIiwiY2F1aG9pYmFpdGhpIiwicGh1b25nYW5iYWl0aGkiLCJzZW5kbWFpbCIsInVzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQ0EsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFuQixDLENBQ0E7QUFFQTs7QUFDQSxJQUFNQyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFDQSxJQUFNSSxRQUFRLEdBQUdKLE9BQU8sQ0FBQyxrQkFBRCxDQUF4Qjs7QUFDQSxJQUFNSyxHQUFHLEdBQUdMLE9BQU8sQ0FBQyxhQUFELENBQW5COztBQUNBLElBQU1NLEtBQUssR0FBR04sT0FBTyxDQUFDLGVBQUQsQ0FBckI7O0FBQ0EsSUFBTU8sS0FBSyxHQUFHUCxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFDQSxJQUFNUSxJQUFJLEdBQUdSLE9BQU8sQ0FBQyxjQUFELENBQXBCOztBQUNBLElBQU1TLFFBQVEsR0FBR1QsT0FBTyxDQUFDLGtCQUFELENBQXhCOztBQUNBLElBQU1VLFFBQVEsR0FBR1YsT0FBTyxDQUFDLGtCQUFELENBQXhCOztBQUNBLElBQU1XLE1BQU0sR0FBR1gsT0FBTyxDQUFDLGdCQUFELENBQXRCOztBQUNBLElBQU1ZLFlBQVksR0FBR1osT0FBTyxDQUFDLHNCQUFELENBQTVCOztBQUNBLElBQU1hLGNBQWMsR0FBR2IsT0FBTyxDQUFDLHdCQUFELENBQTlCOztBQUNBLElBQU1jLFFBQVEsR0FBR2QsT0FBTyxDQUFDLGtCQUFELENBQXhCLEMsQ0FDQTtBQUVBOzs7QUFDQUMsVUFBVSxDQUFDYyxHQUFYLENBQWUsY0FBZixFQUErQlosTUFBL0I7QUFDQUYsVUFBVSxDQUFDYyxHQUFYLENBQWUsZUFBZixFQUFnQ1gsUUFBaEM7QUFDQUgsVUFBVSxDQUFDYyxHQUFYLENBQWUsVUFBZixFQUEyQlYsR0FBM0I7QUFDQUosVUFBVSxDQUFDYyxHQUFYLENBQWUsYUFBZixFQUE4QlQsS0FBOUI7QUFDQUwsVUFBVSxDQUFDYyxHQUFYLENBQWUsYUFBZixFQUE4QlIsS0FBOUI7QUFDQU4sVUFBVSxDQUFDYyxHQUFYLENBQWUsV0FBZixFQUE0QlAsSUFBNUI7QUFDQVAsVUFBVSxDQUFDYyxHQUFYLENBQWUsZ0JBQWYsRUFBaUNOLFFBQWpDO0FBQ0FSLFVBQVUsQ0FBQ2MsR0FBWCxDQUFlLGdCQUFmLEVBQWlDTCxRQUFqQztBQUNBVCxVQUFVLENBQUNjLEdBQVgsQ0FBZSxjQUFmLEVBQStCSixNQUEvQjtBQUNBVixVQUFVLENBQUNjLEdBQVgsQ0FBZSxzQkFBZixFQUF1Q0gsWUFBdkM7QUFDQVgsVUFBVSxDQUFDYyxHQUFYLENBQWUsd0JBQWYsRUFBeUNGLGNBQXpDO0FBQ0FaLFVBQVUsQ0FBQ2MsR0FBWCxDQUFlLGVBQWYsRUFBZ0NELFFBQWhDLEUsQ0FFQTs7QUFDQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsVUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb290Um91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vY29uc3Qgbmd1b2lkdW5nID0gcmVxdWlyZSgnLi9uZ3VvaWR1bmcucm91dGUnKVxuY29uc3QgY2F1aG9pID0gcmVxdWlyZSgnLi9jYXVob2kucm91dGUnKVxuY29uc3QgcGh1b25nYW4gPSByZXF1aXJlKCcuL3BodW9uZ2FuLnJvdXRlJylcbmNvbnN0IG1vbiA9IHJlcXVpcmUoJy4vbW9uLnJvdXRlJylcbmNvbnN0IGRldGhpID0gcmVxdWlyZSgnLi9kZXRoaS5yb3V0ZScpXG5jb25zdCBraXRoaSA9IHJlcXVpcmUoJy4va2l0aGkucm91dGUnKVxuY29uc3QgbmhvbSA9IHJlcXVpcmUoJy4vbmhvbS5yb3V0ZScpXG5jb25zdCB0YWlraG9hbiA9IHJlcXVpcmUoJy4vdGFpa2hvYW4ucm91dGUnKVxuY29uc3QgdGhvbmdiYW8gPSByZXF1aXJlKCcuL3Rob25nYmFvLnJvdXRlJylcbmNvbnN0IGJhaXRoaSA9IHJlcXVpcmUoJy4vYmFpdGhpLnJvdXRlJylcbmNvbnN0IGNhdWhvaWJhaXRoaSA9IHJlcXVpcmUoJy4vY2F1aG9pYmFpdGhpLnJvdXRlJylcbmNvbnN0IHBodW9uZ2FuYmFpdGhpID0gcmVxdWlyZSgnLi9waHVvbmdhbmJhaXRoaS5yb3V0ZScpXG5jb25zdCBzZW5kbWFpbCA9IHJlcXVpcmUoJy4vc2VuZG1haWwucm91dGUnKVxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vcm9vdFJvdXRlci51c2UoJy9hcGkvbmd1b2lkdW5nJywgbmd1b2lkdW5nKVxucm9vdFJvdXRlci51c2UoJy9hcGkvY2F1LWhvaScsIGNhdWhvaSlcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL3BodW9uZ2FuJywgcGh1b25nYW4pXG5yb290Um91dGVyLnVzZSgnL2FwaS9tb24nLCBtb24pXG5yb290Um91dGVyLnVzZSgnL2FwaS9kZS10aGknLCBkZXRoaSlcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL2tpLXRoaScsIGtpdGhpKVxucm9vdFJvdXRlci51c2UoJy9hcGkvbmhvbScsIG5ob20pXG5yb290Um91dGVyLnVzZSgnL2FwaS90YWkta2hvYW4nLCB0YWlraG9hbilcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL3Rob25nLWJhbycsIHRob25nYmFvKVxucm9vdFJvdXRlci51c2UoJy9hcGkvYmFpLXRoaScsIGJhaXRoaSlcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL2NhdS1ob2ktYmFpLXRoaScsIGNhdWhvaWJhaXRoaSlcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL3BodW9uZy1hbi1iYWktdGhpJywgcGh1b25nYW5iYWl0aGkpXG5yb290Um91dGVyLnVzZSgnL2FwaS9zZW5kbWFpbCcsIHNlbmRtYWlsKVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbm1vZHVsZS5leHBvcnRzID0gcm9vdFJvdXRlclxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.route.js"
      ],
      "names": [
        "express",
        "require",
        "rootRouter",
        "Router",
        "cauhoi",
        "phuongan",
        "mon",
        "dethi",
        "kithi",
        "nhom",
        "taikhoan",
        "thongbao",
        "baithi",
        "cauhoibaithi",
        "phuonganbaithi",
        "sendmail",
        "use",
        "module",
        "exports"
      ],
      "mappings": ";;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,EAAnB,C,CACA;AAEA;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMK,GAAG,GAAGL,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAC,eAAD,CAArB;;AACA,IAAMO,KAAK,GAAGP,OAAO,CAAC,eAAD,CAArB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,cAAD,CAApB;;AACA,IAAMS,QAAQ,GAAGT,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMU,QAAQ,GAAGV,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMW,MAAM,GAAGX,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMY,YAAY,GAAGZ,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAMa,cAAc,GAAGb,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAMc,QAAQ,GAAGd,OAAO,CAAC,kBAAD,CAAxB,C,CACA;AAEA;;;AACAC,UAAU,CAACc,GAAX,CAAe,cAAf,EAA+BZ,MAA/B;AACAF,UAAU,CAACc,GAAX,CAAe,eAAf,EAAgCX,QAAhC;AACAH,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2BV,GAA3B;AACAJ,UAAU,CAACc,GAAX,CAAe,aAAf,EAA8BT,KAA9B;AACAL,UAAU,CAACc,GAAX,CAAe,aAAf,EAA8BR,KAA9B;AACAN,UAAU,CAACc,GAAX,CAAe,WAAf,EAA4BP,IAA5B;AACAP,UAAU,CAACc,GAAX,CAAe,gBAAf,EAAiCN,QAAjC;AACAR,UAAU,CAACc,GAAX,CAAe,gBAAf,EAAiCL,QAAjC;AACAT,UAAU,CAACc,GAAX,CAAe,cAAf,EAA+BJ,MAA/B;AACAV,UAAU,CAACc,GAAX,CAAe,sBAAf,EAAuCH,YAAvC;AACAX,UAAU,CAACc,GAAX,CAAe,wBAAf,EAAyCF,cAAzC;AACAZ,UAAU,CAACc,GAAX,CAAe,eAAf,EAAgCD,QAAhC,E,CAEA;;AACAE,MAAM,CAACC,OAAP,GAAiBhB,UAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "\nconst express = require('express')\nconst rootRouter = express.Router()\n//----------------------------------------------------------\n\n//const nguoidung = require('./nguoidung.route')\nconst cauhoi = require('./cauhoi.route')\nconst phuongan = require('./phuongan.route')\nconst mon = require('./mon.route')\nconst dethi = require('./dethi.route')\nconst kithi = require('./kithi.route')\nconst nhom = require('./nhom.route')\nconst taikhoan = require('./taikhoan.route')\nconst thongbao = require('./thongbao.route')\nconst baithi = require('./baithi.route')\nconst cauhoibaithi = require('./cauhoibaithi.route')\nconst phuonganbaithi = require('./phuonganbaithi.route')\nconst sendmail = require('./sendmail.route')\n//----------------------------------------------------------\n\n//rootRouter.use('/api/nguoidung', nguoidung)\nrootRouter.use('/api/cau-hoi', cauhoi)\nrootRouter.use('/api/phuongan', phuongan)\nrootRouter.use('/api/mon', mon)\nrootRouter.use('/api/de-thi', dethi)\nrootRouter.use('/api/ki-thi', kithi)\nrootRouter.use('/api/nhom', nhom)\nrootRouter.use('/api/tai-khoan', taikhoan)\nrootRouter.use('/api/thong-bao', thongbao)\nrootRouter.use('/api/bai-thi', baithi)\nrootRouter.use('/api/cau-hoi-bai-thi', cauhoibaithi)\nrootRouter.use('/api/phuong-an-bai-thi', phuonganbaithi)\nrootRouter.use('/api/sendmail', sendmail)\n\n//----------------------------------------------------------\nmodule.exports = rootRouter\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1608444326662
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/cauhoi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/cauhoi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/cauhoi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/cauhoi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "cauhoi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cauhoi = _interopRequireDefault(require(\"../controllers/cauhoi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _cauhoi[\"default\"].index); // cau hoi cua mon\n\nrouter.get('/mon/:_idmon', _cauhoi[\"default\"].questionOfSubject); //detail \n\nrouter.get('/detail/:id', _cauhoi[\"default\"].detail);\nrouter.get('/de-thi/:_iddethi', _cauhoi[\"default\"].cauhoiCuaDethi); // {noi dung, phuongans[]}\n\nrouter.post('/them', _cauhoi[\"default\"].themCauHoi);\nrouter.post('/mon', _cauhoi[\"default\"].cauHoiCuaMon);\nrouter.post('/them-nhieu', _cauhoi[\"default\"].themCauHoiNhieu); // delete cau  hoi\n\nrouter[\"delete\"]('/:id', _cauhoi[\"default\"].destroy);\nrouter.post('/remove', _cauhoi[\"default\"].removeCauHoi); // import cau hoi\n\nrouter.post('/import', _cauhoi[\"default\"][\"import\"]);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaS5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJxdWVzdGlvbk9mU3ViamVjdCIsImRldGFpbCIsImNhdWhvaUN1YURldGhpIiwicG9zdCIsInRoZW1DYXVIb2kiLCJjYXVIb2lDdWFNb24iLCJ0aGVtQ2F1SG9pTmhpZXUiLCJkZXN0cm95IiwicmVtb3ZlQ2F1SG9pIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxtQkFBWUMsS0FBNUIsRSxDQUVBOztBQUNBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxjQUFYLEVBQTJCQyxtQkFBWUUsaUJBQXZDLEUsQ0FDQTs7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsYUFBWCxFQUEwQkMsbUJBQVlHLE1BQXRDO0FBRUFOLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLG1CQUFYLEVBQWdDQyxtQkFBWUksY0FBNUMsRSxDQUVBOztBQUNBUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxPQUFaLEVBQXFCTCxtQkFBWU0sVUFBakM7QUFDQVQsTUFBTSxDQUFDUSxJQUFQLENBQVksTUFBWixFQUFvQkwsbUJBQVlPLFlBQWhDO0FBQ0FWLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGFBQVosRUFBMkJMLG1CQUFZUSxlQUF2QyxFLENBQ0E7O0FBQ0FYLE1BQU0sVUFBTixDQUFjLE1BQWQsRUFBc0JHLG1CQUFZUyxPQUFsQztBQUVBWixNQUFNLENBQUNRLElBQVAsQ0FBWSxTQUFaLEVBQXVCTCxtQkFBWVUsWUFBbkMsRSxDQUVBOztBQUNBYixNQUFNLENBQUNRLElBQVAsQ0FBWSxTQUFaLEVBQXVCTCw0QkFBdkI7QUFJQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy9jYXVob2kuY29udHJvbGxlcidcblxucm91dGVyLmdldCgnLycsIGNvbnRyb2xsZXJzLmluZGV4KVxuXG4vLyBjYXUgaG9pIGN1YSBtb25cbnJvdXRlci5nZXQoJy9tb24vOl9pZG1vbicsIGNvbnRyb2xsZXJzLnF1ZXN0aW9uT2ZTdWJqZWN0KVxuLy9kZXRhaWwgXG5yb3V0ZXIuZ2V0KCcvZGV0YWlsLzppZCcsIGNvbnRyb2xsZXJzLmRldGFpbClcblxucm91dGVyLmdldCgnL2RlLXRoaS86X2lkZGV0aGknLCBjb250cm9sbGVycy5jYXVob2lDdWFEZXRoaSlcblxuLy8ge25vaSBkdW5nLCBwaHVvbmdhbnNbXX1cbnJvdXRlci5wb3N0KCcvdGhlbScsIGNvbnRyb2xsZXJzLnRoZW1DYXVIb2kpXG5yb3V0ZXIucG9zdCgnL21vbicsIGNvbnRyb2xsZXJzLmNhdUhvaUN1YU1vbilcbnJvdXRlci5wb3N0KCcvdGhlbS1uaGlldScsIGNvbnRyb2xsZXJzLnRoZW1DYXVIb2lOaGlldSlcbi8vIGRlbGV0ZSBjYXUgIGhvaVxucm91dGVyLmRlbGV0ZSgnLzppZCcsIGNvbnRyb2xsZXJzLmRlc3Ryb3kpXG5cbnJvdXRlci5wb3N0KCcvcmVtb3ZlJywgY29udHJvbGxlcnMucmVtb3ZlQ2F1SG9pKVxuXG4vLyBpbXBvcnQgY2F1IGhvaVxucm91dGVyLnBvc3QoJy9pbXBvcnQnLCBjb250cm9sbGVycy5pbXBvcnQpXG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "questionOfSubject",
        "detail",
        "cauhoiCuaDethi",
        "post",
        "themCauHoi",
        "cauHoiCuaMon",
        "themCauHoiNhieu",
        "destroy",
        "removeCauHoi",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,mBAAYC,KAA5B,E,CAEA;;AACAJ,MAAM,CAACE,GAAP,CAAW,cAAX,EAA2BC,mBAAYE,iBAAvC,E,CACA;;AACAL,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0BC,mBAAYG,MAAtC;AAEAN,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,mBAAYI,cAA5C,E,CAEA;;AACAP,MAAM,CAACQ,IAAP,CAAY,OAAZ,EAAqBL,mBAAYM,UAAjC;AACAT,MAAM,CAACQ,IAAP,CAAY,MAAZ,EAAoBL,mBAAYO,YAAhC;AACAV,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,mBAAYQ,eAAvC,E,CACA;;AACAX,MAAM,UAAN,CAAc,MAAd,EAAsBG,mBAAYS,OAAlC;AAEAZ,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBL,mBAAYU,YAAnC,E,CAEA;;AACAb,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBL,4BAAvB;AAIAW,MAAM,CAACC,OAAP,GAAiBf,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/cauhoi.controller'\n\nrouter.get('/', controllers.index)\n\n// cau hoi cua mon\nrouter.get('/mon/:_idmon', controllers.questionOfSubject)\n//detail \nrouter.get('/detail/:id', controllers.detail)\n\nrouter.get('/de-thi/:_iddethi', controllers.cauhoiCuaDethi)\n\n// {noi dung, phuongans[]}\nrouter.post('/them', controllers.themCauHoi)\nrouter.post('/mon', controllers.cauHoiCuaMon)\nrouter.post('/them-nhieu', controllers.themCauHoiNhieu)\n// delete cau  hoi\nrouter.delete('/:id', controllers.destroy)\n\nrouter.post('/remove', controllers.removeCauHoi)\n\n// import cau hoi\nrouter.post('/import', controllers.import)\n\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1610333135969
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/cauhoi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/cauhoi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/cauhoi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/cauhoi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "cauhoi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar DeThi = require('../models/dethi.model');\n\nvar Mon = require('../models/mon.model');\n\nvar PhuongAn = require('../models/phuongan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var cauhois;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return CauHoi.find().populate('mon').populate('phuongans');\n\n            case 2:\n              cauhois = _context.sent;\n              res.send({\n                cauhois: cauhois\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idcauhoi, cauhoi;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _idcauhoi = req.params.id;\n              _context2.next = 3;\n              return CauHoi.findById(_idcauhoi);\n\n            case 3:\n              cauhoi = _context2.sent;\n              res.send(cauhoi);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function detail(_x3, _x4) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  // cau hoi cua mon\n  questionOfSubject: function () {\n    var _questionOfSubject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idmon, _cauhois;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _idmon = req.params._idmon;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return CauHoi.find({\n                mon: _idmon\n              }).populate('phuongans');\n\n            case 4:\n              _cauhois = _context3.sent;\n              res.send(_cauhois);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    function questionOfSubject(_x5, _x6) {\n      return _questionOfSubject.apply(this, arguments);\n    }\n\n    return questionOfSubject;\n  }(),\n  cauhoiCuaDethi: function () {\n    var _cauhoiCuaDethi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _iddethi, _cauhois2, dethi;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _iddethi = req.params._iddethi;\n              _context4.prev = 1;\n              _cauhois2 = []; //const dethi = await DeThi.findById(_iddethi).populate('cauhois').select('cauhois')\n\n              _context4.next = 5;\n              return DeThi.findById(_iddethi).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 5:\n              dethi = _context4.sent;\n\n              _cauhois2.push(dethi);\n\n              res.send(_cauhois2);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](1);\n              res.send(_context4.t0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 10]]);\n    }));\n\n    function cauhoiCuaDethi(_x7, _x8) {\n      return _cauhoiCuaDethi.apply(this, arguments);\n    }\n\n    return cauhoiCuaDethi;\n  }(),\n  // add cau hoi \n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body, tieude, noidung, phuongan, loai, mon, cauhoi;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body = req.body, tieude = _req$body.tieude, noidung = _req$body.noidung, phuongan = _req$body.phuongan, loai = _req$body.loai, mon = _req$body.mon; // let ma = req.body.ma\n              // let ten = req.body.ten\n\n              _context6.next = 3;\n              return new Cauhoi({\n                ma: shortid.generate(),\n                tieude: tieude,\n                noidung: noidung,\n                loai: loai,\n                phuongan: phuongan,\n                mon: mon,\n                trangthai: 1\n              });\n\n            case 3:\n              cauhoi = _context6.sent;\n\n              try {\n                cauhoi.save().then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(respone) {\n                    var p_mon, result;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return Mon.findById(mon);\n\n                          case 2:\n                            p_mon = _context5.sent;\n                            p_mon.cauhois.push(respone._id);\n                            p_mon.save();\n                            _context5.next = 7;\n                            return CauHoi.find().populate('mon');\n\n                          case 7:\n                            result = _context5.sent;\n                            res.json({\n                              result: \"success\",\n                              data: result\n                            });\n\n                          case 9:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x11) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (err) {\n                res.json({\n                  error: error\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function post(_x9, _x10) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // add question\n  themCauHoi: function () {\n    var _themCauHoi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n      var _req$body2, noidung, phuongans, _idmon, cauhoi;\n\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _req$body2 = req.body, noidung = _req$body2.noidung, phuongans = _req$body2.phuongans, _idmon = _req$body2._idmon;\n              _context11.next = 4;\n              return new CauHoi({\n                noidung: noidung,\n                mon: _idmon,\n                trangthai: 1\n              });\n\n            case 4:\n              cauhoi = _context11.sent;\n              cauhoi.save().then( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(respone) {\n                  var mon, array;\n                  return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return Mon.findById(_idmon);\n\n                        case 2:\n                          mon = _context10.sent;\n                          mon.cauhois.push(respone._id);\n                          mon.save();\n                          array = [];\n                          phuongans.forEach( /*#__PURE__*/function () {\n                            var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(pa, idx) {\n                              var phuongan;\n                              return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                                while (1) {\n                                  switch (_context9.prev = _context9.next) {\n                                    case 0:\n                                      _context9.next = 2;\n                                      return new PhuongAn({\n                                        ten: pa.ten,\n                                        noidung: pa.noidung,\n                                        dapan: pa.dapan,\n                                        cauhoi: respone._id\n                                      });\n\n                                    case 2:\n                                      phuongan = _context9.sent;\n                                      phuongan.save().then( /*#__PURE__*/function () {\n                                        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(result_pa) {\n                                          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                            while (1) {\n                                              switch (_context8.prev = _context8.next) {\n                                                case 0:\n                                                  array.push(result_pa._id);\n\n                                                  if (idx === 3) {\n                                                    respone.phuongans = array;\n                                                    respone.save().then( /*#__PURE__*/function () {\n                                                      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(result) {\n                                                        var result_cauhoi, result_mon;\n                                                        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                                          while (1) {\n                                                            switch (_context7.prev = _context7.next) {\n                                                              case 0:\n                                                                _context7.next = 2;\n                                                                return CauHoi.findById(result._id).populate('phuongans');\n\n                                                              case 2:\n                                                                result_cauhoi = _context7.sent;\n                                                                _context7.next = 5;\n                                                                return Mon.findById(_idmon).populate({\n                                                                  path: 'cauhois',\n                                                                  model: 'CauHoi',\n                                                                  populate: {\n                                                                    path: 'phuongans',\n                                                                    model: 'PhuongAn'\n                                                                  }\n                                                                });\n\n                                                              case 5:\n                                                                result_mon = _context7.sent;\n                                                                res.send({\n                                                                  cauhoi: result_cauhoi,\n                                                                  mon: result_mon\n                                                                });\n\n                                                              case 7:\n                                                              case \"end\":\n                                                                return _context7.stop();\n                                                            }\n                                                          }\n                                                        }, _callee7);\n                                                      }));\n\n                                                      return function (_x18) {\n                                                        return _ref5.apply(this, arguments);\n                                                      };\n                                                    }());\n                                                  }\n\n                                                case 2:\n                                                case \"end\":\n                                                  return _context8.stop();\n                                              }\n                                            }\n                                          }, _callee8);\n                                        }));\n\n                                        return function (_x17) {\n                                          return _ref4.apply(this, arguments);\n                                        };\n                                      }());\n\n                                    case 4:\n                                    case \"end\":\n                                      return _context9.stop();\n                                  }\n                                }\n                              }, _callee9);\n                            }));\n\n                            return function (_x15, _x16) {\n                              return _ref3.apply(this, arguments);\n                            };\n                          }());\n\n                        case 7:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function (_x14) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              _context11.next = 11;\n              break;\n\n            case 8:\n              _context11.prev = 8;\n              _context11.t0 = _context11[\"catch\"](0);\n              res.send(_context11.t0);\n\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 8]]);\n    }));\n\n    function themCauHoi(_x12, _x13) {\n      return _themCauHoi.apply(this, arguments);\n    }\n\n    return themCauHoi;\n  }(),\n  themCauHoiNhieu: function () {\n    var _themCauHoiNhieu = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n      var _req$body3, _idmon, arrCauhoi, mon, arr, newArray;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              // data _ array lable, value:_idcauhoi\n              _req$body3 = req.body, _idmon = _req$body3._idmon, arrCauhoi = _req$body3.arrCauhoi;\n              _context13.next = 4;\n              return Mon.findById(_idmon);\n\n            case 4:\n              mon = _context13.sent;\n\n              if (arrCauhoi.length > 0) {\n                arr = [];\n                arrCauhoi.forEach(function (cauhoi) {\n                  arr.push(cauhoi.value);\n                }); //const newArray = arr.concat(mon.cauhois)\n\n                newArray = mon.cauhois.concat(arr);\n                mon.cauhois = newArray;\n                mon.save().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                  var result;\n                  return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                    while (1) {\n                      switch (_context12.prev = _context12.next) {\n                        case 0:\n                          _context12.next = 2;\n                          return Mon.findById(_idmon).populate({\n                            path: 'cauhois',\n                            model: 'CauHoi',\n                            populate: {\n                              path: 'phuongans',\n                              model: 'PhuongAn'\n                            }\n                          });\n\n                        case 2:\n                          result = _context12.sent;\n                          res.send({\n                            mon: result\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context12.stop();\n                      }\n                    }\n                  }, _callee12);\n                })));\n              }\n\n              _context13.next = 11;\n              break;\n\n            case 8:\n              _context13.prev = 8;\n              _context13.t0 = _context13[\"catch\"](0);\n              res.send(_context13.t0);\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 8]]);\n    }));\n\n    function themCauHoiNhieu(_x19, _x20) {\n      return _themCauHoiNhieu.apply(this, arguments);\n    }\n\n    return themCauHoiNhieu;\n  }(),\n  // import cau hoi {_idmon, cauhois[]}\n  \"import\": function () {\n    var _import2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n      var arr, _req$body4, _idmon, _cauhois3;\n\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              arr = ['A', 'B', 'C', 'D'];\n\n              try {\n                _req$body4 = req.body, _idmon = _req$body4._idmon, _cauhois3 = _req$body4.cauhois;\n\n                if (_cauhois3.length > 0) {\n                  _cauhois3.forEach( /*#__PURE__*/function () {\n                    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(item) {\n                      var arrPA, cauhoi, mon, respone, phuongana, phuonganb, phuonganc, phuongand, result_paa, result_pab, result_pac, result_pad;\n                      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                        while (1) {\n                          switch (_context14.prev = _context14.next) {\n                            case 0:\n                              arrPA = [];\n                              _context14.next = 3;\n                              return new CauHoi({\n                                noidung: item['Nội dung'],\n                                mon: _idmon,\n                                trangthai: 1\n                              });\n\n                            case 3:\n                              cauhoi = _context14.sent;\n                              _context14.next = 6;\n                              return Mon.findById(_idmon);\n\n                            case 6:\n                              mon = _context14.sent;\n                              _context14.next = 9;\n                              return cauhoi.save();\n\n                            case 9:\n                              respone = _context14.sent;\n                              mon.cauhois.push(respone._id);\n                              mon.save();\n                              _context14.next = 14;\n                              return new PhuongAn({\n                                ten: 'A',\n                                noidung: item['Phương án A'],\n                                dapan: item['Đáp án'] === 'A' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 14:\n                              phuongana = _context14.sent;\n                              _context14.next = 17;\n                              return new PhuongAn({\n                                ten: 'B',\n                                noidung: item['Phương án B'],\n                                dapan: item['Đáp án'] === 'B' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 17:\n                              phuonganb = _context14.sent;\n                              _context14.next = 20;\n                              return new PhuongAn({\n                                ten: 'C',\n                                noidung: item['Phương án C'],\n                                dapan: item['Đáp án'] === 'C' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 20:\n                              phuonganc = _context14.sent;\n                              _context14.next = 23;\n                              return new PhuongAn({\n                                ten: 'D',\n                                noidung: item['Phương án D'],\n                                dapan: item['Đáp án'] === 'D' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 23:\n                              phuongand = _context14.sent;\n                              _context14.next = 26;\n                              return phuongana.save();\n\n                            case 26:\n                              result_paa = _context14.sent;\n                              arrPA.push(result_paa._id);\n                              _context14.next = 30;\n                              return phuonganb.save();\n\n                            case 30:\n                              result_pab = _context14.sent;\n                              arrPA.push(result_pab._id);\n                              _context14.next = 34;\n                              return phuonganc.save();\n\n                            case 34:\n                              result_pac = _context14.sent;\n                              arrPA.push(result_pac._id);\n                              _context14.next = 38;\n                              return phuongand.save();\n\n                            case 38:\n                              result_pad = _context14.sent;\n                              arrPA.push(result_pad._id);\n                              respone.phuongans = arrPA;\n                              respone.save();\n\n                            case 42:\n                            case \"end\":\n                              return _context14.stop();\n                          }\n                        }\n                      }, _callee14);\n                    }));\n\n                    return function (_x23) {\n                      return _ref7.apply(this, arguments);\n                    };\n                  }());\n                } //res.end()\t\n\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 2:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    function _import(_x21, _x22) {\n      return _import2.apply(this, arguments);\n    }\n\n    return _import;\n  }(),\n  // delete cauhoi (id)\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n      var _idcauhoi, cauhoi, mon, newCauhoi;\n\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _idcauhoi = req.params.id;\n              res.send('ok');\n              _context17.next = 4;\n              return CauHoi.findById(_idcauhoi).populate('dethis');\n\n            case 4:\n              cauhoi = _context17.sent;\n              _context17.prev = 5;\n              _context17.next = 8;\n              return Mon.findById(cauhoi.mon);\n\n            case 8:\n              mon = _context17.sent;\n\n              if (mon.cauhois) {\n                newCauhoi = mon.cauhois.filter(function (x) {\n                  return \"\".concat(x) != _idcauhoi;\n                });\n                mon.cauhois = newCauhoi;\n                mon.save();\n              }\n\n              if (cauhoi.dethis.length > 0) {\n                cauhois.dethi.forEach( /*#__PURE__*/function () {\n                  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(item) {\n                    var dethi, newCauhoi;\n                    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _context16.next = 2;\n                            return DeThi.findById(item);\n\n                          case 2:\n                            dethi = _context16.sent;\n                            newCauhoi = dethi.filter(function (x) {\n                              return \"\".concat(x) != _idcauhoi;\n                            });\n                            dethi.cauhois = newCauhoi;\n                            dethi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x26) {\n                    return _ref8.apply(this, arguments);\n                  };\n                }());\n              } //res.send(cauhoi.mon)\n              //cauhoi.delete()\n\n\n              if (cauhoi.bailams.length === 0) {\n                cauhoi[\"delete\"]();\n              } else {\n                cauhoi.trangthai = 0;\n                cauhoi.save();\n              }\n\n              res.send('ok');\n              _context17.next = 18;\n              break;\n\n            case 15:\n              _context17.prev = 15;\n              _context17.t0 = _context17[\"catch\"](5);\n              res.send(_context17.t0);\n\n            case 18:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[5, 15]]);\n    }));\n\n    function destroy(_x24, _x25) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }(),\n  removeCauHoi: function () {\n    var _removeCauHoi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n      var ch, cauhoi, mon, newCauhois, phuongan, phuongans, result_mon;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              ch = req.body.ch;\n              _context20.prev = 1;\n              _context20.next = 4;\n              return CauHoi.findById(ch._id);\n\n            case 4:\n              cauhoi = _context20.sent;\n              _context20.next = 7;\n              return Mon.findById(ch.mon);\n\n            case 7:\n              mon = _context20.sent;\n              newCauhois = mon.cauhois.filter(function (x) {\n                return \"\".concat(x) !== ch.mon;\n              });\n              mon.cauhois = newCauhois;\n              mon.save(); // de thi\n\n              cauhoi.dethis.forEach( /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(dt, idx) {\n                  var dethi, newCauhoiDeThi;\n                  return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          _context18.next = 2;\n                          return DeThi.findById(dt);\n\n                        case 2:\n                          dethi = _context18.sent;\n                          newCauhoiDeThi = dethi.cauhois.filter(function (x) {\n                            return \"\".concat(x) !== ch._id;\n                          });\n                          dethi.cauhois = newCauhoiDeThi;\n                          dethi.save(); // if(idx === cauhoi.dethis.length-1){\n                          // }\n\n                        case 6:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, _callee18);\n                }));\n\n                return function (_x29, _x30) {\n                  return _ref9.apply(this, arguments);\n                };\n              }()); // phuong an\t\t\t\t\n\n              if (!(cauhoi.baithis.length === 0)) {\n                _context20.next = 19;\n                break;\n              }\n\n              _context20.next = 15;\n              return PhuongAn.deleteMany({\n                cauhoi: ch._id\n              });\n\n            case 15:\n              phuongan = _context20.sent;\n              cauhoi[\"delete\"]();\n              _context20.next = 25;\n              break;\n\n            case 19:\n              _context20.next = 21;\n              return PhuongAn.find({\n                cauhoi: ch._id\n              });\n\n            case 21:\n              phuongans = _context20.sent;\n              phuongans.forEach( /*#__PURE__*/function () {\n                var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(phuongan) {\n                  return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                    while (1) {\n                      switch (_context19.prev = _context19.next) {\n                        case 0:\n                          phuongan.trangthai = 0;\n                          phuongan.save();\n\n                        case 2:\n                        case \"end\":\n                          return _context19.stop();\n                      }\n                    }\n                  }, _callee19);\n                }));\n\n                return function (_x31) {\n                  return _ref10.apply(this, arguments);\n                };\n              }());\n              cauhoi.trangthai = 0;\n              cauhoi.save();\n\n            case 25:\n              _context20.next = 27;\n              return Mon.findById(ch.mon).populate('cauhois');\n\n            case 27:\n              result_mon = _context20.sent;\n              res.send({\n                mon: result_mon\n              });\n              _context20.next = 34;\n              break;\n\n            case 31:\n              _context20.prev = 31;\n              _context20.t0 = _context20[\"catch\"](1);\n              res.send(_context20.t0);\n\n            case 34:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[1, 31]]);\n    }));\n\n    function removeCauHoi(_x27, _x28) {\n      return _removeCauHoi.apply(this, arguments);\n    }\n\n    return removeCauHoi;\n  }(),\n  cauHoiCuaMon: function () {\n    var _cauHoiCuaMon = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(req, res) {\n      var _idmon, _cauhois4;\n\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.prev = 0;\n              _idmon = req.body._idmon;\n              _context21.next = 4;\n              return CauHoi.find({\n                mon: _idmon\n              }).populate({\n                path: 'phuongans',\n                model: 'PhuongAn'\n              });\n\n            case 4:\n              _cauhois4 = _context21.sent;\n              res.send({\n                cauhois: _cauhois4\n              });\n              _context21.next = 11;\n              break;\n\n            case 8:\n              _context21.prev = 8;\n              _context21.t0 = _context21[\"catch\"](0);\n              res.send(_context21.t0);\n\n            case 11:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, null, [[0, 8]]);\n    }));\n\n    function cauHoiCuaMon(_x32, _x33) {\n      return _cauHoiCuaMon.apply(this, arguments);\n    }\n\n    return cauHoiCuaMon;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi.controller.js"
      ],
      "names": [
        "CauHoi",
        "require",
        "DeThi",
        "Mon",
        "PhuongAn",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "cauhois",
        "send",
        "detail",
        "_idcauhoi",
        "params",
        "id",
        "findById",
        "cauhoi",
        "questionOfSubject",
        "_idmon",
        "mon",
        "cauhoiCuaDethi",
        "_iddethi",
        "path",
        "model",
        "dethi",
        "push",
        "post",
        "body",
        "tieude",
        "noidung",
        "phuongan",
        "loai",
        "Cauhoi",
        "ma",
        "generate",
        "trangthai",
        "save",
        "then",
        "respone",
        "p_mon",
        "_id",
        "result",
        "json",
        "data",
        "err",
        "error",
        "themCauHoi",
        "phuongans",
        "array",
        "forEach",
        "pa",
        "idx",
        "ten",
        "dapan",
        "result_pa",
        "result_cauhoi",
        "result_mon",
        "themCauHoiNhieu",
        "arrCauhoi",
        "length",
        "arr",
        "value",
        "newArray",
        "concat",
        "item",
        "arrPA",
        "phuongana",
        "phuonganb",
        "phuonganc",
        "phuongand",
        "result_paa",
        "result_pab",
        "result_pac",
        "result_pad",
        "destroy",
        "newCauhoi",
        "filter",
        "x",
        "dethis",
        "bailams",
        "removeCauHoi",
        "ch",
        "newCauhois",
        "dt",
        "newCauhoiDeThi",
        "baithis",
        "deleteMany",
        "cauHoiCuaMon",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMK,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBT,MAAM,CAACU,IAAP,GAAcC,QAAd,CAAuB,KAAvB,EAA8BA,QAA9B,CAAuC,WAAvC,CADhB;;AAAA;AACAC,cAAAA,OADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAACD,gBAAAA,OAAO,EAACA;AAAT,eAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAMfE,EAAAA,MAAM;AAAA,0EAAG,kBAAON,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFM,cAAAA,SADE,GACUP,GAAG,CAACQ,MAAJ,CAAWC,EADrB;AAAA;AAAA,qBAGajB,MAAM,CAACkB,QAAP,CAAgBH,SAAhB,CAHb;;AAAA;AAGFI,cAAAA,MAHE;AAIRV,cAAAA,GAAG,CAACI,IAAJ,CAASM,MAAT;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANS;AAYf;AACAC,EAAAA,iBAAiB;AAAA,qFAAG,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZY,cAAAA,MADY,GACFb,GAAG,CAACQ,MADF,CACZK,MADY;AAAA;AAAA;AAAA,qBAGErB,MAAM,CAACU,IAAP,CAAY;AAACY,gBAAAA,GAAG,EAACD;AAAL,eAAZ,EAA0BV,QAA1B,CAAmC,WAAnC,CAHF;;AAAA;AAGdC,cAAAA,QAHc;AAIlBH,cAAAA,GAAG,CAACI,IAAJ,CAASD,QAAT;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlBH,cAAAA,GAAG,CAACI,IAAJ;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAbF;AAuBfU,EAAAA,cAAc;AAAA,kFAAG,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTe,cAAAA,QADS,GACGhB,GAAG,CAACQ,MADP,CACTQ,QADS;AAAA;AAGXZ,cAAAA,SAHW,GAGD,EAHC,EAIf;;AAJe;AAAA,qBAKKV,KAAK,CAACgB,QAAN,CAAeM,QAAf,EAAyBb,QAAzB,CAAkC;AACrDc,gBAAAA,IAAI,EAAC,SADgD;AAErDC,gBAAAA,KAAK,EAAC,QAF+C;AAGrDf,gBAAAA,QAAQ,EAAC;AACRc,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH4C,eAAlC,CALL;;AAAA;AAKTC,cAAAA,KALS;;AAcff,cAAAA,SAAO,CAACgB,IAAR,CAAaD,KAAb;;AACAlB,cAAAA,GAAG,CAACI,IAAJ,CAASD,SAAT;AAfe;AAAA;;AAAA;AAAA;AAAA;AAiBfH,cAAAA,GAAG,CAACI,IAAJ;;AAjBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvBC;AA4Cf;AACAgB,EAAAA,IAAI;AAAA,wEAAE,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgDD,GAAG,CAACsB,IADpD,EACOC,MADP,aACOA,MADP,EACeC,OADf,aACeA,OADf,EACwBC,QADxB,aACwBA,QADxB,EACkCC,IADlC,aACkCA,IADlC,EACwCZ,GADxC,aACwCA,GADxC,EAGC;AACA;;AAJD;AAAA,qBAMgB,IAAIa,MAAJ,CAAW;AACtBC,gBAAAA,EAAE,EAAE/B,OAAO,CAACgC,QAAR,EADkB;AAEtBN,gBAAAA,MAAM,EAAEA,MAFc;AAGtBC,gBAAAA,OAAO,EAAEA,OAHa;AAItBE,gBAAAA,IAAI,EAAEA,IAJgB;AAKtBD,gBAAAA,QAAQ,EAACA,QALa;AAMtBX,gBAAAA,GAAG,EAAEA,GANiB;AAOtBgB,gBAAAA,SAAS,EAAE;AAPW,eAAX,CANhB;;AAAA;AAMCnB,cAAAA,MAND;;AAeL,kBAAG;AACFA,gBAAAA,MAAM,CAACoB,IAAP,GAAcC,IAAd;AAAA,qFAAmB,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACAtC,GAAG,CAACe,QAAJ,CAAaI,GAAb,CADA;;AAAA;AACdoB,4BAAAA,KADc;AAElBA,4BAAAA,KAAK,CAAC9B,OAAN,CAAcgB,IAAd,CAAmBa,OAAO,CAACE,GAA3B;AACAD,4BAAAA,KAAK,CAACH,IAAN;AAHkB;AAAA,mCAKCvC,MAAM,CAACU,IAAP,GAAcC,QAAd,CAAuB,KAAvB,CALD;;AAAA;AAKdiC,4BAAAA,MALc;AAMlBnC,4BAAAA,GAAG,CAACoC,IAAJ,CAAS;AACRD,8BAAAA,MAAM,EAAG,SADD;AAERE,8BAAAA,IAAI,EAAEF;AAFE,6BAAT;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;;AAAA;AAAA;AAAA;AAAA;AAWA,eAZD,CAYE,OAAMG,GAAN,EAAU;AACXtC,gBAAAA,GAAG,CAACoC,IAAJ,CAAS;AACRG,kBAAAA,KAAK,EAAGA;AADA,iBAAT;AAGA;;AA/BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7CW;AA8Ef;AACAC,EAAAA,UAAU;AAAA,8EAAE,mBAAOzC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAE2BD,GAAG,CAACsB,IAF/B,EAEHE,OAFG,cAEHA,OAFG,EAEMkB,SAFN,cAEMA,SAFN,EAEiB7B,MAFjB,cAEiBA,MAFjB;AAAA;AAAA,qBAGW,IAAIrB,MAAJ,CAAW;AAC/BgC,gBAAAA,OAAO,EAAEA,OADsB;AAE/BV,gBAAAA,GAAG,EAACD,MAF2B;AAG/BiB,gBAAAA,SAAS,EAAC;AAHqB,eAAX,CAHX;;AAAA;AAGJnB,cAAAA,MAHI;AASVA,cAAAA,MAAM,CAACoB,IAAP,GAAcC,IAAd;AAAA,oFAAmB,mBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACAtC,GAAG,CAACe,QAAJ,CAAaG,MAAb,CADA;;AAAA;AACZC,0BAAAA,GADY;AAEjBA,0BAAAA,GAAG,CAACV,OAAJ,CAAYgB,IAAZ,CAAiBa,OAAO,CAACE,GAAzB;AACArB,0BAAAA,GAAG,CAACiB,IAAJ;AACKY,0BAAAA,KAJY,GAIJ,EAJI;AAKlBD,0BAAAA,SAAS,CAACE,OAAV;AAAA,gGAAkB,kBAAOC,EAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACM,IAAIlD,QAAJ,CAAa;AACnCmD,wCAAAA,GAAG,EAAEF,EAAE,CAACE,GAD2B;AAEnCvB,wCAAAA,OAAO,EAAEqB,EAAE,CAACrB,OAFuB;AAGnCwB,wCAAAA,KAAK,EAAEH,EAAE,CAACG,KAHyB;AAInCrC,wCAAAA,MAAM,EAAEsB,OAAO,CAACE;AAJmB,uCAAb,CADN;;AAAA;AACXV,sCAAAA,QADW;AAOjBA,sCAAAA,QAAQ,CAACM,IAAT,GAAgBC,IAAhB;AAAA,4GAAqB,kBAAMiB,SAAN;AAAA;AAAA;AAAA;AAAA;AACpBN,kDAAAA,KAAK,CAACvB,IAAN,CAAW6B,SAAS,CAACd,GAArB;;AACA,sDAAGW,GAAG,KAAG,CAAT,EAAW;AACVb,oDAAAA,OAAO,CAACS,SAAR,GAAkBC,KAAlB;AACAV,oDAAAA,OAAO,CAACF,IAAR,GAAeC,IAAf;AAAA,0HAAoB,kBAAMI,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEACS5C,MAAM,CAACkB,QAAP,CAAgB0B,MAAM,CAACD,GAAvB,EAA4BhC,QAA5B,CAAqC,WAArC,CADT;;AAAA;AACb+C,gEAAAA,aADa;AAAA;AAAA,uEAEMvD,GAAG,CAACe,QAAJ,CAAaG,MAAb,EAAqBV,QAArB,CAA8B;AACrDc,kEAAAA,IAAI,EAAC,SADgD;AAErDC,kEAAAA,KAAK,EAAC,QAF+C;AAGrDf,kEAAAA,QAAQ,EAAC;AACRc,oEAAAA,IAAI,EAAC,WADG;AAERC,oEAAAA,KAAK,EAAC;AAFE;AAH4C,iEAA9B,CAFN;;AAAA;AAEbiC,gEAAAA,UAFa;AAUnBlD,gEAAAA,GAAG,CAACI,IAAJ,CAAS;AAACM,kEAAAA,MAAM,EAACuC,aAAR;AAAsBpC,kEAAAA,GAAG,EAACqC;AAA1B,iEAAT;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAApB;;AAAA;AAAA;AAAA;AAAA;AAaA;;AAjBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAArB;;AAAA;AAAA;AAAA;AAAA;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAlB;;AAAA;AAAA;AAAA;AAAA;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB;;AAAA;AAAA;AAAA;AAAA;AATU;AAAA;;AAAA;AAAA;AAAA;AA2CVlD,cAAAA,GAAG,CAACI,IAAJ;;AA3CU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/EK;AA6Hf+C,EAAAA,eAAe;AAAA,mFAAG,mBAAOpD,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB;AAFgB,2BAGUD,GAAG,CAACsB,IAHd,EAGTT,MAHS,cAGTA,MAHS,EAGDwC,SAHC,cAGDA,SAHC;AAAA;AAAA,qBAIE1D,GAAG,CAACe,QAAJ,CAAaG,MAAb,CAJF;;AAAA;AAIVC,cAAAA,GAJU;;AAKhB,kBAAIuC,SAAS,CAACC,MAAV,GAAiB,CAArB,EAAuB;AAChBC,gBAAAA,GADgB,GACV,EADU;AAEtBF,gBAAAA,SAAS,CAACT,OAAV,CAAkB,UAAAjC,MAAM,EAAE;AACzB4C,kBAAAA,GAAG,CAACnC,IAAJ,CAAST,MAAM,CAAC6C,KAAhB;AACA,iBAFD,EAFsB,CAKtB;;AACMC,gBAAAA,QANgB,GAML3C,GAAG,CAACV,OAAJ,CAAYsD,MAAZ,CAAmBH,GAAnB,CANK;AAOtBzC,gBAAAA,GAAG,CAACV,OAAJ,GAAcqD,QAAd;AACA3C,gBAAAA,GAAG,CAACiB,IAAJ,GAAWC,IAAX,uEAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACMrC,GAAG,CAACe,QAAJ,CAAaG,MAAb,EAAqBV,QAArB,CAA8B;AAClDc,4BAAAA,IAAI,EAAC,SAD6C;AAElDC,4BAAAA,KAAK,EAAC,QAF4C;AAGlDf,4BAAAA,QAAQ,EAAC;AACRc,8BAAAA,IAAI,EAAC,WADG;AAERC,8BAAAA,KAAK,EAAC;AAFE;AAHyC,2BAA9B,CADN;;AAAA;AACTkB,0BAAAA,MADS;AASfnC,0BAAAA,GAAG,CAACI,IAAJ,CAAS;AAACS,4BAAAA,GAAG,EAACsB;AAAL,2BAAT;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAYA;;AAzBe;AAAA;;AAAA;AAAA;AAAA;AA2BhBnC,cAAAA,GAAG,CAACI,IAAJ;;AA3BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7HA;AA2Jf;AACA;AAAA,2EAAS,mBAAOL,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFsD,cAAAA,GADE,GACG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADH;;AAER,kBAAG;AAAA,6BACwBvD,GAAG,CAACsB,IAD5B,EACKT,MADL,cACKA,MADL,EACaT,SADb,cACaA,OADb;;AAEF,oBAAGA,SAAO,CAACkD,MAAR,GAAe,CAAlB,EAAoB;AACnBlD,kBAAAA,SAAO,CAACwC,OAAR;AAAA,wFAAgB,mBAAOe,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,8BAAAA,KADW,GACH,EADG;AAAA;AAAA,qCAEM,IAAIpE,MAAJ,CAAW;AAC/BgC,gCAAAA,OAAO,EAAEmC,IAAI,CAAC,UAAD,CADkB;AAE/B7C,gCAAAA,GAAG,EAACD,MAF2B;AAG/BiB,gCAAAA,SAAS,EAAC;AAHqB,+BAAX,CAFN;;AAAA;AAETnB,8BAAAA,MAFS;AAAA;AAAA,qCAOGhB,GAAG,CAACe,QAAJ,CAAaG,MAAb,CAPH;;AAAA;AAOTC,8BAAAA,GAPS;AAAA;AAAA,qCAQOH,MAAM,CAACoB,IAAP,EARP;;AAAA;AAQTE,8BAAAA,OARS;AASdnB,8BAAAA,GAAG,CAACV,OAAJ,CAAYgB,IAAZ,CAAiBa,OAAO,CAACE,GAAzB;AACArB,8BAAAA,GAAG,CAACiB,IAAJ;AAVc;AAAA,qCAWS,IAAInC,QAAJ,CAAa;AACpCmD,gCAAAA,GAAG,EAAC,GADgC;AAEpCvB,gCAAAA,OAAO,EAAEmC,IAAI,CAAC,aAAD,CAFuB;AAGpCX,gCAAAA,KAAK,EAAEW,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpChD,gCAAAA,MAAM,EAACsB,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CAXT;;AAAA;AAWT+B,8BAAAA,SAXS;AAAA;AAAA,qCAkBS,IAAIjE,QAAJ,CAAa;AACpCmD,gCAAAA,GAAG,EAAC,GADgC;AAEpCvB,gCAAAA,OAAO,EAAEmC,IAAI,CAAC,aAAD,CAFuB;AAGpCX,gCAAAA,KAAK,EAAEW,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpChD,gCAAAA,MAAM,EAACsB,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CAlBT;;AAAA;AAkBTgC,8BAAAA,SAlBS;AAAA;AAAA,qCA0BS,IAAIlE,QAAJ,CAAa;AACpCmD,gCAAAA,GAAG,EAAC,GADgC;AAEpCvB,gCAAAA,OAAO,EAAEmC,IAAI,CAAC,aAAD,CAFuB;AAGpCX,gCAAAA,KAAK,EAAEW,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpChD,gCAAAA,MAAM,EAACsB,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CA1BT;;AAAA;AA0BTiC,8BAAAA,SA1BS;AAAA;AAAA,qCAkCS,IAAInE,QAAJ,CAAa;AACpCmD,gCAAAA,GAAG,EAAC,GADgC;AAEpCvB,gCAAAA,OAAO,EAAEmC,IAAI,CAAC,aAAD,CAFuB;AAGpCX,gCAAAA,KAAK,EAAEW,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpChD,gCAAAA,MAAM,EAACsB,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CAlCT;;AAAA;AAkCTkC,8BAAAA,SAlCS;AAAA;AAAA,qCA0CUH,SAAS,CAAC9B,IAAV,EA1CV;;AAAA;AA0CTkC,8BAAAA,UA1CS;AA2CfL,8BAAAA,KAAK,CAACxC,IAAN,CAAW6C,UAAU,CAAC9B,GAAtB;AA3Ce;AAAA,qCA4CU2B,SAAS,CAAC/B,IAAV,EA5CV;;AAAA;AA4CTmC,8BAAAA,UA5CS;AA6CfN,8BAAAA,KAAK,CAACxC,IAAN,CAAW8C,UAAU,CAAC/B,GAAtB;AA7Ce;AAAA,qCA8CU4B,SAAS,CAAChC,IAAV,EA9CV;;AAAA;AA8CToC,8BAAAA,UA9CS;AA+CfP,8BAAAA,KAAK,CAACxC,IAAN,CAAW+C,UAAU,CAAChC,GAAtB;AA/Ce;AAAA,qCAgDU6B,SAAS,CAACjC,IAAV,EAhDV;;AAAA;AAgDTqC,8BAAAA,UAhDS;AAiDfR,8BAAAA,KAAK,CAACxC,IAAN,CAAWgD,UAAU,CAACjC,GAAtB;AAEAF,8BAAAA,OAAO,CAACS,SAAR,GAAoBkB,KAApB;AACA3B,8BAAAA,OAAO,CAACF,IAAR;;AApDe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhB;;AAAA;AAAA;AAAA;AAAA;AAsDA,iBAzDC,CA0DH;;AACC,eA3DD,CA2DE,OAAMQ,GAAN,EAAU;AACXtC,gBAAAA,GAAG,CAACI,IAAJ,CAASkC,GAAT;AACA;;AA/DO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA5Je;AA6Nf;AACA8B,EAAAA,OAAO;AAAA,2EAAE,mBAAOrE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJM,cAAAA,SADI,GACQP,GAAG,CAACQ,MAAJ,CAAWC,EADnB;AAERR,cAAAA,GAAG,CAACI,IAAJ,CAAS,IAAT;AAFQ;AAAA,qBAIab,MAAM,CAACkB,QAAP,CAAgBH,SAAhB,EAA2BJ,QAA3B,CAAoC,QAApC,CAJb;;AAAA;AAIFQ,cAAAA,MAJE;AAAA;AAAA;AAAA,qBAMWhB,GAAG,CAACe,QAAJ,CAAaC,MAAM,CAACG,GAApB,CANX;;AAAA;AAMDA,cAAAA,GANC;;AAOP,kBAAGA,GAAG,CAACV,OAAP,EAAe;AACVkE,gBAAAA,SADU,GACExD,GAAG,CAACV,OAAJ,CAAYmE,MAAZ,CAAmB,UAAAC,CAAC;AAAA,yBAAE,UAAGA,CAAH,KAASjE,SAAX;AAAA,iBAApB,CADF;AAEdO,gBAAAA,GAAG,CAACV,OAAJ,GAAckE,SAAd;AACAxD,gBAAAA,GAAG,CAACiB,IAAJ;AACA;;AACD,kBAAGpB,MAAM,CAAC8D,MAAP,CAAcnB,MAAd,GAAuB,CAA1B,EAA4B;AAC3BlD,gBAAAA,OAAO,CAACe,KAAR,CAAcyB,OAAd;AAAA,sFAAsB,mBAAMe,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACHjE,KAAK,CAACgB,QAAN,CAAeiD,IAAf,CADG;;AAAA;AACjBxC,4BAAAA,KADiB;AAEjBmD,4BAAAA,SAFiB,GAELnD,KAAK,CAACoD,MAAN,CAAa,UAAAC,CAAC;AAAA,qCAAI,UAAGA,CAAH,KAASjE,SAAb;AAAA,6BAAd,CAFK;AAGrBY,4BAAAA,KAAK,CAACf,OAAN,GAAgBkE,SAAhB;AACAnD,4BAAAA,KAAK,CAACY,IAAN;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA;AAMA,eAnBM,CAoBP;AACA;;;AACA,kBAAIpB,MAAM,CAAC+D,OAAP,CAAepB,MAAf,KAAwB,CAA5B,EAA8B;AAC7B3C,gBAAAA,MAAM,UAAN;AACA,eAFD,MAEO;AACNA,gBAAAA,MAAM,CAACmB,SAAP,GAAmB,CAAnB;AACAnB,gBAAAA,MAAM,CAACoB,IAAP;AACA;;AACD9B,cAAAA,GAAG,CAACI,IAAJ,CAAS,IAAT;AA5BO;AAAA;;AAAA;AAAA;AAAA;AA8BPJ,cAAAA,GAAG,CAACI,IAAJ;;AA9BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9NQ;AAgQfsE,EAAAA,YAAY;AAAA,gFAAE,mBAAO3E,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACN2E,cAAAA,EADM,GACA5E,GAAG,CAACsB,IADJ,CACNsD,EADM;AAAA;AAAA;AAAA,qBAISpF,MAAM,CAACkB,QAAP,CAAgBkE,EAAE,CAACzC,GAAnB,CAJT;;AAAA;AAINxB,cAAAA,MAJM;AAAA;AAAA,qBAKMhB,GAAG,CAACe,QAAJ,CAAakE,EAAE,CAAC9D,GAAhB,CALN;;AAAA;AAKNA,cAAAA,GALM;AAMP+D,cAAAA,UANO,GAMM/D,GAAG,CAACV,OAAJ,CAAYmE,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAG,UAAGA,CAAH,MAASI,EAAE,CAAC9D,GAAf;AAAA,eAApB,CANN;AAOXA,cAAAA,GAAG,CAACV,OAAJ,GAAcyE,UAAd;AACA/D,cAAAA,GAAG,CAACiB,IAAJ,GARW,CAUZ;;AACCpB,cAAAA,MAAM,CAAC8D,MAAP,CAAc7B,OAAd;AAAA,oFAAsB,mBAAOkC,EAAP,EAAWhC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACHpD,KAAK,CAACgB,QAAN,CAAeoE,EAAf,CADG;;AAAA;AACjB3D,0BAAAA,KADiB;AAEjB4D,0BAAAA,cAFiB,GAEA5D,KAAK,CAACf,OAAN,CAAcmE,MAAd,CAAqB,UAAAC,CAAC;AAAA,mCAAG,UAAGA,CAAH,MAAUI,EAAE,CAACzC,GAAhB;AAAA,2BAAtB,CAFA;AAGpBhB,0BAAAA,KAAK,CAACf,OAAN,GAAgB2E,cAAhB;AACA5D,0BAAAA,KAAK,CAACY,IAAN,GAJoB,CAMrB;AAEA;;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAtB;;AAAA;AAAA;AAAA;AAAA,mBAXW,CAqBZ;;AArBY,oBAuBPpB,MAAM,CAACqE,OAAP,CAAe1B,MAAf,KAA0B,CAvBnB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAwBW1D,QAAQ,CAACqF,UAAT,CAAoB;AAACtE,gBAAAA,MAAM,EAACiE,EAAE,CAACzC;AAAX,eAApB,CAxBX;;AAAA;AAwBNV,cAAAA,QAxBM;AAyBVd,cAAAA,MAAM,UAAN;AAzBU;AAAA;;AAAA;AAAA;AAAA,qBA2BYf,QAAQ,CAACM,IAAT,CAAc;AAACS,gBAAAA,MAAM,EAACiE,EAAE,CAACzC;AAAX,eAAd,CA3BZ;;AAAA;AA2BNO,cAAAA,SA3BM;AA4BTA,cAAAA,SAAS,CAACE,OAAV;AAAA,qFAAkB,mBAAMnB,QAAN;AAAA;AAAA;AAAA;AAAA;AACjBA,0BAAAA,QAAQ,CAACK,SAAT,GAAqB,CAArB;AACAL,0BAAAA,QAAQ,CAACM,IAAT;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB;;AAAA;AAAA;AAAA;AAAA;AAIDpB,cAAAA,MAAM,CAACmB,SAAP,GAAmB,CAAnB;AACAnB,cAAAA,MAAM,CAACoB,IAAP;;AAjCU;AAAA;AAAA,qBAoCcpC,GAAG,CAACe,QAAJ,CAAakE,EAAE,CAAC9D,GAAhB,EAAqBX,QAArB,CAA8B,SAA9B,CApCd;;AAAA;AAoCLgD,cAAAA,UApCK;AAqCXlD,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAACS,gBAAAA,GAAG,EAACqC;AAAL,eAAT;AArCW;AAAA;;AAAA;AAAA;AAAA;AAyCZlD,cAAAA,GAAG,CAACI,IAAJ;;AAzCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhQG;AA4Sf6E,EAAAA,YAAY;AAAA,gFAAG,mBAAOlF,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAENY,cAAAA,MAFM,GAEEb,GAAG,CAACsB,IAFN,CAENT,MAFM;AAAA;AAAA,qBAGSrB,MAAM,CAACU,IAAP,CAAY;AAACY,gBAAAA,GAAG,EAACD;AAAL,eAAZ,EAA0BV,QAA1B,CAAmC;AACxDc,gBAAAA,IAAI,EAAC,WADmD;AAExDC,gBAAAA,KAAK,EAAC;AAFkD,eAAnC,CAHT;;AAAA;AAGPd,cAAAA,SAHO;AAObH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAACD,gBAAAA,OAAO,EAACA;AAAT,eAAT;AAPa;AAAA;;AAAA;AAAA;AAAA;AASbH,cAAAA,GAAG,CAACI,IAAJ;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5SG,CAAhB;AA0TA8E,MAAM,CAACC,OAAP,GAAiBtF,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let CauHoi = require('../models/cauhoi.model')\nlet DeThi = require('../models/dethi.model')\nlet Mon = require('../models/mon.model')\nlet PhuongAn = require('../models/phuongan.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async (req, res)=>{\n\t\tconst cauhois = await CauHoi.find().populate('mon').populate('phuongans')\n\t\tres.send({cauhois:cauhois})\n\t},\n\n\tdetail : async (req, res)=>{\n\t\tconst _idcauhoi = req.params.id\n\n\t\tconst cauhoi = await CauHoi.findById(_idcauhoi)\n\t\tres.send(cauhoi)\n\t},\n\t// cau hoi cua mon\n\tquestionOfSubject : async (req, res)=> {\n\t\tconst {_idmon} = req.params\n\t\ttry{\n\t\t\tlet cauhois = await CauHoi.find({mon:_idmon}).populate('phuongans')\n\t\t\tres.send(cauhois)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\n\tcauhoiCuaDethi : async (req, res)=>{\n\t\tconst {_iddethi} = req.params\n\t\ttry{\n\t\t\tlet cauhois = []\n\t\t\t//const dethi = await DeThi.findById(_iddethi).populate('cauhois').select('cauhois')\n\t\t\tconst dethi = await DeThi.findById(_iddethi).populate({\n\t\t\t\tpath:'cauhois',\n\t\t\t\tmodel:'CauHoi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tcauhois.push(dethi)\n\t\t\tres.send(cauhois)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\t\t\n\t},\n\n\t// add cau hoi \n\tpost: async (req, res)=>{\n        let { tieude, noidung, phuongan, loai, mon } = req.body\n        \n        // let ma = req.body.ma\n        // let ten = req.body.ten\n\n\t\tconst cauhoi = await new Cauhoi({\n            ma: shortid.generate(),\n            tieude: tieude,\n            noidung: noidung,\n            loai: loai,\n            phuongan:phuongan,\n            mon: mon,\n            trangthai: 1,\n\t\t})\n\t\ttry{\n\t\t\tcauhoi.save().then(async (respone)=>{\n\t\t\t\tlet p_mon = await Mon.findById(mon)\n\t\t\t\tp_mon.cauhois.push(respone._id)\n\t\t\t\tp_mon.save()\n\n\t\t\t\tlet result = await CauHoi.find().populate('mon')\n\t\t\t\tres.json({\n\t\t\t\t\tresult : \"success\",\n\t\t\t\t\tdata: result\n\t\t\t\t})\n\t\t\t})\t\t\t\n\t\t} catch(err){\n\t\t\tres.json({\n\t\t\t\terror : error \n\t\t\t})\n\t\t}\n\t},\n\t// add question\n\tthemCauHoi: async (req, res)=>{\t\t\n\t\ttry {\t\t\t\n\t\t\tconst {noidung, phuongans, _idmon} = req.body\t\t\n\t\t\tconst cauhoi = await new CauHoi({\t\t\t\t\n\t\t\t\tnoidung: noidung,\t\t\t\t\n\t\t\t\tmon:_idmon,\n\t\t\t\ttrangthai:1\n\t\t\t})\t\t\t\n\t\t\t\t\t\n\t\t\tcauhoi.save().then(async respone=>{\n\t\t\t\tconst mon = await Mon.findById(_idmon)\n\t\t\t\t\tmon.cauhois.push(respone._id)\n\t\t\t\t\tmon.save()\t\t\t\t\t\t\n\t\t\t\tconst array = []\n\t\t\t\tphuongans.forEach(async (pa, idx)=>{\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tconst phuongan = await new PhuongAn({\n\t\t\t\t\t\tten: pa.ten,\n\t\t\t\t\t\tnoidung: pa.noidung,\n\t\t\t\t\t\tdapan: pa.dapan,\n\t\t\t\t\t\tcauhoi: respone._id\n\t\t\t\t\t})\n\t\t\t\t\tphuongan.save().then(async result_pa=>{\n\t\t\t\t\t\tarray.push(result_pa._id)\n\t\t\t\t\t\tif(idx===3){\n\t\t\t\t\t\t\trespone.phuongans=array\n\t\t\t\t\t\t\trespone.save().then(async result=>{\n\t\t\t\t\t\t\t\tconst result_cauhoi = await CauHoi.findById(result._id).populate('phuongans')\n\t\t\t\t\t\t\t\tconst result_mon = await Mon.findById(_idmon).populate({\n\t\t\t\t\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tres.send({cauhoi:result_cauhoi,mon:result_mon})\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t})\n\t\t\t})\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tthemCauHoiNhieu : async (req,res)=>{\n\t\ttry{\t\t\t\n\t\t\t// data _ array lable, value:_idcauhoi\n\t\t\tconst {_idmon, arrCauhoi}=req.body\t\t\t\n\t\t\tconst mon = await Mon.findById(_idmon)\n\t\t\tif (arrCauhoi.length>0){\t\t\t\t\n\t\t\t\tconst arr = []\n\t\t\t\tarrCauhoi.forEach(cauhoi=>{\n\t\t\t\t\tarr.push(cauhoi.value)\n\t\t\t\t})\t\t\t\t\n\t\t\t\t//const newArray = arr.concat(mon.cauhois)\n\t\t\t\tconst newArray = mon.cauhois.concat(arr)\n\t\t\t\tmon.cauhois = newArray\n\t\t\t\tmon.save().then(async ()=>{\n\t\t\t\t\tconst result = await Mon.findById(_idmon).populate({\n\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tres.send({mon:result})\n\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\t\t} catch (err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\t// import cau hoi {_idmon, cauhois[]}\n\timport : async (req, res)=>{\n\t\tconst arr =['A', 'B', 'C', 'D']\t\n\t\ttry{\n\t\t\tconst {_idmon, cauhois} = req.body\n\t\t\tif(cauhois.length>0){\t\t\t\t\n\t\t\t\tcauhois.forEach(async (item)=>{\t\t\n\t\t\t\t\tlet arrPA = []\t\t\t\n\t\t\t\t\tconst cauhoi = await new CauHoi({\n\t\t\t\t\t\tnoidung: item['Nội dung'],\n\t\t\t\t\t\tmon:_idmon,\n\t\t\t\t\t\ttrangthai:1\n\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tconst mon = await Mon.findById(_idmon)\t\n\t\t\t\t\tconst respone = await cauhoi.save()\n\t\t\t\t\t\tmon.cauhois.push(respone._id)\n\t\t\t\t\t\tmon.save()\n\t\t\t\t\tconst phuongana = await new PhuongAn({\n\t\t\t\t\t\tten:'A',\n\t\t\t\t\t\tnoidung: item['Phương án A'],\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'A' ? true : false,\n\t\t\t\t\t\tcauhoi:respone._id,\n\t\t\t\t\t\ttrangthai:1\n\t\t\t\t\t})\n\t\t\t\t\tconst phuonganb = await new PhuongAn({\n\t\t\t\t\t\tten:'B',\n\t\t\t\t\t\tnoidung: item['Phương án B'],\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'B' ? true : false,\n\t\t\t\t\t\tcauhoi:respone._id,\n\t\t\t\t\t\ttrangthai:1\n\t\t\t\t\t})\n\n\t\t\t\t\tconst phuonganc = await new PhuongAn({\n\t\t\t\t\t\tten:'C',\n\t\t\t\t\t\tnoidung: item['Phương án C'],\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'C' ? true : false,\n\t\t\t\t\t\tcauhoi:respone._id,\n\t\t\t\t\t\ttrangthai:1\n\t\t\t\t\t})\n\n\t\t\t\t\tconst phuongand = await new PhuongAn({\n\t\t\t\t\t\tten:'D',\n\t\t\t\t\t\tnoidung: item['Phương án D'],\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'D' ? true : false,\n\t\t\t\t\t\tcauhoi:respone._id,\n\t\t\t\t\t\ttrangthai:1\n\t\t\t\t\t})\n\n\t\t\t\t\tconst result_paa = await phuongana.save()\t\t\t\t\t\t\n\t\t\t\t\tarrPA.push(result_paa._id)\n\t\t\t\t\tconst result_pab = await phuonganb.save()\t\t\t\t\t\t\t\t\n\t\t\t\t\tarrPA.push(result_pab._id)\n\t\t\t\t\tconst result_pac = await phuonganc.save()\t\t\t\t\t\t\t\t\n\t\t\t\t\tarrPA.push(result_pac._id)\n\t\t\t\t\tconst result_pad = await phuongand.save()\t\t\t\t\t\t\t\t\n\t\t\t\t\tarrPA.push(result_pad._id)\n\n\t\t\t\t\trespone.phuongans = arrPA\n\t\t\t\t\trespone.save()\n\t\t\t\t})\t\t\t\t\n\t\t\t}\t\t\t\t\t\t\t\t\n\t\t//res.end()\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\t// delete cauhoi (id)\n\tdestroy: async (req, res)=>{\t\n\t\tlet _idcauhoi = req.params.id\n\t\tres.send('ok')\n\n\t\tconst cauhoi = await CauHoi.findById(_idcauhoi).populate('dethis')\n\t\ttry{\t\t\t\n\t\t\tconst mon = await Mon.findById(cauhoi.mon)\t\t\t\t\t\t\n\t\t\tif(mon.cauhois){\n\t\t\t\tlet newCauhoi = mon.cauhois.filter(x=>`${x}`!= _idcauhoi)\n\t\t\t\tmon.cauhois = newCauhoi\n\t\t\t\tmon.save()\n\t\t\t}\t\t\t\n\t\t\tif(cauhoi.dethis.length > 0){\n\t\t\t\tcauhois.dethi.forEach(async item=>{\n\t\t\t\t\tlet dethi = await DeThi.findById(item)\n\t\t\t\t\tlet newCauhoi = dethi.filter(x => `${x}`!= _idcauhoi)\n\t\t\t\t\tdethi.cauhois = newCauhoi\n\t\t\t\t\tdethi.save()\n\t\t\t\t})\n\t\t\t}\n\t\t\t//res.send(cauhoi.mon)\n\t\t\t//cauhoi.delete()\n\t\t\tif (cauhoi.bailams.length===0){\n\t\t\t\tcauhoi.delete()\n\t\t\t} else {\n\t\t\t\tcauhoi.trangthai = 0\n\t\t\t\tcauhoi.save()\n\t\t\t}\n\t\t\tres.send('ok')\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t\t//res.send(user)\n\t},\n\tremoveCauHoi: async (req, res)=>{\n\t\tconst {ch} = req.body\n\n\t\ttry{\n\t\t\tconst cauhoi = await CauHoi.findById(ch._id)\n\t\t\tconst mon = await Mon.findById(ch.mon)\n\t\t\t\tlet newCauhois = mon.cauhois.filter(x=> `${x}`!==ch.mon)\n\t\t\t\tmon.cauhois = newCauhois\n\t\t\t\tmon.save()\n\n\t\t\t// de thi\n\t\t\t\tcauhoi.dethis.forEach(async (dt, idx)=>{\n\t\t\t\t\tlet dethi = await DeThi.findById(dt)\n\t\t\t\t\tlet newCauhoiDeThi = dethi.cauhois.filter(x=> `${x}`!== ch._id)\n\t\t\t\t\t\tdethi.cauhois = newCauhoiDeThi\n\t\t\t\t\t\tdethi.save()\n\n\t\t\t\t\t// if(idx === cauhoi.dethis.length-1){\n\n\t\t\t\t\t// }\n\t\t\t\t})\n\t\t\t// phuong an\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (cauhoi.baithis.length === 0){\n\t\t\t\t\tlet phuongan = await PhuongAn.deleteMany({cauhoi:ch._id})\n\t\t\t\t\tcauhoi.delete()\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tlet phuongans = await PhuongAn.find({cauhoi:ch._id})\n\t\t\t\t\t\tphuongans.forEach(async phuongan=>{\n\t\t\t\t\t\t\tphuongan.trangthai = 0\n\t\t\t\t\t\t\tphuongan.save()\n\t\t\t\t\t\t})\n\t\t\t\t\tcauhoi.trangthai = 0\n\t\t\t\t\tcauhoi.save()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst result_mon = await Mon.findById(ch.mon).populate('cauhois') \n\t\t\t\tres.send({mon:result_mon})\n\t\t\t\t\t\t\t\t\n\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tcauHoiCuaMon : async (req,res)=>{\n\t\ttry{\n\t\t\tconst {_idmon}=req.body\n\t\t\tconst cauhois = await CauHoi.find({mon:_idmon}).populate({\n\t\t\t\tpath:'phuongans',\n\t\t\t\tmodel:'PhuongAn'\n\t\t\t})\n\t\t\tres.send({cauhois:cauhois})\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1610333234868
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/cauhoi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/cauhoi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/cauhoi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/cauhoi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "cauhoi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  tieude: String,\n  noidung: String,\n  phuongans: [{\n    type: Schema.Types.ObjectId,\n    ref: \"PhuongAn\"\n  }],\n  mon: {\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  },\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  baithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"BaiThi\"\n  }],\n  trangthai: Number // 0 xoa, 1 ton tai...\n\n});\nvar CauHoi = mongoose.model('CauHoi', schema);\nmodule.exports = CauHoi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJ0aWV1ZGUiLCJTdHJpbmciLCJub2lkdW5nIiwicGh1b25nYW5zIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb24iLCJkZXRoaXMiLCJiYWl0aGlzIiwidHJhbmd0aGFpIiwiTnVtYmVyIiwiQ2F1SG9pIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsTUFBTSxFQUFFQyxNQUZZO0FBR3BCQyxFQUFBQSxPQUFPLEVBQUVELE1BSFc7QUFLcEJFLEVBQUFBLFNBQVMsRUFBQyxDQUFDO0FBQ1BDLElBQUFBLElBQUksRUFBQ04sTUFBTSxDQUFDTyxLQUFQLENBQWFDLFFBRFg7QUFFUEMsSUFBQUEsR0FBRyxFQUFDO0FBRkcsR0FBRCxDQUxVO0FBVXRCQyxFQUFBQSxHQUFHLEVBQUM7QUFDSkosSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQSxHQVZrQjtBQWNwQkUsRUFBQUEsTUFBTSxFQUFDLENBQUM7QUFDSkwsSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQSxHQUFELENBZGE7QUFrQnBCRyxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNMTixJQUFBQSxJQUFJLEVBQUNOLE1BQU0sQ0FBQ08sS0FBUCxDQUFhQyxRQURiO0FBRUxDLElBQUFBLEdBQUcsRUFBQztBQUZDLEdBQUQsQ0FsQlk7QUFzQnBCSSxFQUFBQSxTQUFTLEVBQUNDLE1BdEJVLENBc0JGOztBQXRCRSxDQUFYLENBQWI7QUEwQkEsSUFBSUMsTUFBTSxHQUFHakIsUUFBUSxDQUFDa0IsS0FBVCxDQUFlLFFBQWYsRUFBeUJmLE1BQXpCLENBQWI7QUFFQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuXG52YXIgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICAgICAgXG4gICAgdGlldWRlOiBTdHJpbmcsXG4gICAgbm9pZHVuZzogU3RyaW5nLCAgICBcbiAgICBcbiAgICBwaHVvbmdhbnM6W3tcbiAgICAgICAgdHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjpcIlBodW9uZ0FuXCJcbiAgICB9XSxcblxuIFx0bW9uOntcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJNb25cIlxuXHR9LFxuICAgIGRldGhpczpbe1xuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOlwiRGVUaGlcIlxuICAgIH1dLFxuICAgIGJhaXRoaXM6W3tcbiAgICAgICAgdHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjpcIkJhaVRoaVwiXG4gICAgfV0sXG4gICAgdHJhbmd0aGFpOk51bWJlciwgLy8gMCB4b2EsIDEgdG9uIHRhaS4uLlxuXG59KVxuXG52YXIgQ2F1SG9pID0gbW9uZ29vc2UubW9kZWwoJ0NhdUhvaScsIHNjaGVtYSlcblxubW9kdWxlLmV4cG9ydHMgPSBDYXVIb2kiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "tieude",
        "String",
        "noidung",
        "phuongans",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "mon",
        "dethis",
        "baithis",
        "trangthai",
        "Number",
        "CauHoi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,MAAM,EAAEC,MAFY;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAKpBE,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CALU;AAUtBC,EAAAA,GAAG,EAAC;AACJJ,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAVkB;AAcpBE,EAAAA,MAAM,EAAC,CAAC;AACJL,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD,CAda;AAkBpBG,EAAAA,OAAO,EAAC,CAAC;AACLN,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD,CAlBY;AAsBpBI,EAAAA,SAAS,EAACC,MAtBU,CAsBF;;AAtBE,CAAX,CAAb;AA0BA,IAAIC,MAAM,GAAGjB,QAAQ,CAACkB,KAAT,CAAe,QAAf,EAAyBf,MAAzB,CAAb;AAEAgB,MAAM,CAACC,OAAP,GAAiBH,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n        \n    tieude: String,\n    noidung: String,    \n    \n    phuongans:[{\n        type:Schema.Types.ObjectId,\n        ref:\"PhuongAn\"\n    }],\n\n \tmon:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"Mon\"\n\t},\n    dethis:[{\n        type:Schema.Types.ObjectId,\n        ref:\"DeThi\"\n    }],\n    baithis:[{\n        type:Schema.Types.ObjectId,\n        ref:\"BaiThi\"\n    }],\n    trangthai:Number, // 0 xoa, 1 ton tai...\n\n})\n\nvar CauHoi = mongoose.model('CauHoi', schema)\n\nmodule.exports = CauHoi"
      ]
    },
    "sourceType": "script",
    "mtime": 1607565675213
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/dethi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/dethi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/dethi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/dethi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "dethi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  tieude: String,\n  thoigian: Number,\n  namhoc: String,\n  ghichu: String,\n  trangthai: Number,\n  cauhois: [{\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  }],\n  mon: {\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  },\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }],\n  taikhoan: {\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }\n});\nvar DeThi = mongoose.model('DeThi', schema);\nmodule.exports = DeThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGhpLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsIm1hIiwiU3RyaW5nIiwidGlldWRlIiwidGhvaWdpYW4iLCJOdW1iZXIiLCJuYW1ob2MiLCJnaGljaHUiLCJ0cmFuZ3RoYWkiLCJjYXVob2lzIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb24iLCJraXRoaXMiLCJ0YWlraG9hbiIsIkRlVGhpIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsRUFBRSxFQUFFQyxNQUZnQjtBQUdwQkMsRUFBQUEsTUFBTSxFQUFDRCxNQUhhO0FBSXBCRSxFQUFBQSxRQUFRLEVBQUVDLE1BSlU7QUFLcEJDLEVBQUFBLE1BQU0sRUFBRUosTUFMWTtBQU1wQkssRUFBQUEsTUFBTSxFQUFFTCxNQU5ZO0FBT3BCTSxFQUFBQSxTQUFTLEVBQUVILE1BUFM7QUFTdEJJLEVBQUFBLE9BQU8sRUFBQyxDQUFDO0FBQ1RDLElBQUFBLElBQUksRUFBQ1gsTUFBTSxDQUFDWSxLQUFQLENBQWFDLFFBRFQ7QUFFVEMsSUFBQUEsR0FBRyxFQUFDO0FBRkssR0FBRCxDQVRjO0FBY3ZCQyxFQUFBQSxHQUFHLEVBQUM7QUFDSEosSUFBQUEsSUFBSSxFQUFDWCxNQUFNLENBQUNZLEtBQVAsQ0FBYUMsUUFEZjtBQUVIQyxJQUFBQSxHQUFHLEVBQUM7QUFGRCxHQWRtQjtBQW1CdkJFLEVBQUFBLE1BQU0sRUFBQyxDQUFDO0FBQ1BMLElBQUFBLElBQUksRUFBQ1gsTUFBTSxDQUFDWSxLQUFQLENBQWFDLFFBRFg7QUFFUEMsSUFBQUEsR0FBRyxFQUFDO0FBRkcsR0FBRCxDQW5CZ0I7QUF1QnZCRyxFQUFBQSxRQUFRLEVBQUM7QUFDUk4sSUFBQUEsSUFBSSxFQUFDWCxNQUFNLENBQUNZLEtBQVAsQ0FBYUMsUUFEVjtBQUVSQyxJQUFBQSxHQUFHLEVBQUM7QUFGSTtBQXZCYyxDQUFYLENBQWI7QUE2QkEsSUFBSUksS0FBSyxHQUFHcEIsUUFBUSxDQUFDcUIsS0FBVCxDQUFlLE9BQWYsRUFBd0JsQixNQUF4QixDQUFaO0FBRUFtQixNQUFNLENBQUNDLE9BQVAsR0FBaUJILEtBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2QvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcblxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxuXG52YXIgc2NoZW1hID0gbmV3IFNjaGVtYSh7XG5cbiAgICBtYTogU3RyaW5nLFxuICAgIHRpZXVkZTpTdHJpbmcsXG4gICAgdGhvaWdpYW46IE51bWJlciwgICAgXG4gICAgbmFtaG9jOiBTdHJpbmcsXG4gICAgZ2hpY2h1OiBTdHJpbmcsXG4gICAgdHJhbmd0aGFpOiBOdW1iZXIsXG4gXHRcbiBcdGNhdWhvaXM6W3tcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJDYXVIb2lcIlxuXHR9XSxcblxuXHRtb246e1xuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuXHRcdHJlZjpcIk1vblwiXG5cdH0sXG5cblx0a2l0aGlzOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiS2lUaGlcIlxuXHR9XSxcblx0dGFpa2hvYW46e1xuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuXHRcdHJlZjpcIlRhaUtob2FuXCJcblx0fVx0XG59KVxuXG52YXIgRGVUaGkgPSBtb25nb29zZS5tb2RlbCgnRGVUaGknLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gRGVUaGkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dethi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "tieude",
        "thoigian",
        "Number",
        "namhoc",
        "ghichu",
        "trangthai",
        "cauhois",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "mon",
        "kithis",
        "taikhoan",
        "DeThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,MAAM,EAACD,MAHa;AAIpBE,EAAAA,QAAQ,EAAEC,MAJU;AAKpBC,EAAAA,MAAM,EAAEJ,MALY;AAMpBK,EAAAA,MAAM,EAAEL,MANY;AAOpBM,EAAAA,SAAS,EAAEH,MAPS;AAStBI,EAAAA,OAAO,EAAC,CAAC;AACTC,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GAAD,CATc;AAcvBC,EAAAA,GAAG,EAAC;AACHJ,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADf;AAEHC,IAAAA,GAAG,EAAC;AAFD,GAdmB;AAmBvBE,EAAAA,MAAM,EAAC,CAAC;AACPL,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CAnBgB;AAuBvBG,EAAAA,QAAQ,EAAC;AACRN,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADV;AAERC,IAAAA,GAAG,EAAC;AAFI;AAvBc,CAAX,CAAb;AA6BA,IAAII,KAAK,GAAGpB,QAAQ,CAACqB,KAAT,CAAe,OAAf,EAAwBlB,MAAxB,CAAZ;AAEAmB,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ma: String,\n    tieude:String,\n    thoigian: Number,    \n    namhoc: String,\n    ghichu: String,\n    trangthai: Number,\n \t\n \tcauhois:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"CauHoi\"\n\t}],\n\n\tmon:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"Mon\"\n\t},\n\n\tkithis:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"KiThi\"\n\t}],\n\ttaikhoan:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"TaiKhoan\"\n\t}\t\n})\n\nvar DeThi = mongoose.model('DeThi', schema)\n\nmodule.exports = DeThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1609650914577
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/mon.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/mon.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/mon.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/mon.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "mon.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  ten: String,\n  cauhois: [{\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  }],\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }],\n  giaovien: {\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }\n});\nvar Mon = mongoose.model('Mon', schema);\nmodule.exports = Mon;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbi5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJtYSIsIlN0cmluZyIsInRlbiIsImNhdWhvaXMiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImRldGhpcyIsImtpdGhpcyIsImdpYW92aWVuIiwiTW9uIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsRUFBRSxFQUFFQyxNQUZnQjtBQUdwQkMsRUFBQUEsR0FBRyxFQUFFRCxNQUhlO0FBS3ZCRSxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNSQyxJQUFBQSxJQUFJLEVBQUNOLE1BQU0sQ0FBQ08sS0FBUCxDQUFhQyxRQURWO0FBRVJDLElBQUFBLEdBQUcsRUFBQztBQUZJLEdBQUQsQ0FMZTtBQVN2QkMsRUFBQUEsTUFBTSxFQUFDLENBQUM7QUFDUEosSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEWDtBQUVQQyxJQUFBQSxHQUFHLEVBQUM7QUFGRyxHQUFELENBVGdCO0FBYXZCRSxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNQTCxJQUFBQSxJQUFJLEVBQUNOLE1BQU0sQ0FBQ08sS0FBUCxDQUFhQyxRQURYO0FBRVBDLElBQUFBLEdBQUcsRUFBQztBQUZHLEdBQUQsQ0FiZ0I7QUFpQnZCRyxFQUFBQSxRQUFRLEVBQUM7QUFDUk4sSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEVjtBQUVSQyxJQUFBQSxHQUFHLEVBQUM7QUFGSTtBQWpCYyxDQUFYLENBQWI7QUF3QkEsSUFBSUksR0FBRyxHQUFHZixRQUFRLENBQUNnQixLQUFULENBQWUsS0FBZixFQUFzQmIsTUFBdEIsQ0FBVjtBQUVBYyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEdBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2QvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcblxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxuXG52YXIgc2NoZW1hID0gbmV3IFNjaGVtYSh7XG5cbiAgICBtYTogU3RyaW5nLFxuICAgIHRlbjogU3RyaW5nLFxuICAgIFxuXHRjYXVob2lzOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiQ2F1SG9pXCJcblx0fV0sXG5cdGRldGhpczpbe1xuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuXHRcdHJlZjpcIkRlVGhpXCJcblx0fV0sXG5cdGtpdGhpczpbe1xuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuXHRcdHJlZjpcIktpVGhpXCJcblx0fV0sXG5cdGdpYW92aWVuOntcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJUYWlLaG9hblwiXG5cdH0sXG4gICAgXG59KVxuXG52YXIgTW9uID0gbW9uZ29vc2UubW9kZWwoJ01vbicsIHNjaGVtYSlcblxubW9kdWxlLmV4cG9ydHMgPSBNb24iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mon.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "ten",
        "cauhois",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "dethis",
        "kithis",
        "giaovien",
        "Mon",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,GAAG,EAAED,MAHe;AAKvBE,EAAAA,OAAO,EAAC,CAAC;AACRC,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADV;AAERC,IAAAA,GAAG,EAAC;AAFI,GAAD,CALe;AASvBC,EAAAA,MAAM,EAAC,CAAC;AACPJ,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CATgB;AAavBE,EAAAA,MAAM,EAAC,CAAC;AACPL,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CAbgB;AAiBvBG,EAAAA,QAAQ,EAAC;AACRN,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADV;AAERC,IAAAA,GAAG,EAAC;AAFI;AAjBc,CAAX,CAAb;AAwBA,IAAII,GAAG,GAAGf,QAAQ,CAACgB,KAAT,CAAe,KAAf,EAAsBb,MAAtB,CAAV;AAEAc,MAAM,CAACC,OAAP,GAAiBH,GAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ma: String,\n    ten: String,\n    \n\tcauhois:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"CauHoi\"\n\t}],\n\tdethis:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"DeThi\"\n\t}],\n\tkithis:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"KiThi\"\n\t}],\n\tgiaovien:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"TaiKhoan\"\n\t},\n    \n})\n\nvar Mon = mongoose.model('Mon', schema)\n\nmodule.exports = Mon"
      ]
    },
    "sourceType": "script",
    "mtime": 1609650921407
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/phuongan.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/phuongan.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/phuongan.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/phuongan.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "phuongan.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ten: String,\n  noidung: String,\n  dapan: Boolean,\n  cauhoi: {\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  },\n  trangthai: Number // 0 cau hoi bi xoa\n\n});\nvar PhuongAn = mongoose.model('PhuongAn', schema);\nmodule.exports = PhuongAn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsInRlbiIsIlN0cmluZyIsIm5vaWR1bmciLCJkYXBhbiIsIkJvb2xlYW4iLCJjYXVob2kiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInRyYW5ndGhhaSIsIk51bWJlciIsIlBodW9uZ0FuIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsR0FBRyxFQUFFQyxNQUZlO0FBR3BCQyxFQUFBQSxPQUFPLEVBQUVELE1BSFc7QUFJcEJFLEVBQUFBLEtBQUssRUFBRUMsT0FKYTtBQU1wQkMsRUFBQUEsTUFBTSxFQUFDO0FBQ1RDLElBQUFBLElBQUksRUFBQ1IsTUFBTSxDQUFDUyxLQUFQLENBQWFDLFFBRFQ7QUFFVEMsSUFBQUEsR0FBRyxFQUFDO0FBRkssR0FOYTtBQVd2QkMsRUFBQUEsU0FBUyxFQUFFQyxNQVhZLENBV0o7O0FBWEksQ0FBWCxDQUFiO0FBY0EsSUFBSUMsUUFBUSxHQUFHaEIsUUFBUSxDQUFDaUIsS0FBVCxDQUFlLFVBQWYsRUFBMkJkLE1BQTNCLENBQWY7QUFFQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxRQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5cbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcblxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuXG4gICAgdGVuOiBTdHJpbmcsICAgIFxuICAgIG5vaWR1bmc6IFN0cmluZyxcbiAgICBkYXBhbjogQm9vbGVhbixcblxuICAgIGNhdWhvaTp7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiQ2F1SG9pXCJcblx0fSxcblx0XG5cdHRyYW5ndGhhaTogTnVtYmVyLCAvLyAwIGNhdSBob2kgYmkgeG9hXG59KVxuXG52YXIgUGh1b25nQW4gPSBtb25nb29zZS5tb2RlbCgnUGh1b25nQW4nLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gUGh1b25nQW4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phuongan.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ten",
        "String",
        "noidung",
        "dapan",
        "Boolean",
        "cauhoi",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "trangthai",
        "Number",
        "PhuongAn",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,GAAG,EAAEC,MAFe;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,KAAK,EAAEC,OAJa;AAMpBC,EAAAA,MAAM,EAAC;AACTC,IAAAA,IAAI,EAACR,MAAM,CAACS,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GANa;AAWvBC,EAAAA,SAAS,EAAEC,MAXY,CAWJ;;AAXI,CAAX,CAAb;AAcA,IAAIC,QAAQ,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,UAAf,EAA2Bd,MAA3B,CAAf;AAEAe,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ten: String,    \n    noidung: String,\n    dapan: Boolean,\n\n    cauhoi:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"CauHoi\"\n\t},\n\t\n\ttrangthai: Number, // 0 cau hoi bi xoa\n})\n\nvar PhuongAn = mongoose.model('PhuongAn', schema)\n\nmodule.exports = PhuongAn"
      ]
    },
    "sourceType": "script",
    "mtime": 1607567495226
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/phuongan.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/phuongan.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/phuongan.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/phuongan.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "phuongan.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _phuongan = _interopRequireDefault(require(\"../controllers/phuongan.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _phuongan[\"default\"].index); // add loai cau hoi\n\nrouter.post('/', _phuongan[\"default\"].post); // delete loai cau  hoi\n\nrouter[\"delete\"]('/:id', _phuongan[\"default\"].destroy);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsInBvc3QiLCJkZXN0cm95IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxxQkFBWUMsS0FBNUIsRSxDQUVBOztBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxHQUFaLEVBQWlCRixxQkFBWUUsSUFBN0IsRSxDQUNBOztBQUNBTCxNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXNCRyxxQkFBWUcsT0FBbEM7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy9waHVvbmdhbi5jb250cm9sbGVyJ1xuXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXG5cbi8vIGFkZCBsb2FpIGNhdSBob2lcbnJvdXRlci5wb3N0KCcvJywgY29udHJvbGxlcnMucG9zdClcbi8vIGRlbGV0ZSBsb2FpIGNhdSAgaG9pXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgY29udHJvbGxlcnMuZGVzdHJveSlcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "phuongan.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "post",
        "destroy",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,qBAAYC,KAA5B,E,CAEA;;AACAJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiBF,qBAAYE,IAA7B,E,CACA;;AACAL,MAAM,UAAN,CAAc,MAAd,EAAsBG,qBAAYG,OAAlC;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/phuongan.controller'\n\nrouter.get('/', controllers.index)\n\n// add loai cau hoi\nrouter.post('/', controllers.post)\n// delete loai cau  hoi\nrouter.delete('/:id', controllers.destroy)\n\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1602682215486
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/phuongan.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/phuongan.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/phuongan.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/phuongan.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "phuongan.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Phuongan = require('../models/phuongan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var phuongan;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Phuongan.find();\n\n            case 2:\n              phuongan = _context.sent;\n              res.send(phuongan);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  // add cau hoi \n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, ma, ten, noidung, phuongan, savePhuongan;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$body = req.body, ma = _req$body.ma, ten = _req$body.ten, noidung = _req$body.noidung; // let ma = req.body.ma\n              // let ten = req.body.ten\n\n              phuongan = new Phuongan({\n                ma: ma,\n                ten: ten,\n                noidung: noidung\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return phuongan.save();\n\n            case 5:\n              savePhuongan = _context2.sent;\n              res.json({\n                result: \"success\"\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              res.json({\n                error: error\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    function post(_x3, _x4) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete cauhoi (id)\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var id, phuongan;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = req.params.id; //let user = await User.findById(id)\n\n              _context3.next = 3;\n              return Phuongan.deleteOne({\n                _id: id\n              }).then(function () {\n                res.json({\n                  result: \"delete sucessfully\"\n                });\n              })[\"catch\"](function (err) {\n                return res.json({\n                  error: err\n                });\n              });\n\n            case 3:\n              phuongan = _context3.sent;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function destroy(_x5, _x6) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUGh1b25nYW4iLCJyZXF1aXJlIiwic2hvcnRpZCIsIm1ldGhvZHMiLCJpbmRleCIsInJlcSIsInJlcyIsImZpbmQiLCJwaHVvbmdhbiIsInNlbmQiLCJwb3N0IiwiYm9keSIsIm1hIiwidGVuIiwibm9pZHVuZyIsInNhdmUiLCJzYXZlUGh1b25nYW4iLCJqc29uIiwicmVzdWx0IiwiZXJyb3IiLCJkZXN0cm95IiwiaWQiLCJwYXJhbXMiLCJkZWxldGVPbmUiLCJfaWQiLCJ0aGVuIiwiZXJyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsMEJBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQSxJQUFNRSxPQUFPLEdBQUc7QUFDZkMsRUFBQUEsS0FBSztBQUFBLHlFQUFFLGlCQUFNQyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFDaUJOLFFBQVEsQ0FBQ08sSUFBVCxFQURqQjs7QUFBQTtBQUNBQyxjQUFBQSxRQURBO0FBRU5GLGNBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxRQUFUOztBQUZNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsS0FEVTtBQUtmO0FBQ0FFLEVBQUFBLElBQUk7QUFBQSx3RUFBRSxrQkFBTUwsR0FBTixFQUFXQyxHQUFYO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFDMkJELEdBQUcsQ0FBQ00sSUFEL0IsRUFDT0MsRUFEUCxhQUNPQSxFQURQLEVBQ1dDLEdBRFgsYUFDV0EsR0FEWCxFQUNnQkMsT0FEaEIsYUFDZ0JBLE9BRGhCLEVBR0M7QUFDQTs7QUFFQU4sY0FBQUEsUUFORCxHQU1ZLElBQUlSLFFBQUosQ0FBYTtBQUNwQlksZ0JBQUFBLEVBQUUsRUFBRUEsRUFEZ0I7QUFFcEJDLGdCQUFBQSxHQUFHLEVBQUVBLEdBRmU7QUFHcEJDLGdCQUFBQSxPQUFPLEVBQUVBO0FBSFcsZUFBYixDQU5aO0FBQUE7QUFBQTtBQUFBLHFCQWF1Qk4sUUFBUSxDQUFDTyxJQUFULEVBYnZCOztBQUFBO0FBYUVDLGNBQUFBLFlBYkY7QUFjSlYsY0FBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFDUkMsZ0JBQUFBLE1BQU0sRUFBRztBQURELGVBQVQ7QUFkSTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWtCSlosY0FBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFDUkUsZ0JBQUFBLEtBQUssRUFBR0E7QUFEQSxlQUFUOztBQWxCSTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLEtBTlc7QUE2QmY7QUFDQUMsRUFBQUEsT0FBTztBQUFBLDJFQUFFLGtCQUFNZixHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0plLGNBQUFBLEVBREksR0FDQ2hCLEdBQUcsQ0FBQ2lCLE1BQUosQ0FBV0QsRUFEWixFQUVSOztBQUZRO0FBQUEscUJBR2FyQixRQUFRLENBQUN1QixTQUFULENBQW1CO0FBQUNDLGdCQUFBQSxHQUFHLEVBQUVIO0FBQU4sZUFBbkIsRUFBOEJJLElBQTlCLENBQW1DLFlBQUk7QUFDM0RuQixnQkFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFDUkMsa0JBQUFBLE1BQU0sRUFBRTtBQURBLGlCQUFUO0FBR0EsZUFKb0IsV0FJWixVQUFBUSxHQUFHO0FBQUEsdUJBQUlwQixHQUFHLENBQUNXLElBQUosQ0FBUztBQUN4QkUsa0JBQUFBLEtBQUssRUFBRU87QUFEaUIsaUJBQVQsQ0FBSjtBQUFBLGVBSlMsQ0FIYjs7QUFBQTtBQUdKbEIsY0FBQUEsUUFISTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBOUJRLENBQWhCO0FBNENBbUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIsT0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9jb250cm9sbGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgUGh1b25nYW4gPSByZXF1aXJlKCcuLi9tb2RlbHMvcGh1b25nYW4ubW9kZWwnKVxudmFyIHNob3J0aWQgPSByZXF1aXJlKCdzaG9ydGlkJyk7XG5cbmNvbnN0IG1ldGhvZHMgPSB7XG5cdGluZGV4OiBhc3luYyhyZXEsIHJlcyk9Pntcblx0XHRjb25zdCBwaHVvbmdhbiA9IGF3YWl0IFBodW9uZ2FuLmZpbmQoKVxuXHRcdHJlcy5zZW5kKHBodW9uZ2FuKVxuXHR9LFxuXHQvLyBhZGQgY2F1IGhvaSBcblx0cG9zdDogYXN5bmMocmVxLCByZXMpPT57XG4gICAgICAgIGxldCB7IG1hLCB0ZW4sIG5vaWR1bmd9ID0gcmVxLmJvZHlcbiAgICAgICAgXG4gICAgICAgIC8vIGxldCBtYSA9IHJlcS5ib2R5Lm1hXG4gICAgICAgIC8vIGxldCB0ZW4gPSByZXEuYm9keS50ZW5cblxuXHRcdGNvbnN0IHBodW9uZ2FuID0gbmV3IFBodW9uZ2FuKHtcbiAgICAgICAgICAgIG1hOiBtYSxcbiAgICAgICAgICAgIHRlbjogdGVuLFxuICAgICAgICAgICAgbm9pZHVuZzogbm9pZHVuZ1xuICAgICAgICBcblx0XHR9KVxuXHRcdHRyeXtcblx0XHRcdGNvbnN0IHNhdmVQaHVvbmdhbiA9IGF3YWl0IHBodW9uZ2FuLnNhdmUoKVxuXHRcdFx0cmVzLmpzb24oe1xuXHRcdFx0XHRyZXN1bHQgOiBcInN1Y2Nlc3NcIiBcblx0XHRcdH0pXG5cdFx0fSBjYXRjaChlcnIpe1xuXHRcdFx0cmVzLmpzb24oe1xuXHRcdFx0XHRlcnJvciA6IGVycm9yIFxuXHRcdFx0fSlcblx0XHR9XG5cdH0sXG5cdC8vIGRlbGV0ZSBjYXVob2kgKGlkKVxuXHRkZXN0cm95OiBhc3luYyhyZXEsIHJlcyk9Pntcblx0XHRsZXQgaWQgPSByZXEucGFyYW1zLmlkXG5cdFx0Ly9sZXQgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQoaWQpXG5cdFx0bGV0IHBodW9uZ2FuID0gYXdhaXQgUGh1b25nYW4uZGVsZXRlT25lKHtfaWQ6IGlkfSkudGhlbigoKT0+e1xuXHRcdFx0cmVzLmpzb24oe1xuXHRcdFx0XHRyZXN1bHQ6IFwiZGVsZXRlIHN1Y2Vzc2Z1bGx5XCJcblx0XHRcdH0pXG5cdFx0fSkuY2F0Y2goZXJyID0+IHJlcy5qc29uKHtcblx0XHRcdGVycm9yOiBlcnJcblx0XHR9KSlcblx0XHQvL3Jlcy5zZW5kKHVzZXIpXG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtZXRob2RzIl19",
    "map": {
      "version": 3,
      "sources": [
        "phuongan.controller.js"
      ],
      "names": [
        "Phuongan",
        "require",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "phuongan",
        "send",
        "post",
        "body",
        "ma",
        "ten",
        "noidung",
        "save",
        "savePhuongan",
        "json",
        "result",
        "error",
        "destroy",
        "id",
        "params",
        "deleteOne",
        "_id",
        "then",
        "err",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAME,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBN,QAAQ,CAACO,IAAT,EADjB;;AAAA;AACAC,cAAAA,QADA;AAENF,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKf;AACAE,EAAAA,IAAI;AAAA,wEAAE,kBAAML,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BAC2BD,GAAG,CAACM,IAD/B,EACOC,EADP,aACOA,EADP,EACWC,GADX,aACWA,GADX,EACgBC,OADhB,aACgBA,OADhB,EAGC;AACA;;AAEAN,cAAAA,QAND,GAMY,IAAIR,QAAJ,CAAa;AACpBY,gBAAAA,EAAE,EAAEA,EADgB;AAEpBC,gBAAAA,GAAG,EAAEA,GAFe;AAGpBC,gBAAAA,OAAO,EAAEA;AAHW,eAAb,CANZ;AAAA;AAAA;AAAA,qBAauBN,QAAQ,CAACO,IAAT,EAbvB;;AAAA;AAaEC,cAAAA,YAbF;AAcJV,cAAAA,GAAG,CAACW,IAAJ,CAAS;AACRC,gBAAAA,MAAM,EAAG;AADD,eAAT;AAdI;AAAA;;AAAA;AAAA;AAAA;AAkBJZ,cAAAA,GAAG,CAACW,IAAJ,CAAS;AACRE,gBAAAA,KAAK,EAAGA;AADA,eAAT;;AAlBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANW;AA6Bf;AACAC,EAAAA,OAAO;AAAA,2EAAE,kBAAMf,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACJe,cAAAA,EADI,GACChB,GAAG,CAACiB,MAAJ,CAAWD,EADZ,EAER;;AAFQ;AAAA,qBAGarB,QAAQ,CAACuB,SAAT,CAAmB;AAACC,gBAAAA,GAAG,EAAEH;AAAN,eAAnB,EAA8BI,IAA9B,CAAmC,YAAI;AAC3DnB,gBAAAA,GAAG,CAACW,IAAJ,CAAS;AACRC,kBAAAA,MAAM,EAAE;AADA,iBAAT;AAGA,eAJoB,WAIZ,UAAAQ,GAAG;AAAA,uBAAIpB,GAAG,CAACW,IAAJ,CAAS;AACxBE,kBAAAA,KAAK,EAAEO;AADiB,iBAAT,CAAJ;AAAA,eAJS,CAHb;;AAAA;AAGJlB,cAAAA,QAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA9BQ,CAAhB;AA4CAmB,MAAM,CAACC,OAAP,GAAiBzB,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let Phuongan = require('../models/phuongan.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async(req, res)=>{\n\t\tconst phuongan = await Phuongan.find()\n\t\tres.send(phuongan)\n\t},\n\t// add cau hoi \n\tpost: async(req, res)=>{\n        let { ma, ten, noidung} = req.body\n        \n        // let ma = req.body.ma\n        // let ten = req.body.ten\n\n\t\tconst phuongan = new Phuongan({\n            ma: ma,\n            ten: ten,\n            noidung: noidung\n        \n\t\t})\n\t\ttry{\n\t\t\tconst savePhuongan = await phuongan.save()\n\t\t\tres.json({\n\t\t\t\tresult : \"success\" \n\t\t\t})\n\t\t} catch(err){\n\t\t\tres.json({\n\t\t\t\terror : error \n\t\t\t})\n\t\t}\n\t},\n\t// delete cauhoi (id)\n\tdestroy: async(req, res)=>{\n\t\tlet id = req.params.id\n\t\t//let user = await User.findById(id)\n\t\tlet phuongan = await Phuongan.deleteOne({_id: id}).then(()=>{\n\t\t\tres.json({\n\t\t\t\tresult: \"delete sucessfully\"\n\t\t\t})\n\t\t}).catch(err => res.json({\n\t\t\terror: err\n\t\t}))\n\t\t//res.send(user)\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1602682215209
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/mon.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/mon.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/mon.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/mon.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "mon.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mon = _interopRequireDefault(require(\"../controllers/mon.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _mon[\"default\"].index); // add loai cau hoi\n\nrouter.post('/add', _mon[\"default\"].add);\nrouter.post('/chi-tiet', _mon[\"default\"].chitiet);\nrouter.post('/giao-vien', _mon[\"default\"].mongiaovien); // delete loai cau  hoi\n\nrouter.post('/remove', _mon[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbi5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJwb3N0IiwiYWRkIiwiY2hpdGlldCIsIm1vbmdpYW92aWVuIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxnQkFBWUMsS0FBNUIsRSxDQUVBOztBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxNQUFaLEVBQW9CRixnQkFBWUcsR0FBaEM7QUFDQU4sTUFBTSxDQUFDSyxJQUFQLENBQVksV0FBWixFQUF5QkYsZ0JBQVlJLE9BQXJDO0FBQ0FQLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFlBQVosRUFBMEJGLGdCQUFZSyxXQUF0QyxFLENBQ0E7O0FBQ0FSLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFNBQVosRUFBdUJGLGdCQUFZTSxNQUFuQztBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2Qvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcblxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL21vbi5jb250cm9sbGVyJ1xuXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXG5cbi8vIGFkZCBsb2FpIGNhdSBob2lcbnJvdXRlci5wb3N0KCcvYWRkJywgY29udHJvbGxlcnMuYWRkKVxucm91dGVyLnBvc3QoJy9jaGktdGlldCcsIGNvbnRyb2xsZXJzLmNoaXRpZXQpXG5yb3V0ZXIucG9zdCgnL2dpYW8tdmllbicsIGNvbnRyb2xsZXJzLm1vbmdpYW92aWVuKVxuLy8gZGVsZXRlIGxvYWkgY2F1ICBob2lcbnJvdXRlci5wb3N0KCcvcmVtb3ZlJywgY29udHJvbGxlcnMucmVtb3ZlKVxuXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mon.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "post",
        "add",
        "chitiet",
        "mongiaovien",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,gBAAYC,KAA5B,E,CAEA;;AACAJ,MAAM,CAACK,IAAP,CAAY,MAAZ,EAAoBF,gBAAYG,GAAhC;AACAN,MAAM,CAACK,IAAP,CAAY,WAAZ,EAAyBF,gBAAYI,OAArC;AACAP,MAAM,CAACK,IAAP,CAAY,YAAZ,EAA0BF,gBAAYK,WAAtC,E,CACA;;AACAR,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBF,gBAAYM,MAAnC;AAIAC,MAAM,CAACC,OAAP,GAAiBX,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/mon.controller'\n\nrouter.get('/', controllers.index)\n\n// add loai cau hoi\nrouter.post('/add', controllers.add)\nrouter.post('/chi-tiet', controllers.chitiet)\nrouter.post('/giao-vien', controllers.mongiaovien)\n// delete loai cau  hoi\nrouter.post('/remove', controllers.remove)\n\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1610330908610
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/mon.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/mon.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/mon.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/mon.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "mon.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Mon = require('../models/mon.model');\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar DeThi = require('../models/dethi.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var mons;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Mon.find().populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 2:\n              mons = _context.sent;\n              res.send({\n                mons: mons\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  // add mon\n  add: function () {\n    var _add = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$body, ma, ten, _iduser, mon;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              try {\n                _req$body = req.body, ma = _req$body.ma, ten = _req$body.ten, _iduser = _req$body._iduser;\n                mon = new Mon({\n                  ma: ma,\n                  ten: ten,\n                  giaovien: _iduser\n                });\n                mon.save().then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(response) {\n                    var taikhoan;\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return TaiKhoan.findById(_iduser);\n\n                          case 2:\n                            taikhoan = _context2.sent;\n                            taikhoan.mons.push(response._id);\n                            taikhoan.save();\n                            res.send({\n                              mon: response\n                            });\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x5) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function add(_x3, _x4) {\n      return _add.apply(this, arguments);\n    }\n\n    return add;\n  }(),\n  // delete loaicauhoi (id)\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, _idmon, _iduser, mon, cauhoi, dethi, taikhoan, newMons;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _req$body2 = req.body, _idmon = _req$body2._idmon, _iduser = _req$body2._iduser;\n              _context4.next = 4;\n              return Mon.findById(_idmon);\n\n            case 4:\n              mon = _context4.sent;\n              mon[\"delete\"](); //delete all cau hoi cua mon\n\n              _context4.next = 8;\n              return CauHoi.deleteMany({\n                'mon': _idmon\n              });\n\n            case 8:\n              cauhoi = _context4.sent;\n              _context4.next = 11;\n              return DeThi.deleteMany({\n                'mon': _idmon\n              });\n\n            case 11:\n              dethi = _context4.sent;\n              _context4.next = 14;\n              return TaiKhoan.findById(_iduser);\n\n            case 14:\n              taikhoan = _context4.sent;\n              newMons = taikhoan.mons.filter(function (x) {\n                return \"\".concat(x) !== _idmon;\n              });\n              taikhoan.mons = newMons;\n              taikhoan.save();\n              res.end();\n              _context4.next = 24;\n              break;\n\n            case 21:\n              _context4.prev = 21;\n              _context4.t0 = _context4[\"catch\"](0);\n              res.send(_context4.t0);\n\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 21]]);\n    }));\n\n    function remove(_x6, _x7) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }(),\n  chitiet: function () {\n    var _chitiet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _idmon, mon;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _idmon = req.body._idmon;\n              _context5.next = 4;\n              return Mon.findById(_idmon).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 4:\n              mon = _context5.sent;\n              res.send({\n                mon: mon\n              });\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              res.send(_context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n\n    function chitiet(_x8, _x9) {\n      return _chitiet.apply(this, arguments);\n    }\n\n    return chitiet;\n  }(),\n  mongiaovien: function () {\n    var _mongiaovien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _idgv, mons;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _idgv = req.body._idgv;\n              _context6.next = 4;\n              return Mon.find({\n                giaovien: _idgv\n              });\n\n            case 4:\n              mons = _context6.sent;\n              res.send({\n                mons: mons\n              });\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](0);\n              res.send(_context6.t0);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 8]]);\n    }));\n\n    function mongiaovien(_x10, _x11) {\n      return _mongiaovien.apply(this, arguments);\n    }\n\n    return mongiaovien;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "mon.controller.js"
      ],
      "names": [
        "Mon",
        "require",
        "CauHoi",
        "TaiKhoan",
        "DeThi",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "path",
        "model",
        "mons",
        "send",
        "add",
        "body",
        "ma",
        "ten",
        "_iduser",
        "mon",
        "giaovien",
        "save",
        "then",
        "response",
        "findById",
        "taikhoan",
        "push",
        "_id",
        "err",
        "remove",
        "_idmon",
        "deleteMany",
        "cauhoi",
        "dethi",
        "newMons",
        "filter",
        "x",
        "end",
        "chitiet",
        "mongiaovien",
        "_idgv",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMK,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaT,GAAG,CAACU,IAAJ,GAAWC,QAAX,CAAoB;AACtCC,gBAAAA,IAAI,EAAC,SADiC;AAEtCC,gBAAAA,KAAK,EAAC,QAFgC;AAGtCF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH6B,eAApB,CADb;;AAAA;AACAC,cAAAA,IADA;AASNL,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,gBAAAA,IAAI,EAACA;AAAN,eAAT;;AATM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAYf;AACAE,EAAAA,GAAG;AAAA,uEAAE,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJ,kBAAG;AAAA,4BAC2BD,GAAG,CAACS,IAD/B,EACMC,EADN,aACMA,EADN,EACUC,GADV,aACUA,GADV,EACeC,OADf,aACeA,OADf;AAEIC,gBAAAA,GAFJ,GAEU,IAAIrB,GAAJ,CAAQ;AACVkB,kBAAAA,EAAE,EAAEA,EADM;AAEVC,kBAAAA,GAAG,EAAEA,GAFK;AAGVG,kBAAAA,QAAQ,EAACF;AAHC,iBAAR,CAFV;AAOFC,gBAAAA,GAAG,CAACE,IAAJ,GAAWC,IAAX;AAAA,qFAAiB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACOtB,QAAQ,CAACuB,QAAT,CAAkBN,OAAlB,CADP;;AAAA;AACVO,4BAAAA,QADU;AAEfA,4BAAAA,QAAQ,CAACb,IAAT,CAAcc,IAAd,CAAmBH,QAAQ,CAACI,GAA5B;AACAF,4BAAAA,QAAQ,CAACJ,IAAT;AACDd,4BAAAA,GAAG,CAACM,IAAJ,CAAS;AAACM,8BAAAA,GAAG,EAACI;AAAL,6BAAT;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjB;;AAAA;AAAA;AAAA;AAAA;AAOA,eAdD,CAcE,OAAMK,GAAN,EAAU;AACXrB,gBAAAA,GAAG,CAACM,IAAJ,CAASe,GAAT;AACA;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAbY;AAiCf;AACAC,EAAAA,MAAM;AAAA,0EAAE,kBAAOvB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEoBD,GAAG,CAACS,IAFxB,EAECe,MAFD,cAECA,MAFD,EAESZ,OAFT,cAESA,OAFT;AAAA;AAAA,qBAGYpB,GAAG,CAAC0B,QAAJ,CAAaM,MAAb,CAHZ;;AAAA;AAGAX,cAAAA,GAHA;AAILA,cAAAA,GAAG,UAAH,GAJK,CAKN;;AALM;AAAA,qBAMenB,MAAM,CAAC+B,UAAP,CAAkB;AAAC,uBAAMD;AAAP,eAAlB,CANf;;AAAA;AAMAE,cAAAA,MANA;AAAA;AAAA,qBAQc9B,KAAK,CAAC6B,UAAN,CAAiB;AAAC,uBAAMD;AAAP,eAAjB,CARd;;AAAA;AAQAG,cAAAA,KARA;AAAA;AAAA,qBAUiBhC,QAAQ,CAACuB,QAAT,CAAkBN,OAAlB,CAVjB;;AAAA;AAUAO,cAAAA,QAVA;AAWCS,cAAAA,OAXD,GAWWT,QAAQ,CAACb,IAAT,CAAcuB,MAAd,CAAqB,UAAAC,CAAC;AAAA,uBAAE,UAAGA,CAAH,MAAWN,MAAb;AAAA,eAAtB,CAXX;AAYLL,cAAAA,QAAQ,CAACb,IAAT,GAAgBsB,OAAhB;AACAT,cAAAA,QAAQ,CAACJ,IAAT;AACAd,cAAAA,GAAG,CAAC8B,GAAJ;AAdK;AAAA;;AAAA;AAAA;AAAA;AAgBN9B,cAAAA,GAAG,CAACM,IAAJ;;AAhBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlCS;AAqDfyB,EAAAA,OAAO;AAAA,2EAAG,kBAAOhC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDuB,cAAAA,MAFC,GAEOxB,GAAG,CAACS,IAFX,CAEDe,MAFC;AAAA;AAAA,qBAGUhC,GAAG,CAAC0B,QAAJ,CAAaM,MAAb,EAAqBrB,QAArB,CAA8B;AAC/CC,gBAAAA,IAAI,EAAC,SAD0C;AAE/CC,gBAAAA,KAAK,EAAC,QAFyC;AAG/CF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHsC,eAA9B,CAHV;;AAAA;AAGFQ,cAAAA,GAHE;AAWRZ,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAACM,gBAAAA,GAAG,EAACA;AAAL,eAAT;AAXQ;AAAA;;AAAA;AAAA;AAAA;AAaRZ,cAAAA,GAAG,CAACM,IAAJ;;AAbQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArDQ;AAqEf0B,EAAAA,WAAW;AAAA,+EAAG,kBAAOjC,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAELiC,cAAAA,KAFK,GAEIlC,GAAG,CAACS,IAFR,CAELyB,KAFK;AAAA;AAAA,qBAGO1C,GAAG,CAACU,IAAJ,CAAS;AAACY,gBAAAA,QAAQ,EAACoB;AAAV,eAAT,CAHP;;AAAA;AAGN5B,cAAAA,IAHM;AAIZL,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,gBAAAA,IAAI,EAACA;AAAN,eAAT;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZL,cAAAA,GAAG,CAACM,IAAJ;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AArEI,CAAhB;AAgFA4B,MAAM,CAACC,OAAP,GAAiBtC,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let Mon = require('../models/mon.model')\nlet CauHoi = require('../models/cauhoi.model')\nlet TaiKhoan = require('../models/taikhoan.model')\nlet DeThi = require('../models/dethi.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async(req, res)=>{\t\t\n\t\tconst mons = await Mon.find().populate({\n\t\t\tpath:'cauhois',\n\t\t\tmodel:'CauHoi',\n\t\t\tpopulate:{\n\t\t\t\tpath:'phuongans',\n\t\t\t\tmodel:'PhuongAn'\n\t\t\t}\n\t\t})\n\t\tres.send({mons:mons})\n\t},\n\t// add mon\n\tadd: async (req, res)=>{        \n\t\ttry{\t\n\t\t\tconst { ma, ten, _iduser } = req.body        \t        \n\t\t\tconst mon = new Mon({\n\t            ma: ma,\n\t            ten: ten,\n\t            giaovien:_iduser                             \n\t\t\t})\t\t\n\t\t\tmon.save().then( async response=>{\n\t\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\n\t\t\t\t\ttaikhoan.mons.push(response._id)\n\t\t\t\t\ttaikhoan.save()\n\t\t\t\tres.send({mon:response})\n\t\t\t})\n\t\t\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\n\t},\t\n\t// delete loaicauhoi (id)\n\tremove: async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idmon, _iduser} = req.body\t\t\t\t\t\t\n\t\t\tconst mon = await Mon.findById(_idmon)\n\t\t\t\tmon.delete()\t\t\t\t\n\t\t\t//delete all cau hoi cua mon\n\t\t\tconst cauhoi = await CauHoi.deleteMany({'mon':_idmon})\n\t\t\t// delete mon trong de thi\n\t\t\tconst dethi = await DeThi.deleteMany({'mon':_idmon})\n\t\t\t// \n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\n\t\t\t\tconst newMons = taikhoan.mons.filter(x=>`${x}` !== _idmon)\n\t\t\t\ttaikhoan.mons = newMons\t\t\t\n\t\t\t\ttaikhoan.save()\n\t\t\t\tres.end()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tchitiet : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idmon}=req.body\n\t\t\tconst mon = await Mon.findById(_idmon).populate({\n\t\t\t\tpath:'cauhois',\n\t\t\t\tmodel:'CauHoi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t}\n\t\t\t})\n\t\t\tres.send({mon:mon})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tmongiaovien : async (req,res)=>{\n\t\ttry{\n\t\t\tconst {_idgv} = req.body\n\t\t\tconst mons = await Mon.find({giaovien:_idgv})\n\t\t\tres.send({mons:mons})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1610331072080
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/taikhoan.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/taikhoan.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/taikhoan.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/taikhoan.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "taikhoan.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar bcrypt = require('bcrypt');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  maso: String,\n  matkhau: String,\n  ten: String,\n  ngaysinh: String,\n  gioitinh: String,\n  sdt: String,\n  email: String,\n  diachi: String,\n  vaitro: Number,\n  // 0- admin/ 1 giaovien/ 2 sinh vien\n  matkhautam: String,\n  hinhanh: String,\n  trangthai: Number,\n  // 0- cho admin duyet, 1- dang hoat dong, 2- bi khoa\n  nhoms: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Nhom\"\n  }],\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }],\n  baithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"BaiThi\"\n  }],\n  mons: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  }],\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }]\n});\nvar TaiKhoan = mongoose.model('TaiKhoan', schema);\nmodule.exports = TaiKhoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImJjcnlwdCIsIlNjaGVtYSIsInNjaGVtYSIsIm1hc28iLCJTdHJpbmciLCJtYXRraGF1IiwidGVuIiwibmdheXNpbmgiLCJnaW9pdGluaCIsInNkdCIsImVtYWlsIiwiZGlhY2hpIiwidmFpdHJvIiwiTnVtYmVyIiwibWF0a2hhdXRhbSIsImhpbmhhbmgiLCJ0cmFuZ3RoYWkiLCJuaG9tcyIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwia2l0aGlzIiwiYmFpdGhpcyIsIm1vbnMiLCJkZXRoaXMiLCJUYWlLaG9hbiIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLElBQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBRUEsSUFBSUUsTUFBTSxHQUFHSCxRQUFRLENBQUNHLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsSUFBSSxFQUFFQyxNQUZjO0FBR3BCQyxFQUFBQSxPQUFPLEVBQUVELE1BSFc7QUFJcEJFLEVBQUFBLEdBQUcsRUFBRUYsTUFKZTtBQUtwQkcsRUFBQUEsUUFBUSxFQUFFSCxNQUxVO0FBTXBCSSxFQUFBQSxRQUFRLEVBQUNKLE1BTlc7QUFPcEJLLEVBQUFBLEdBQUcsRUFBRUwsTUFQZTtBQVFwQk0sRUFBQUEsS0FBSyxFQUFFTixNQVJhO0FBU3BCTyxFQUFBQSxNQUFNLEVBQUVQLE1BVFk7QUFVcEJRLEVBQUFBLE1BQU0sRUFBRUMsTUFWWTtBQVVEO0FBQ3JCQyxFQUFBQSxVQUFVLEVBQUNWLE1BWFc7QUFZcEJXLEVBQUFBLE9BQU8sRUFBRVgsTUFaVztBQWFwQlksRUFBQUEsU0FBUyxFQUFDSCxNQWJVO0FBYUY7QUFFbEJJLEVBQUFBLEtBQUssRUFBQyxDQUFDO0FBQ1RDLElBQUFBLElBQUksRUFBQ2pCLE1BQU0sQ0FBQ2tCLEtBQVAsQ0FBYUMsUUFEVDtBQUVUQyxJQUFBQSxHQUFHLEVBQUM7QUFGSyxHQUFELENBZmM7QUFtQnBCQyxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNKSixJQUFBQSxJQUFJLEVBQUNqQixNQUFNLENBQUNrQixLQUFQLENBQWFDLFFBRGQ7QUFFSkMsSUFBQUEsR0FBRyxFQUFDO0FBRkEsR0FBRCxDQW5CYTtBQXVCcEJFLEVBQUFBLE9BQU8sRUFBQyxDQUFDO0FBQ0xMLElBQUFBLElBQUksRUFBQ2pCLE1BQU0sQ0FBQ2tCLEtBQVAsQ0FBYUMsUUFEYjtBQUVMQyxJQUFBQSxHQUFHLEVBQUM7QUFGQyxHQUFELENBdkJZO0FBMkJwQkcsRUFBQUEsSUFBSSxFQUFDLENBQUM7QUFDRk4sSUFBQUEsSUFBSSxFQUFDakIsTUFBTSxDQUFDa0IsS0FBUCxDQUFhQyxRQURoQjtBQUVGQyxJQUFBQSxHQUFHLEVBQUM7QUFGRixHQUFELENBM0JlO0FBK0JwQkksRUFBQUEsTUFBTSxFQUFDLENBQUM7QUFDSlAsSUFBQUEsSUFBSSxFQUFDakIsTUFBTSxDQUFDa0IsS0FBUCxDQUFhQyxRQURkO0FBRUpDLElBQUFBLEdBQUcsRUFBQztBQUZBLEdBQUQ7QUEvQmEsQ0FBWCxDQUFiO0FBc0NBLElBQUlLLFFBQVEsR0FBRzVCLFFBQVEsQ0FBQzZCLEtBQVQsQ0FBZSxVQUFmLEVBQTJCekIsTUFBM0IsQ0FBZjtBQUVBMEIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxRQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQnKTtcblxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxuXG52YXIgc2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgXG4gICAgbWFzbzogU3RyaW5nLFxuICAgIG1hdGtoYXU6IFN0cmluZyxcbiAgICB0ZW46IFN0cmluZyxcbiAgICBuZ2F5c2luaDogU3RyaW5nLFxuICAgIGdpb2l0aW5oOlN0cmluZyxcbiAgICBzZHQ6IFN0cmluZywgICAgXG4gICAgZW1haWw6IFN0cmluZyxcbiAgICBkaWFjaGk6IFN0cmluZyxcbiAgICB2YWl0cm86IE51bWJlciwgICAgLy8gMC0gYWRtaW4vIDEgZ2lhb3ZpZW4vIDIgc2luaCB2aWVuXG4gXHRtYXRraGF1dGFtOlN0cmluZyxcbiAgICBoaW5oYW5oOiBTdHJpbmcsXG4gICAgdHJhbmd0aGFpOk51bWJlciwgLy8gMC0gY2hvIGFkbWluIGR1eWV0LCAxLSBkYW5nIGhvYXQgZG9uZywgMi0gYmkga2hvYVxuIFx0XG4gICAgbmhvbXM6W3tcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJOaG9tXCJcblx0fV0sXG4gICAga2l0aGlzOlt7XG4gICAgICAgIHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6XCJLaVRoaVwiXG4gICAgfV0sXG4gICAgYmFpdGhpczpbe1xuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOlwiQmFpVGhpXCJcbiAgICB9XSxcbiAgICBtb25zOlt7XG4gICAgICAgIHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6XCJNb25cIlxuICAgIH1dLFxuICAgIGRldGhpczpbe1xuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOlwiRGVUaGlcIlxuICAgIH1dLFxuXG59KVxuXG52YXIgVGFpS2hvYW4gPSBtb25nb29zZS5tb2RlbCgnVGFpS2hvYW4nLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gVGFpS2hvYW4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "Schema",
        "schema",
        "maso",
        "String",
        "matkhau",
        "ten",
        "ngaysinh",
        "gioitinh",
        "sdt",
        "email",
        "diachi",
        "vaitro",
        "Number",
        "matkhautam",
        "hinhanh",
        "trangthai",
        "nhoms",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "kithis",
        "baithis",
        "mons",
        "dethis",
        "TaiKhoan",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAIE,MAAM,GAAGH,QAAQ,CAACG,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,IAAI,EAAEC,MAFc;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,GAAG,EAAEF,MAJe;AAKpBG,EAAAA,QAAQ,EAAEH,MALU;AAMpBI,EAAAA,QAAQ,EAACJ,MANW;AAOpBK,EAAAA,GAAG,EAAEL,MAPe;AAQpBM,EAAAA,KAAK,EAAEN,MARa;AASpBO,EAAAA,MAAM,EAAEP,MATY;AAUpBQ,EAAAA,MAAM,EAAEC,MAVY;AAUD;AACrBC,EAAAA,UAAU,EAACV,MAXW;AAYpBW,EAAAA,OAAO,EAAEX,MAZW;AAapBY,EAAAA,SAAS,EAACH,MAbU;AAaF;AAElBI,EAAAA,KAAK,EAAC,CAAC;AACTC,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GAAD,CAfc;AAmBpBC,EAAAA,MAAM,EAAC,CAAC;AACJJ,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD,CAnBa;AAuBpBE,EAAAA,OAAO,EAAC,CAAC;AACLL,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD,CAvBY;AA2BpBG,EAAAA,IAAI,EAAC,CAAC;AACFN,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADhB;AAEFC,IAAAA,GAAG,EAAC;AAFF,GAAD,CA3Be;AA+BpBI,EAAAA,MAAM,EAAC,CAAC;AACJP,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD;AA/Ba,CAAX,CAAb;AAsCA,IAAIK,QAAQ,GAAG5B,QAAQ,CAAC6B,KAAT,CAAe,UAAf,EAA2BzB,MAA3B,CAAf;AAEA0B,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\nconst bcrypt = require('bcrypt');\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n    \n    maso: String,\n    matkhau: String,\n    ten: String,\n    ngaysinh: String,\n    gioitinh:String,\n    sdt: String,    \n    email: String,\n    diachi: String,\n    vaitro: Number,    // 0- admin/ 1 giaovien/ 2 sinh vien\n \tmatkhautam:String,\n    hinhanh: String,\n    trangthai:Number, // 0- cho admin duyet, 1- dang hoat dong, 2- bi khoa\n \t\n    nhoms:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"Nhom\"\n\t}],\n    kithis:[{\n        type:Schema.Types.ObjectId,\n        ref:\"KiThi\"\n    }],\n    baithis:[{\n        type:Schema.Types.ObjectId,\n        ref:\"BaiThi\"\n    }],\n    mons:[{\n        type:Schema.Types.ObjectId,\n        ref:\"Mon\"\n    }],\n    dethis:[{\n        type:Schema.Types.ObjectId,\n        ref:\"DeThi\"\n    }],\n\n})\n\nvar TaiKhoan = mongoose.model('TaiKhoan', schema)\n\nmodule.exports = TaiKhoan"
      ]
    },
    "sourceType": "script",
    "mtime": 1609954903123
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/dethi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/dethi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/dethi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/dethi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "dethi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dethi = _interopRequireDefault(require(\"../controllers/dethi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _dethi[\"default\"].index);\nrouter.get('/detail/:_iddethi', _dethi[\"default\"].detail); // de thi cua mon\n\nrouter.get('/mon/:_idmon', _dethi[\"default\"].testOfSubject); // edit // add question to exam\n// router.post('/add-question/:id', controllers.addQuestion)\n\nrouter.post('/add-question', _dethi[\"default\"].addQuestion);\nrouter.post('/mon', _dethi[\"default\"].dethiCuaMon); //delete\n\nrouter.post('/remove-cauhoi', _dethi[\"default\"].removeCauhoi); // add cau hoi\n\nrouter.post('/them', _dethi[\"default\"].post); // delete cau  hoi\n\nrouter.post('/remove', _dethi[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGhpLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsImRldGFpbCIsInRlc3RPZlN1YmplY3QiLCJwb3N0IiwiYWRkUXVlc3Rpb24iLCJkZXRoaUN1YU1vbiIsInJlbW92ZUNhdWhvaSIsInJlbW92ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBR0E7Ozs7QUFIQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFJQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkMsa0JBQVlDLEtBQTVCO0FBRUFKLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLG1CQUFYLEVBQWdDQyxrQkFBWUUsTUFBNUMsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxjQUFYLEVBQTBCQyxrQkFBWUcsYUFBdEMsRSxDQUNBO0FBQ0E7O0FBQ0FOLE1BQU0sQ0FBQ08sSUFBUCxDQUFZLGVBQVosRUFBNkJKLGtCQUFZSyxXQUF6QztBQUNBUixNQUFNLENBQUNPLElBQVAsQ0FBWSxNQUFaLEVBQW9CSixrQkFBWU0sV0FBaEMsRSxDQUNBOztBQUNBVCxNQUFNLENBQUNPLElBQVAsQ0FBWSxnQkFBWixFQUE4Qkosa0JBQVlPLFlBQTFDLEUsQ0FDQTs7QUFDQVYsTUFBTSxDQUFDTyxJQUFQLENBQVksT0FBWixFQUFxQkosa0JBQVlJLElBQWpDLEUsQ0FDQTs7QUFDQVAsTUFBTSxDQUFDTyxJQUFQLENBQVksU0FBWixFQUF1Qkosa0JBQVlRLE1BQW5DO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG5pbXBvcnQgY29udHJvbGxlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvZGV0aGkuY29udHJvbGxlcidcblxucm91dGVyLmdldCgnLycsIGNvbnRyb2xsZXJzLmluZGV4KVxuXG5yb3V0ZXIuZ2V0KCcvZGV0YWlsLzpfaWRkZXRoaScsIGNvbnRyb2xsZXJzLmRldGFpbClcblxuLy8gZGUgdGhpIGN1YSBtb25cbnJvdXRlci5nZXQoJy9tb24vOl9pZG1vbicsY29udHJvbGxlcnMudGVzdE9mU3ViamVjdClcbi8vIGVkaXQgLy8gYWRkIHF1ZXN0aW9uIHRvIGV4YW1cbi8vIHJvdXRlci5wb3N0KCcvYWRkLXF1ZXN0aW9uLzppZCcsIGNvbnRyb2xsZXJzLmFkZFF1ZXN0aW9uKVxucm91dGVyLnBvc3QoJy9hZGQtcXVlc3Rpb24nLCBjb250cm9sbGVycy5hZGRRdWVzdGlvbilcbnJvdXRlci5wb3N0KCcvbW9uJywgY29udHJvbGxlcnMuZGV0aGlDdWFNb24pXG4vL2RlbGV0ZVxucm91dGVyLnBvc3QoJy9yZW1vdmUtY2F1aG9pJywgY29udHJvbGxlcnMucmVtb3ZlQ2F1aG9pKVxuLy8gYWRkIGNhdSBob2lcbnJvdXRlci5wb3N0KCcvdGhlbScsIGNvbnRyb2xsZXJzLnBvc3QpXG4vLyBkZWxldGUgY2F1ICBob2lcbnJvdXRlci5wb3N0KCcvcmVtb3ZlJywgY29udHJvbGxlcnMucmVtb3ZlKVxuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "dethi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "detail",
        "testOfSubject",
        "post",
        "addQuestion",
        "dethiCuaMon",
        "removeCauhoi",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,kBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYE,MAA5C,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,cAAX,EAA0BC,kBAAYG,aAAtC,E,CACA;AACA;;AACAN,MAAM,CAACO,IAAP,CAAY,eAAZ,EAA6BJ,kBAAYK,WAAzC;AACAR,MAAM,CAACO,IAAP,CAAY,MAAZ,EAAoBJ,kBAAYM,WAAhC,E,CACA;;AACAT,MAAM,CAACO,IAAP,CAAY,gBAAZ,EAA8BJ,kBAAYO,YAA1C,E,CACA;;AACAV,MAAM,CAACO,IAAP,CAAY,OAAZ,EAAqBJ,kBAAYI,IAAjC,E,CACA;;AACAP,MAAM,CAACO,IAAP,CAAY,SAAZ,EAAuBJ,kBAAYQ,MAAnC;AAGAC,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/dethi.controller'\n\nrouter.get('/', controllers.index)\n\nrouter.get('/detail/:_iddethi', controllers.detail)\n\n// de thi cua mon\nrouter.get('/mon/:_idmon',controllers.testOfSubject)\n// edit // add question to exam\n// router.post('/add-question/:id', controllers.addQuestion)\nrouter.post('/add-question', controllers.addQuestion)\nrouter.post('/mon', controllers.dethiCuaMon)\n//delete\nrouter.post('/remove-cauhoi', controllers.removeCauhoi)\n// add cau hoi\nrouter.post('/them', controllers.post)\n// delete cau  hoi\nrouter.post('/remove', controllers.remove)\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1610334215515
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/dethi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/dethi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/dethi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/dethi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "dethi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar DeThi = require('../models/dethi.model');\n\nvar Mon = require('../models/mon.model');\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar KiThi = require('../models/kithi.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var dethis;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return DeThi.find().populate('mon').populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              }).populate('mon');\n\n            case 2:\n              dethis = _context.sent;\n              res.send({\n                dethis: dethis\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _iddethi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _iddethi = req.params._iddethi;\n              _context2.next = 4;\n              return DeThi.findById(_iddethi).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 4:\n              dethi = _context2.sent;\n              res.send(dethi);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function detail(_x3, _x4) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  // de thi cua mon\n  testOfSubject: function () {\n    var _testOfSubject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idmon, dethis;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _idmon = req.params._idmon;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return DeThi.find({\n                mon: _idmon\n              });\n\n            case 4:\n              dethis = _context3.sent;\n              //console.log('dethi',dethis)\n              res.send(dethis);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    function testOfSubject(_x5, _x6) {\n      return _testOfSubject.apply(this, arguments);\n    }\n\n    return testOfSubject;\n  }(),\n  addQuestion: function () {\n    var _addQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _req$body, cauhois, _iddethi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _req$body = req.body, cauhois = _req$body.cauhois, _iddethi = _req$body._iddethi;\n              _context5.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context5.sent;\n\n              if (cauhois) {\n                cauhois.forEach( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(item, idx) {\n                    var cauhoi, result_dethi;\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            dethi.cauhois.push(item);\n                            dethi.save();\n                            _context4.next = 4;\n                            return CauHoi.findById(item);\n\n                          case 4:\n                            cauhoi = _context4.sent;\n                            cauhoi.dethis.push(_iddethi);\n                            cauhoi.save();\n\n                            if (!(idx === cauhois.length - 1)) {\n                              _context4.next = 12;\n                              break;\n                            }\n\n                            _context4.next = 10;\n                            return DeThi.findById(_iddethi).populate({\n                              path: 'mon',\n                              model: 'Mon',\n                              populate: {\n                                path: 'cauhois',\n                                model: 'CauHoi',\n                                populate: {\n                                  path: 'phuongans',\n                                  model: 'PhuongAn'\n                                }\n                              }\n                            }).populate({\n                              path: 'cauhois',\n                              model: 'CauHoi',\n                              populate: {\n                                path: 'phuongans',\n                                model: 'PhuongAn'\n                              }\n                            });\n\n                          case 10:\n                            result_dethi = _context4.sent;\n                            res.send({\n                              dethi: result_dethi\n                            });\n\n                          case 12:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x9, _x10) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } // res.send(dethi)\n\n\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              res.send(_context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n\n    function addQuestion(_x7, _x8) {\n      return _addQuestion.apply(this, arguments);\n    }\n\n    return addQuestion;\n  }(),\n  // remove cau hoi cua de\n  removeCauhoi: function () {\n    var _removeCauhoi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body2, _idcauhoi, _iddethi, dethi, newCauhois, cauhoi, newDethis;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _req$body2 = req.body, _idcauhoi = _req$body2._idcauhoi, _iddethi = _req$body2._iddethi;\n              _context6.next = 4;\n              return DeThi.findById(_iddethi).populate('mon');\n\n            case 4:\n              dethi = _context6.sent;\n              // update de thi cua cau hoi\n              newCauhois = dethi.cauhois.filter(function (x) {\n                return \"\".concat(x) != _idcauhoi;\n              });\n              dethi.cauhois = newCauhois;\n              dethi.save();\n              _context6.next = 10;\n              return CauHoi.findById(_idcauhoi);\n\n            case 10:\n              cauhoi = _context6.sent;\n              newDethis = cauhoi.dethis.filter(function (x) {\n                return \"\".concat(x) != _iddethi;\n              });\n              cauhoi.dethis = newDethis;\n              cauhoi.save();\n              res.send({\n                result_dethi: dethi\n              }); // dethi.cauhois.forEach(async (cauhoi,idx)=>{\n              // \tlet each_cauhoi = await CauHoi.findById(cauhoi)\n              // \tlet newDethis = each_cauhoi.dethis.filter(x=> `${x}`!= _iddethi)\n              // \t\teach_cauhoi.dethis = newDethis\n              // \t\teach_cauhoi.save()\n              // \tif (idx===dethi.cauhois.length-1){\n              // \t\t\t// update cau hoi cua de thi\t\n              // \t\tlet newCauhoi = dethi.cauhois.filter(x=> `${x}` != _idcauhoi)\n              // \t\t\tdethi.cauhois = newCauhoi\n              // \t\t\tdethi.save().then(()=>{\n              // \t\t\t\tres.send({result_dethi:dethi})\n              // \t\t\t})\n              // \t\t//const result_dethi = await DeThi.findById(_iddethi).populate('mon')\t\t\t\t\t\t\n              // \t}\t\t\t\t\t\n              // })\t\t\t\t\t\t\n\n              _context6.next = 20;\n              break;\n\n            case 17:\n              _context6.prev = 17;\n              _context6.t0 = _context6[\"catch\"](0);\n              res.send(_context6.t0);\n\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 17]]);\n    }));\n\n    function removeCauhoi(_x11, _x12) {\n      return _removeCauhoi.apply(this, arguments);\n    }\n\n    return removeCauhoi;\n  }(),\n  // create De Thi\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n      var _req$body3, ma, thoigian, namhoc, tieude, ghichu, mon, _iduser, dethi;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _req$body3 = req.body, ma = _req$body3.ma, thoigian = _req$body3.thoigian, namhoc = _req$body3.namhoc, tieude = _req$body3.tieude, ghichu = _req$body3.ghichu, mon = _req$body3.mon, _iduser = _req$body3._iduser;\n              dethi = new DeThi({\n                ma: ma,\n                tieude: tieude,\n                thoigian: thoigian,\n                namhoc: namhoc,\n                ghichu: ghichu,\n                mon: mon,\n                trangthai: 0,\n                taikhoan: _iduser\n              });\n\n              try {\n                dethi.save().then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(respone) {\n                    var p_mon, dethi_result, taikhoan;\n                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return Mon.findById(mon);\n\n                          case 2:\n                            p_mon = _context7.sent;\n                            p_mon.dethis.push(respone._id);\n                            p_mon.save();\n                            _context7.next = 7;\n                            return DeThi.findById(respone._id).populate('mon').populate({\n                              path: 'cauhois',\n                              model: 'CauHoi',\n                              populate: {\n                                path: 'phuongans',\n                                model: 'PhuongAn'\n                              }\n                            }).populate('mon');\n\n                          case 7:\n                            dethi_result = _context7.sent;\n                            _context7.next = 10;\n                            return TaiKhoan.findById(_iduser);\n\n                          case 10:\n                            taikhoan = _context7.sent;\n                            taikhoan.dethis.push(respone._id);\n                            taikhoan.save();\n                            res.send({\n                              dethi: dethi_result\n                            });\n\n                          case 14:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }));\n\n                  return function (_x15) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              } catch (err) {\n                res.json({\n                  error: error\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function post(_x13, _x14) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete loaicauhoi (id)\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n      var _req$body4, _iddethi, _iduser, dethi, taikhoan, newDethis, mon, newDethis_mon;\n\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _req$body4 = req.body, _iddethi = _req$body4._iddethi, _iduser = _req$body4._iduser;\n              _context11.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context11.sent;\n\n              if (dethi.cauhois.length > 0) {\n                dethi.cauhois.forEach( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(cauhoi) {\n                    var each_cauhoi, newDethis;\n                    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            _context9.next = 2;\n                            return CauHoi.findById(cauhoi);\n\n                          case 2:\n                            each_cauhoi = _context9.sent;\n                            newDethis = each_cauhoi.dethis.filter(function (x) {\n                              return \"\".concat(x) != _iddethi;\n                            });\n                            each_cauhoi.dethis = newDethis;\n                            each_cauhoi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee9);\n                  }));\n\n                  return function (_x18) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }\n\n              if (dethi.kithis.length > 0) {\n                dethi.kithis.forEach( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(kithi) {\n                    var each_kithi, newKithis;\n                    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                      while (1) {\n                        switch (_context10.prev = _context10.next) {\n                          case 0:\n                            _context10.next = 2;\n                            return KiThi.findById(kithi);\n\n                          case 2:\n                            each_kithi = _context10.sent;\n                            newKithis = each_kithi.dethis.filter(function (x) {\n                              return \"\".concat(x) != _iddethi;\n                            });\n                            each_kithi.dethis = newKithis;\n                            each_kithi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context10.stop();\n                        }\n                      }\n                    }, _callee10);\n                  }));\n\n                  return function (_x19) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n              }\n\n              _context11.next = 9;\n              return TaiKhoan.findById(_iduser);\n\n            case 9:\n              taikhoan = _context11.sent;\n              newDethis = taikhoan.dethis.filter(function (x) {\n                return \"\".concat(x) !== _iddethi;\n              });\n              taikhoan.dethis = newDethis;\n              taikhoan.save();\n              _context11.next = 15;\n              return Mon.findById(dethi.mon);\n\n            case 15:\n              mon = _context11.sent;\n              newDethis_mon = mon.dethis.filter(function (x) {\n                return \"\".concat(x) != _iddethi;\n              });\n              mon.dethis = newDethis_mon;\n              mon.save();\n              dethi[\"delete\"]();\n              res.end();\n              _context11.next = 26;\n              break;\n\n            case 23:\n              _context11.prev = 23;\n              _context11.t0 = _context11[\"catch\"](0);\n              res.send(_context11.t0);\n\n            case 26:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 23]]);\n    }));\n\n    function remove(_x16, _x17) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }(),\n  dethiCuaMon: function () {\n    var _dethiCuaMon = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n      var _idmon, dethis;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _idmon = req.body._idmon;\n              _context12.next = 4;\n              return DeThi.find({\n                mon: _idmon\n              });\n\n            case 4:\n              dethis = _context12.sent;\n              res.send({\n                dethis: dethis\n              });\n              _context12.next = 11;\n              break;\n\n            case 8:\n              _context12.prev = 8;\n              _context12.t0 = _context12[\"catch\"](0);\n              res.send(_context12.t0);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 8]]);\n    }));\n\n    function dethiCuaMon(_x20, _x21) {\n      return _dethiCuaMon.apply(this, arguments);\n    }\n\n    return dethiCuaMon;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dethi.controller.js"
      ],
      "names": [
        "DeThi",
        "require",
        "Mon",
        "CauHoi",
        "KiThi",
        "TaiKhoan",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "path",
        "model",
        "dethis",
        "send",
        "detail",
        "_iddethi",
        "params",
        "findById",
        "dethi",
        "testOfSubject",
        "_idmon",
        "mon",
        "addQuestion",
        "body",
        "cauhois",
        "forEach",
        "item",
        "idx",
        "push",
        "save",
        "cauhoi",
        "length",
        "result_dethi",
        "removeCauhoi",
        "_idcauhoi",
        "newCauhois",
        "filter",
        "x",
        "newDethis",
        "post",
        "ma",
        "thoigian",
        "namhoc",
        "tieude",
        "ghichu",
        "_iduser",
        "trangthai",
        "taikhoan",
        "then",
        "respone",
        "p_mon",
        "_id",
        "dethi_result",
        "err",
        "json",
        "error",
        "remove",
        "each_cauhoi",
        "kithis",
        "kithi",
        "each_kithi",
        "newKithis",
        "newDethis_mon",
        "end",
        "dethiCuaMon",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMM,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeV,KAAK,CAACW,IAAN,GAAaC,QAAb,CAAsB,KAAtB,EAA6BA,QAA7B,CAAsC;AAC1DC,gBAAAA,IAAI,EAAC,SADqD;AAE1DC,gBAAAA,KAAK,EAAC,QAFoD;AAG1DF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHiD,eAAtC,EAOlBF,QAPkB,CAOT,KAPS,CADf;;AAAA;AACAG,cAAAA,MADA;AASNL,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,gBAAAA,MAAM,EAACA;AAAR,eAAT;;AATM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAYfE,EAAAA,MAAM;AAAA,0EAAE,kBAAMR,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAECQ,cAAAA,QAFD,GAEaT,GAAG,CAACU,MAFjB,CAECD,QAFD;AAAA;AAAA,qBAGclB,KAAK,CAACoB,QAAN,CAAeF,QAAf,EAAyBN,QAAzB,CAAkC;AACrDC,gBAAAA,IAAI,EAAC,SADgD;AAErDC,gBAAAA,KAAK,EAAC,QAF+C;AAGrDF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAE;AAFC;AAH4C,eAAlC,CAHd;;AAAA;AAGAO,cAAAA,KAHA;AAWNX,cAAAA,GAAG,CAACM,IAAJ,CAASK,KAAT;AAXM;AAAA;;AAAA;AAAA;AAAA;AAaNX,cAAAA,GAAG,CAACM,IAAJ;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAZS;AA4Bf;AACAM,EAAAA,aAAa;AAAA,iFAAG,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRa,cAAAA,MADQ,GACEd,GAAG,CAACU,MADN,CACRI,MADQ;AAAA;AAAA;AAAA,qBAGOvB,KAAK,CAACW,IAAN,CAAW;AAACa,gBAAAA,GAAG,EAACD;AAAL,eAAX,CAHP;;AAAA;AAGRR,cAAAA,MAHQ;AAId;AACAL,cAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;AALc;AAAA;;AAAA;AAAA;AAAA;AAOdL,cAAAA,GAAG,CAACM,IAAJ;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7BE;AAuCfS,EAAAA,WAAW;AAAA,+EAAE,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEiBD,GAAG,CAACiB,IAFrB,EAEJC,OAFI,aAEJA,OAFI,EAEKT,QAFL,aAEKA,QAFL;AAAA;AAAA,qBAGOlB,KAAK,CAACoB,QAAN,CAAeF,QAAf,CAHP;;AAAA;AAGPG,cAAAA,KAHO;;AAIX,kBAAIM,OAAJ,EAAY;AACXA,gBAAAA,OAAO,CAACC,OAAR;AAAA,qFAAiB,kBAAOC,IAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBT,4BAAAA,KAAK,CAACM,OAAN,CAAcI,IAAd,CAAmBF,IAAnB;AACAR,4BAAAA,KAAK,CAACW,IAAN;AAFgB;AAAA,mCAIG7B,MAAM,CAACiB,QAAP,CAAgBS,IAAhB,CAJH;;AAAA;AAIZI,4BAAAA,MAJY;AAKfA,4BAAAA,MAAM,CAAClB,MAAP,CAAcgB,IAAd,CAAmBb,QAAnB;AACAe,4BAAAA,MAAM,CAACD,IAAP;;AANe,kCAQZF,GAAG,KAAKH,OAAO,CAACO,MAAR,GAAe,CARX;AAAA;AAAA;AAAA;;AAAA;AAAA,mCASYlC,KAAK,CAACoB,QAAN,CAAeF,QAAf,EAAyBN,QAAzB,CAAkC;AAC5DC,8BAAAA,IAAI,EAAC,KADuD;AAE5DC,8BAAAA,KAAK,EAAC,KAFsD;AAG5DF,8BAAAA,QAAQ,EAAC;AACRC,gCAAAA,IAAI,EAAC,SADG;AAERC,gCAAAA,KAAK,EAAC,QAFE;AAGRF,gCAAAA,QAAQ,EAAC;AACRC,kCAAAA,IAAI,EAAC,WADG;AAERC,kCAAAA,KAAK,EAAC;AAFE;AAHD;AAHmD,6BAAlC,EAWxBF,QAXwB,CAWf;AACXC,8BAAAA,IAAI,EAAC,SADM;AAEXC,8BAAAA,KAAK,EAAC,QAFK;AAGXF,8BAAAA,QAAQ,EAAC;AACRC,gCAAAA,IAAI,EAAC,WADG;AAERC,gCAAAA,KAAK,EAAC;AAFE;AAHE,6BAXe,CATZ;;AAAA;AASTqB,4BAAAA,YATS;AA4BfzB,4BAAAA,GAAG,CAACM,IAAJ,CAAS;AAACK,8BAAAA,KAAK,EAACc;AAAP,6BAAT;;AA5Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjB;;AAAA;AAAA;AAAA;AAAA;AA+BA,eApCU,CAqCX;;;AArCW;AAAA;;AAAA;AAAA;AAAA;AAuCXzB,cAAAA,GAAG,CAACM,IAAJ;;AAvCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvCI;AAiFf;AACAoB,EAAAA,YAAY;AAAA,gFAAE,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEkBD,GAAG,CAACiB,IAFtB,EAELW,SAFK,cAELA,SAFK,EAEMnB,QAFN,cAEMA,QAFN;AAAA;AAAA,qBAGMlB,KAAK,CAACoB,QAAN,CAAeF,QAAf,EAAyBN,QAAzB,CAAkC,KAAlC,CAHN;;AAAA;AAGRS,cAAAA,KAHQ;AAIX;AACMiB,cAAAA,UALK,GAKQjB,KAAK,CAACM,OAAN,CAAcY,MAAd,CAAqB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAASH,SAAb;AAAA,eAAtB,CALR;AAMVhB,cAAAA,KAAK,CAACM,OAAN,GAAgBW,UAAhB;AACAjB,cAAAA,KAAK,CAACW,IAAN;AAPU;AAAA,qBAQU7B,MAAM,CAACiB,QAAP,CAAgBiB,SAAhB,CARV;;AAAA;AAQLJ,cAAAA,MARK;AASJQ,cAAAA,SATI,GASQR,MAAM,CAAClB,MAAP,CAAcwB,MAAd,CAAqB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAAUtB,QAAd;AAAA,eAAtB,CATR;AAUVe,cAAAA,MAAM,CAAClB,MAAP,GAAgB0B,SAAhB;AACAR,cAAAA,MAAM,CAACD,IAAP;AACDtB,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAACmB,gBAAAA,YAAY,EAACd;AAAd,eAAT,EAZW,CAcX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BW;AAAA;;AAAA;AAAA;AAAA;AA+BZX,cAAAA,GAAG,CAACM,IAAJ;;AA/BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlFG;AAoHf;AACA0B,EAAAA,IAAI;AAAA,wEAAE,kBAAOjC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BAC6DD,GAAG,CAACiB,IADjE,EACOiB,EADP,cACOA,EADP,EACWC,QADX,cACWA,QADX,EACqBC,MADrB,cACqBA,MADrB,EAC6BC,MAD7B,cAC6BA,MAD7B,EACqCC,MADrC,cACqCA,MADrC,EAC6CvB,GAD7C,cAC6CA,GAD7C,EACkDwB,OADlD,cACkDA,OADlD;AAEC3B,cAAAA,KAFD,GAES,IAAIrB,KAAJ,CAAU;AACvB2C,gBAAAA,EAAE,EAAEA,EADmB;AAEvBG,gBAAAA,MAAM,EAACA,MAFgB;AAGvBF,gBAAAA,QAAQ,EAAEA,QAHa;AAIvBC,gBAAAA,MAAM,EAAEA,MAJe;AAKvBE,gBAAAA,MAAM,EAAEA,MALe;AAMvBvB,gBAAAA,GAAG,EAACA,GANmB;AAOvByB,gBAAAA,SAAS,EAAE,CAPY;AAQvBC,gBAAAA,QAAQ,EAACF;AARc,eAAV,CAFT;;AAYL,kBAAG;AACF3B,gBAAAA,KAAK,CAACW,IAAN,GAAamB,IAAb;AAAA,sFAAmB,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEAlD,GAAG,CAACkB,QAAJ,CAAaI,GAAb,CAFA;;AAAA;AAEd6B,4BAAAA,KAFc;AAGjBA,4BAAAA,KAAK,CAACtC,MAAN,CAAagB,IAAb,CAAkBqB,OAAO,CAACE,GAA1B;AACAD,4BAAAA,KAAK,CAACrB,IAAN;AAJiB;AAAA,mCAKShC,KAAK,CAACoB,QAAN,CAAegC,OAAO,CAACE,GAAvB,EAA4B1C,QAA5B,CAAqC,KAArC,EAA4CA,QAA5C,CAAqD;AAC9EC,8BAAAA,IAAI,EAAC,SADyE;AAE9EC,8BAAAA,KAAK,EAAC,QAFwE;AAG9EF,8BAAAA,QAAQ,EAAC;AACRC,gCAAAA,IAAI,EAAC,WADG;AAERC,gCAAAA,KAAK,EAAC;AAFE;AAHqE,6BAArD,EAOvBF,QAPuB,CAOd,KAPc,CALT;;AAAA;AAKZ2C,4BAAAA,YALY;AAAA;AAAA,mCAaKlD,QAAQ,CAACe,QAAT,CAAkB4B,OAAlB,CAbL;;AAAA;AAaZE,4BAAAA,QAbY;AAcjBA,4BAAAA,QAAQ,CAACnC,MAAT,CAAgBgB,IAAhB,CAAqBqB,OAAO,CAACE,GAA7B;AACAJ,4BAAAA,QAAQ,CAAClB,IAAT;AACDtB,4BAAAA,GAAG,CAACM,IAAJ,CAAS;AAACK,8BAAAA,KAAK,EAACkC;AAAP,6BAAT;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;;AAAA;AAAA;AAAA;AAAA;AAmBA,eApBD,CAoBE,OAAMC,GAAN,EAAU;AACX9C,gBAAAA,GAAG,CAAC+C,IAAJ,CAAS;AACRC,kBAAAA,KAAK,EAAGA;AADA,iBAAT;AAGA;;AApCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArHW;AA2Jf;AACAC,EAAAA,MAAM;AAAA,0EAAE,mBAAOlD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAGsBD,GAAG,CAACiB,IAH1B,EAGCR,QAHD,cAGCA,QAHD,EAGW8B,OAHX,cAGWA,OAHX;AAAA;AAAA,qBAIchD,KAAK,CAACoB,QAAN,CAAeF,QAAf,CAJd;;AAAA;AAIAG,cAAAA,KAJA;;AAMN,kBAAIA,KAAK,CAACM,OAAN,CAAcO,MAAd,GAAqB,CAAzB,EAA2B;AAC1Bb,gBAAAA,KAAK,CAACM,OAAN,CAAcC,OAAd;AAAA,sFAAsB,kBAAMK,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACG9B,MAAM,CAACiB,QAAP,CAAgBa,MAAhB,CADH;;AAAA;AACjB2B,4BAAAA,WADiB;AAEjBnB,4BAAAA,SAFiB,GAELmB,WAAW,CAAC7C,MAAZ,CAAmBwB,MAAnB,CAA0B,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAAUtB,QAAb;AAAA,6BAA3B,CAFK;AAGpB0C,4BAAAA,WAAW,CAAC7C,MAAZ,GAAqB0B,SAArB;AACAmB,4BAAAA,WAAW,CAAC5B,IAAZ;;AAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AACD,kBAAIX,KAAK,CAACwC,MAAN,CAAa3B,MAAb,GAAoB,CAAxB,EAA0B;AACzBb,gBAAAA,KAAK,CAACwC,MAAN,CAAajC,OAAb;AAAA,sFAAqB,mBAAMkC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACG1D,KAAK,CAACgB,QAAN,CAAe0C,KAAf,CADH;;AAAA;AAChBC,4BAAAA,UADgB;AAEhBC,4BAAAA,SAFgB,GAEJD,UAAU,CAAChD,MAAX,CAAkBwB,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAAUtB,QAAb;AAAA,6BAA1B,CAFI;AAGnB6C,4BAAAA,UAAU,CAAChD,MAAX,GAAoBiD,SAApB;AACAD,4BAAAA,UAAU,CAAC/B,IAAX;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AArBK;AAAA,qBAsBiB3B,QAAQ,CAACe,QAAT,CAAkB4B,OAAlB,CAtBjB;;AAAA;AAsBAE,cAAAA,QAtBA;AAuBCT,cAAAA,SAvBD,GAuBaS,QAAQ,CAACnC,MAAT,CAAgBwB,MAAhB,CAAuB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,MAAWtB,QAAf;AAAA,eAAxB,CAvBb;AAwBLgC,cAAAA,QAAQ,CAACnC,MAAT,GAAkB0B,SAAlB;AACAS,cAAAA,QAAQ,CAAClB,IAAT;AAzBK;AAAA,qBA0BY9B,GAAG,CAACkB,QAAJ,CAAaC,KAAK,CAACG,GAAnB,CA1BZ;;AAAA;AA0BAA,cAAAA,GA1BA;AA2BDyC,cAAAA,aA3BC,GA2BezC,GAAG,CAACT,MAAJ,CAAWwB,MAAX,CAAkB,UAAAC,CAAC;AAAA,uBAAG,UAAGA,CAAH,KAAUtB,QAAb;AAAA,eAAnB,CA3Bf;AA4BJM,cAAAA,GAAG,CAACT,MAAJ,GAAakD,aAAb;AACAzC,cAAAA,GAAG,CAACQ,IAAJ;AACFX,cAAAA,KAAK,UAAL;AACAX,cAAAA,GAAG,CAACwD,GAAJ;AA/BM;AAAA;;AAAA;AAAA;AAAA;AAiCNxD,cAAAA,GAAG,CAACM,IAAJ;;AAjCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA5JS;AAiMfmD,EAAAA,WAAW;AAAA,+EAAG,mBAAO1D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAELa,cAAAA,MAFK,GAEGd,GAAG,CAACiB,IAFP,CAELH,MAFK;AAAA;AAAA,qBAGSvB,KAAK,CAACW,IAAN,CAAW;AAACa,gBAAAA,GAAG,EAACD;AAAL,eAAX,CAHT;;AAAA;AAGNR,cAAAA,MAHM;AAIZL,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,gBAAAA,MAAM,EAACA;AAAR,eAAT;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZL,cAAAA,GAAG,CAACM,IAAJ;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjMI,CAAhB;AA4MAoD,MAAM,CAACC,OAAP,GAAiB9D,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let DeThi = require('../models/dethi.model')\nlet Mon = require('../models/mon.model')\nlet CauHoi = require('../models/cauhoi.model')\nlet KiThi = require('../models/kithi.model')\nlet TaiKhoan = require('../models/taikhoan.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async(req, res)=>{\n\t\tconst dethis = await DeThi.find().populate('mon').populate({\n\t\t\tpath:'cauhois',\n\t\t\tmodel:'CauHoi',\n\t\t\tpopulate:{\n\t\t\t\tpath:'phuongans',\n\t\t\t\tmodel:'PhuongAn'\n\t\t\t}\n\t\t}).populate('mon')\n\t\tres.send({dethis:dethis})\n\t},\n\tdetail: async(req, res)=>{\n\t\ttry{\n\t\t\tconst {_iddethi} = req.params\n\t\t\tconst dethi = await DeThi.findById(_iddethi).populate({\n\t\t\t\tpath:'cauhois',\n\t\t\t\tmodel:'CauHoi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\tmodel: 'PhuongAn'\n\t\t\t\t}\n\t\t\t})\n\t\t\tres.send(dethi)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\t// de thi cua mon\n\ttestOfSubject : async (req, res) => {\n\t\tconst {_idmon} = req.params\t\t\t\t\n\t\ttry{\t\t\t\n\t\t\tconst dethis = await DeThi.find({mon:_idmon})\n\t\t\t//console.log('dethi',dethis)\n\t\t\tres.send(dethis)\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\taddQuestion: async (req, res)=>{\t\t\t\n\t\ttry{\t\t\t\n\t\t\tconst {cauhois, _iddethi} = req.body\n\t\t\tlet dethi = await DeThi.findById(_iddethi)\n\t\t\tif (cauhois){\n\t\t\t\tcauhois.forEach( async (item,idx)=>{\n\t\t\t\t\tdethi.cauhois.push(item)\n\t\t\t\t\tdethi.save()\n\t\t\t\t\t\n\t\t\t\t\tlet cauhoi = await CauHoi.findById(item)\t\t\t\t\t\n\t\t\t\t\t\tcauhoi.dethis.push(_iddethi)\n\t\t\t\t\t\tcauhoi.save()\t\n\n\t\t\t\t\tif (idx === cauhois.length-1){\n\t\t\t\t\t\tconst result_dethi = await DeThi.findById(_iddethi).populate({\n\t\t\t\t\t\t\tpath:'mon',\n\t\t\t\t\t\t\tmodel:'Mon',\n\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).populate({\n\t\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t\t\tres.send({dethi:result_dethi})\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t\t// res.send(dethi)\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\t\t\t\n\t},\n\t// remove cau hoi cua de\n\tremoveCauhoi: async (req, res)=>{\t\t\t\n\t\ttry{\t\t\n\t\t\tconst {_idcauhoi, _iddethi} = req.body\t\t\n\t\t\tlet dethi = await DeThi.findById(_iddethi).populate('mon')\n\t\t\t\t// update de thi cua cau hoi\n\t\t\t\tconst newCauhois = dethi.cauhois.filter(x => `${x}`!= _idcauhoi)\n\t\t\t\t\tdethi.cauhois = newCauhois\n\t\t\t\t\tdethi.save()\n\t\t\t\tconst cauhoi = await CauHoi.findById(_idcauhoi)\n\t\t\t\t\tconst newDethis = cauhoi.dethis.filter(x => `${x}` != _iddethi)\n\t\t\t\t\tcauhoi.dethis = newDethis\n\t\t\t\t\tcauhoi.save()\n\t\t\t\tres.send({result_dethi:dethi})\n\n\t\t\t\t// dethi.cauhois.forEach(async (cauhoi,idx)=>{\n\t\t\t\t// \tlet each_cauhoi = await CauHoi.findById(cauhoi)\n\t\t\t\t// \tlet newDethis = each_cauhoi.dethis.filter(x=> `${x}`!= _iddethi)\n\t\t\t\t// \t\teach_cauhoi.dethis = newDethis\n\t\t\t\t// \t\teach_cauhoi.save()\n\t\t\t\t// \tif (idx===dethi.cauhois.length-1){\n\t\t\t\t// \t\t\t// update cau hoi cua de thi\t\n\t\t\t\t// \t\tlet newCauhoi = dethi.cauhois.filter(x=> `${x}` != _idcauhoi)\n\t\t\t\t// \t\t\tdethi.cauhois = newCauhoi\n\t\t\t\t// \t\t\tdethi.save().then(()=>{\n\t\t\t\t// \t\t\t\tres.send({result_dethi:dethi})\n\t\t\t\t// \t\t\t})\n\t\t\t\t// \t\t//const result_dethi = await DeThi.findById(_iddethi).populate('mon')\t\t\t\t\t\t\n\t\t\t\t// \t}\t\t\t\t\t\n\t\t\t\t// })\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\t\t\t\n\t},\n\t// create De Thi\n\tpost: async (req, res)=>{        \t\t\n        let { ma, thoigian, namhoc, tieude, ghichu, mon, _iduser} = req.body               \n\t\tconst dethi = new DeThi({\n\t\t\tma: ma,\n\t\t\ttieude:tieude,\n\t\t\tthoigian: thoigian,\n\t\t\tnamhoc: namhoc,\n\t\t\tghichu: ghichu,\n\t\t\tmon:mon,\n\t\t\ttrangthai: 0,\n\t\t\ttaikhoan:_iduser\n\t\t})\n\t\ttry{\t\t\t\t\t\n\t\t\tdethi.save().then( async (respone)=>{\n\t\t\t\t// dethi->mon\n\t\t\t\tlet p_mon = await Mon.findById(mon)\n\t\t\t\t\tp_mon.dethis.push(respone._id)\n\t\t\t\t\tp_mon.save()\n\t\t\t\tconst dethi_result = await DeThi.findById(respone._id).populate('mon').populate({\n\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t}\n\t\t\t\t\t}).populate('mon')\n\t\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\n\t\t\t\t\ttaikhoan.dethis.push(respone._id)\n\t\t\t\t\ttaikhoan.save()\n\t\t\t\tres.send({dethi:dethi_result})\n\t\t\t})\n\t\t\t\t\t\t\n\t\t} catch(err){\n\t\t\tres.json({\n\t\t\t\terror : error \n\t\t\t})\n\t\t}\n\t},\n\t// delete loaicauhoi (id)\n\tremove: async (req, res)=>{\t\t\n\t//mon, kithis, cauhois\t\t\n\t\ttry{\n\t\t\tconst {_iddethi, _iduser} = req.body\n\t\t\tconst dethi = await DeThi.findById(_iddethi)\n\t\t\t\t\n\t\t\tif (dethi.cauhois.length>0){\n\t\t\t\tdethi.cauhois.forEach(async cauhoi=>{\n\t\t\t\t\tlet each_cauhoi = await CauHoi.findById(cauhoi)\n\t\t\t\t\tlet newDethis = each_cauhoi.dethis.filter(x=> `${x}` != _iddethi)\n\t\t\t\t\t\teach_cauhoi.dethis = newDethis\n\t\t\t\t\t\teach_cauhoi.save()\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (dethi.kithis.length>0){\n\t\t\t\tdethi.kithis.forEach(async kithi=>{\n\t\t\t\t\tlet each_kithi = await KiThi.findById(kithi)\n\t\t\t\t\tlet newKithis = each_kithi.dethis.filter(x=> `${x}` != _iddethi)\n\t\t\t\t\t\teach_kithi.dethis = newKithis\n\t\t\t\t\t\teach_kithi.save()\n\t\t\t\t})\n\t\t\t}\n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\n\t\t\t\tconst newDethis = taikhoan.dethis.filter(x => `${x}` !== _iddethi)\n\t\t\t\ttaikhoan.dethis = newDethis\n\t\t\t\ttaikhoan.save()\n\t\t\tconst mon = await Mon.findById(dethi.mon)\n\t\t\t\tlet newDethis_mon = mon.dethis.filter(x=> `${x}` != _iddethi)\n\t\t\t\t\tmon.dethis = newDethis_mon\n\t\t\t\t\tmon.save()\n\t\t\tdethi.delete()\n\t\t\tres.end()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t\t//res.send(user)\n\t},\n\tdethiCuaMon : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idmon}=req.body\n\t\t\tconst dethis = await DeThi.find({mon:_idmon})\n\t\t\tres.send({dethis:dethis})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1610334539660
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/kithi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/kithi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/kithi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/kithi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "kithi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  tieude: String,\n  matkhau: String,\n  ngaythi: String,\n  hocki: String,\n  thoigian: Number,\n  trangthai: Boolean,\n  tinhtrang: Number,\n  // 0 da thi, 1 dang thi, 2 chua thi\n  mon: {\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  },\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  dethidongs: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  dethimos: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  nhoms: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Nhom\"\n  }],\n  giaovien: {\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }\n});\nvar KiThi = mongoose.model('KiThi', schema);\nmodule.exports = KiThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpdGhpLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsIm1hIiwiU3RyaW5nIiwidGlldWRlIiwibWF0a2hhdSIsIm5nYXl0aGkiLCJob2NraSIsInRob2lnaWFuIiwiTnVtYmVyIiwidHJhbmd0aGFpIiwiQm9vbGVhbiIsInRpbmh0cmFuZyIsIm1vbiIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiZGV0aGlzIiwiZGV0aGlkb25ncyIsImRldGhpbW9zIiwibmhvbXMiLCJnaWFvdmllbiIsIktpVGhpIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsRUFBRSxFQUFFQyxNQUZnQjtBQUdwQkMsRUFBQUEsTUFBTSxFQUFDRCxNQUhhO0FBSXBCRSxFQUFBQSxPQUFPLEVBQUNGLE1BSlk7QUFLcEJHLEVBQUFBLE9BQU8sRUFBRUgsTUFMVztBQU1wQkksRUFBQUEsS0FBSyxFQUFFSixNQU5hO0FBT3BCSyxFQUFBQSxRQUFRLEVBQUNDLE1BUFc7QUFRcEJDLEVBQUFBLFNBQVMsRUFBRUMsT0FSUztBQVNwQkMsRUFBQUEsU0FBUyxFQUFFSCxNQVRTO0FBU0Q7QUFFckJJLEVBQUFBLEdBQUcsRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURkO0FBRUpDLElBQUFBLEdBQUcsRUFBQztBQUZBLEdBWGtCO0FBZXZCQyxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNQSixJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURYO0FBRVBDLElBQUFBLEdBQUcsRUFBQztBQUZHLEdBQUQsQ0FmZ0I7QUFtQnZCRSxFQUFBQSxVQUFVLEVBQUMsQ0FBQztBQUNYTCxJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURQO0FBRVhDLElBQUFBLEdBQUcsRUFBQztBQUZPLEdBQUQsQ0FuQlk7QUF1QnZCRyxFQUFBQSxRQUFRLEVBQUMsQ0FBQztBQUNUTixJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURUO0FBRVRDLElBQUFBLEdBQUcsRUFBQztBQUZLLEdBQUQsQ0F2QmM7QUEyQnZCSSxFQUFBQSxLQUFLLEVBQUMsQ0FBQztBQUNOUCxJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURaO0FBRU5DLElBQUFBLEdBQUcsRUFBQztBQUZFLEdBQUQsQ0EzQmlCO0FBK0J2QkssRUFBQUEsUUFBUSxFQUFDO0FBQ1JSLElBQUFBLElBQUksRUFBQ2QsTUFBTSxDQUFDZSxLQUFQLENBQWFDLFFBRFY7QUFFUkMsSUFBQUEsR0FBRyxFQUFDO0FBRkk7QUEvQmMsQ0FBWCxDQUFiO0FBcUNBLElBQUlNLEtBQUssR0FBR3pCLFFBQVEsQ0FBQzBCLEtBQVQsQ0FBZSxPQUFmLEVBQXdCdkIsTUFBeEIsQ0FBWjtBQUVBd0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxLQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5cbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcblxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuXG4gICAgbWE6IFN0cmluZyxcbiAgICB0aWV1ZGU6U3RyaW5nLFxuICAgIG1hdGtoYXU6U3RyaW5nLFxuICAgIG5nYXl0aGk6IFN0cmluZywgICAgXG4gICAgaG9ja2k6IFN0cmluZywgICAgXG4gICAgdGhvaWdpYW46TnVtYmVyLCAgICBcbiAgICB0cmFuZ3RoYWk6IEJvb2xlYW4sXG4gICAgdGluaHRyYW5nOiBOdW1iZXIsIC8vIDAgZGEgdGhpLCAxIGRhbmcgdGhpLCAyIGNodWEgdGhpXG4gXHQgXHRcbiBcdG1vbjp7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiTW9uXCJcblx0fSxcblx0ZGV0aGlzOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiRGVUaGlcIlxuXHR9XSxcdFxuXHRkZXRoaWRvbmdzOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiRGVUaGlcIlxuXHR9XSxcdFxuXHRkZXRoaW1vczpbe1xuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuXHRcdHJlZjpcIkRlVGhpXCJcblx0fV0sXHRcblx0bmhvbXM6W3tcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJOaG9tXCJcblx0fV0sXG5cdGdpYW92aWVuOntcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJUYWlLaG9hblwiXG5cdH0sXG59KVxuXG52YXIgS2lUaGkgPSBtb25nb29zZS5tb2RlbCgnS2lUaGknLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gS2lUaGkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "kithi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "tieude",
        "matkhau",
        "ngaythi",
        "hocki",
        "thoigian",
        "Number",
        "trangthai",
        "Boolean",
        "tinhtrang",
        "mon",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "dethis",
        "dethidongs",
        "dethimos",
        "nhoms",
        "giaovien",
        "KiThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,MAAM,EAACD,MAHa;AAIpBE,EAAAA,OAAO,EAACF,MAJY;AAKpBG,EAAAA,OAAO,EAAEH,MALW;AAMpBI,EAAAA,KAAK,EAAEJ,MANa;AAOpBK,EAAAA,QAAQ,EAACC,MAPW;AAQpBC,EAAAA,SAAS,EAAEC,OARS;AASpBC,EAAAA,SAAS,EAAEH,MATS;AASD;AAErBI,EAAAA,GAAG,EAAC;AACJC,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAXkB;AAevBC,EAAAA,MAAM,EAAC,CAAC;AACPJ,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CAfgB;AAmBvBE,EAAAA,UAAU,EAAC,CAAC;AACXL,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADP;AAEXC,IAAAA,GAAG,EAAC;AAFO,GAAD,CAnBY;AAuBvBG,EAAAA,QAAQ,EAAC,CAAC;AACTN,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GAAD,CAvBc;AA2BvBI,EAAAA,KAAK,EAAC,CAAC;AACNP,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADZ;AAENC,IAAAA,GAAG,EAAC;AAFE,GAAD,CA3BiB;AA+BvBK,EAAAA,QAAQ,EAAC;AACRR,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADV;AAERC,IAAAA,GAAG,EAAC;AAFI;AA/Bc,CAAX,CAAb;AAqCA,IAAIM,KAAK,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,OAAf,EAAwBvB,MAAxB,CAAZ;AAEAwB,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ma: String,\n    tieude:String,\n    matkhau:String,\n    ngaythi: String,    \n    hocki: String,    \n    thoigian:Number,    \n    trangthai: Boolean,\n    tinhtrang: Number, // 0 da thi, 1 dang thi, 2 chua thi\n \t \t\n \tmon:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"Mon\"\n\t},\n\tdethis:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"DeThi\"\n\t}],\t\n\tdethidongs:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"DeThi\"\n\t}],\t\n\tdethimos:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"DeThi\"\n\t}],\t\n\tnhoms:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"Nhom\"\n\t}],\n\tgiaovien:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"TaiKhoan\"\n\t},\n})\n\nvar KiThi = mongoose.model('KiThi', schema)\n\nmodule.exports = KiThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1608004022025
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/kithi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/kithi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/kithi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/kithi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "kithi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _kithi = _interopRequireDefault(require(\"../controllers/kithi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _kithi[\"default\"].index);\nrouter.get('/detail/:_idkithi', _kithi[\"default\"].detail);\nrouter.get('/trang-thai/:_idkithi', _kithi[\"default\"].updateStatus);\nrouter.get('/sinh-vien/:_idsv', _kithi[\"default\"].kithiCuaSV);\nrouter.post('/load-de/', _kithi[\"default\"].loadDeCuaKiThi);\nrouter.post('/giao-vien/', _kithi[\"default\"].kithiCuaGV); // add ki thi\n\nrouter.post('/them', _kithi[\"default\"].post); // delete cau  hoi\n\nrouter.post('/remove', _kithi[\"default\"].destroy); // them de thi cho ki thi\n\nrouter.post('/them-de', _kithi[\"default\"].themDeThi); // tahy doi de dong mo\n\nrouter.post('/de-dong-mo', _kithi[\"default\"].changeDongMo); // set tinh trang\n\nrouter.post('/tinh-trang', _kithi[\"default\"].tinhtrang); // tim kiem post {value}\n\nrouter.post('/tim-kiem', _kithi[\"default\"].search); // doi mat khau ki thi\n\nrouter.post('/doi-mat-khau', _kithi[\"default\"].DoiMatKhau); // them nhom thi cho ki thi\n\nrouter.post('/them-nhom', _kithi[\"default\"].themNhom);\nrouter.post('/remove-de-thi', _kithi[\"default\"].removeDethi);\nrouter.post('/remove-nhom', _kithi[\"default\"].removeNhom);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpdGhpLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsImRldGFpbCIsInVwZGF0ZVN0YXR1cyIsImtpdGhpQ3VhU1YiLCJwb3N0IiwibG9hZERlQ3VhS2lUaGkiLCJraXRoaUN1YUdWIiwiZGVzdHJveSIsInRoZW1EZVRoaSIsImNoYW5nZURvbmdNbyIsInRpbmh0cmFuZyIsInNlYXJjaCIsIkRvaU1hdEtoYXUiLCJ0aGVtTmhvbSIsInJlbW92ZURldGhpIiwicmVtb3ZlTmhvbSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBR0E7Ozs7QUFIQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFJQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkMsa0JBQVlDLEtBQTVCO0FBRUFKLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLG1CQUFYLEVBQWdDQyxrQkFBWUUsTUFBNUM7QUFFQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsdUJBQVgsRUFBb0NDLGtCQUFZRyxZQUFoRDtBQUVBTixNQUFNLENBQUNFLEdBQVAsQ0FBVyxtQkFBWCxFQUFnQ0Msa0JBQVlJLFVBQTVDO0FBRUFQLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFdBQVosRUFBeUJMLGtCQUFZTSxjQUFyQztBQUNBVCxNQUFNLENBQUNRLElBQVAsQ0FBWSxhQUFaLEVBQTJCTCxrQkFBWU8sVUFBdkMsRSxDQUVBOztBQUNBVixNQUFNLENBQUNRLElBQVAsQ0FBWSxPQUFaLEVBQXFCTCxrQkFBWUssSUFBakMsRSxDQUNBOztBQUNBUixNQUFNLENBQUNRLElBQVAsQ0FBWSxTQUFaLEVBQXVCTCxrQkFBWVEsT0FBbkMsRSxDQUVBOztBQUNBWCxNQUFNLENBQUNRLElBQVAsQ0FBWSxVQUFaLEVBQXdCTCxrQkFBWVMsU0FBcEMsRSxDQUNBOztBQUNBWixNQUFNLENBQUNRLElBQVAsQ0FBWSxhQUFaLEVBQTJCTCxrQkFBWVUsWUFBdkMsRSxDQUVBOztBQUNBYixNQUFNLENBQUNRLElBQVAsQ0FBWSxhQUFaLEVBQTJCTCxrQkFBWVcsU0FBdkMsRSxDQUNBOztBQUNBZCxNQUFNLENBQUNRLElBQVAsQ0FBWSxXQUFaLEVBQXlCTCxrQkFBWVksTUFBckMsRSxDQUVBOztBQUNBZixNQUFNLENBQUNRLElBQVAsQ0FBWSxlQUFaLEVBQTZCTCxrQkFBWWEsVUFBekMsRSxDQUVBOztBQUNBaEIsTUFBTSxDQUFDUSxJQUFQLENBQVksWUFBWixFQUEwQkwsa0JBQVljLFFBQXRDO0FBRUFqQixNQUFNLENBQUNRLElBQVAsQ0FBWSxnQkFBWixFQUE4Qkwsa0JBQVllLFdBQTFDO0FBQ0FsQixNQUFNLENBQUNRLElBQVAsQ0FBWSxjQUFaLEVBQTRCTCxrQkFBWWdCLFVBQXhDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2Qvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcblxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL2tpdGhpLmNvbnRyb2xsZXInXG5cbnJvdXRlci5nZXQoJy8nLCBjb250cm9sbGVycy5pbmRleClcblxucm91dGVyLmdldCgnL2RldGFpbC86X2lka2l0aGknLCBjb250cm9sbGVycy5kZXRhaWwpXG5cbnJvdXRlci5nZXQoJy90cmFuZy10aGFpLzpfaWRraXRoaScsIGNvbnRyb2xsZXJzLnVwZGF0ZVN0YXR1cylcblxucm91dGVyLmdldCgnL3Npbmgtdmllbi86X2lkc3YnLCBjb250cm9sbGVycy5raXRoaUN1YVNWKVxuXG5yb3V0ZXIucG9zdCgnL2xvYWQtZGUvJywgY29udHJvbGxlcnMubG9hZERlQ3VhS2lUaGkpXG5yb3V0ZXIucG9zdCgnL2dpYW8tdmllbi8nLCBjb250cm9sbGVycy5raXRoaUN1YUdWKVxuXG4vLyBhZGQga2kgdGhpXG5yb3V0ZXIucG9zdCgnL3RoZW0nLCBjb250cm9sbGVycy5wb3N0KVxuLy8gZGVsZXRlIGNhdSAgaG9pXG5yb3V0ZXIucG9zdCgnL3JlbW92ZScsIGNvbnRyb2xsZXJzLmRlc3Ryb3kpXG5cbi8vIHRoZW0gZGUgdGhpIGNobyBraSB0aGlcbnJvdXRlci5wb3N0KCcvdGhlbS1kZScsIGNvbnRyb2xsZXJzLnRoZW1EZVRoaSlcbi8vIHRhaHkgZG9pIGRlIGRvbmcgbW9cbnJvdXRlci5wb3N0KCcvZGUtZG9uZy1tbycsIGNvbnRyb2xsZXJzLmNoYW5nZURvbmdNbylcblxuLy8gc2V0IHRpbmggdHJhbmdcbnJvdXRlci5wb3N0KCcvdGluaC10cmFuZycsIGNvbnRyb2xsZXJzLnRpbmh0cmFuZylcbi8vIHRpbSBraWVtIHBvc3Qge3ZhbHVlfVxucm91dGVyLnBvc3QoJy90aW0ta2llbScsIGNvbnRyb2xsZXJzLnNlYXJjaClcblxuLy8gZG9pIG1hdCBraGF1IGtpIHRoaVxucm91dGVyLnBvc3QoJy9kb2ktbWF0LWtoYXUnLCBjb250cm9sbGVycy5Eb2lNYXRLaGF1KVxuXG4vLyB0aGVtIG5ob20gdGhpIGNobyBraSB0aGlcbnJvdXRlci5wb3N0KCcvdGhlbS1uaG9tJywgY29udHJvbGxlcnMudGhlbU5ob20pXG5cbnJvdXRlci5wb3N0KCcvcmVtb3ZlLWRlLXRoaScsIGNvbnRyb2xsZXJzLnJlbW92ZURldGhpKVxucm91dGVyLnBvc3QoJy9yZW1vdmUtbmhvbScsIGNvbnRyb2xsZXJzLnJlbW92ZU5ob20pXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "kithi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "detail",
        "updateStatus",
        "kithiCuaSV",
        "post",
        "loadDeCuaKiThi",
        "kithiCuaGV",
        "destroy",
        "themDeThi",
        "changeDongMo",
        "tinhtrang",
        "search",
        "DoiMatKhau",
        "themNhom",
        "removeDethi",
        "removeNhom",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,kBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYE,MAA5C;AAEAL,MAAM,CAACE,GAAP,CAAW,uBAAX,EAAoCC,kBAAYG,YAAhD;AAEAN,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYI,UAA5C;AAEAP,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBL,kBAAYM,cAArC;AACAT,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,kBAAYO,UAAvC,E,CAEA;;AACAV,MAAM,CAACQ,IAAP,CAAY,OAAZ,EAAqBL,kBAAYK,IAAjC,E,CACA;;AACAR,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBL,kBAAYQ,OAAnC,E,CAEA;;AACAX,MAAM,CAACQ,IAAP,CAAY,UAAZ,EAAwBL,kBAAYS,SAApC,E,CACA;;AACAZ,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,kBAAYU,YAAvC,E,CAEA;;AACAb,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,kBAAYW,SAAvC,E,CACA;;AACAd,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBL,kBAAYY,MAArC,E,CAEA;;AACAf,MAAM,CAACQ,IAAP,CAAY,eAAZ,EAA6BL,kBAAYa,UAAzC,E,CAEA;;AACAhB,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0BL,kBAAYc,QAAtC;AAEAjB,MAAM,CAACQ,IAAP,CAAY,gBAAZ,EAA8BL,kBAAYe,WAA1C;AACAlB,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BL,kBAAYgB,UAAxC;AAEAC,MAAM,CAACC,OAAP,GAAiBrB,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/kithi.controller'\n\nrouter.get('/', controllers.index)\n\nrouter.get('/detail/:_idkithi', controllers.detail)\n\nrouter.get('/trang-thai/:_idkithi', controllers.updateStatus)\n\nrouter.get('/sinh-vien/:_idsv', controllers.kithiCuaSV)\n\nrouter.post('/load-de/', controllers.loadDeCuaKiThi)\nrouter.post('/giao-vien/', controllers.kithiCuaGV)\n\n// add ki thi\nrouter.post('/them', controllers.post)\n// delete cau  hoi\nrouter.post('/remove', controllers.destroy)\n\n// them de thi cho ki thi\nrouter.post('/them-de', controllers.themDeThi)\n// tahy doi de dong mo\nrouter.post('/de-dong-mo', controllers.changeDongMo)\n\n// set tinh trang\nrouter.post('/tinh-trang', controllers.tinhtrang)\n// tim kiem post {value}\nrouter.post('/tim-kiem', controllers.search)\n\n// doi mat khau ki thi\nrouter.post('/doi-mat-khau', controllers.DoiMatKhau)\n\n// them nhom thi cho ki thi\nrouter.post('/them-nhom', controllers.themNhom)\n\nrouter.post('/remove-de-thi', controllers.removeDethi)\nrouter.post('/remove-nhom', controllers.removeNhom)\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1610336497992
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/kithi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/kithi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/kithi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/kithi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "kithi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Cauhoi = require('../models/cauhoi.model');\n\nvar DeThi = require('../models/dethi.model');\n\nvar KiThi = require('../models/kithi.model');\n\nvar Mon = require('../models/mon.model');\n\nvar Nhom = require('../models/nhom.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var kithi;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return KiThi.find().populate({\n                path: 'dethis',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'sinhviens',\n                  model: 'TaiKhoan'\n                }\n              }).populate({\n                path: 'dethidongs',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              }).populate({\n                path: 'dethimos',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              });\n\n            case 2:\n              kithi = _context.sent;\n              //.sort({'_id':-1})\n              res.send(kithi);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  updateStatus: function () {\n    var _updateStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _idkithi = req.params._idkithi;\n              console.log('ok');\n              console.log(_idkithi);\n              _context2.next = 6;\n              return KiThi.findById(_idkithi);\n\n            case 6:\n              kithi = _context2.sent;\n              kithi.trangthai = !kithi.trangthai;\n              kithi.save();\n              res.end();\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    function updateStatus(_x3, _x4) {\n      return _updateStatus.apply(this, arguments);\n    }\n\n    return updateStatus;\n  }(),\n  kithiCuaSV: function () {\n    var _kithiCuaSV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idsv, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _idsv = req.params._idsv;\n              _context3.next = 4;\n              return TaiKhoan.findById(_idsv).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'kithis',\n                  model: 'KiThi'\n                }\n              });\n\n            case 4:\n              taikhoan = _context3.sent;\n              res.send(taikhoan);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    function kithiCuaSV(_x5, _x6) {\n      return _kithiCuaSV.apply(this, arguments);\n    }\n\n    return kithiCuaSV;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _idkithi = req.params._idkithi;\n              _context4.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context4.sent;\n              res.send(kithi);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              res.send(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    function detail(_x7, _x8) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  questionOfExam: function () {\n    var _questionOfExam = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _iddethi, cauhoi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _iddethi = req.params.id;\n              _context5.prev = 1;\n              cauhoi = [];\n              _context5.next = 5;\n              return DeThi.findById(_iddethi).populate('cauhois').select('cauhois');\n\n            case 5:\n              dethi = _context5.sent;\n              cauhoi.push(dethi); //const cauhoi = await Cauhoi.find()\n\n              res.send(cauhoi);\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](1);\n              res.send(_context5.t0);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 10]]);\n    }));\n\n    function questionOfExam(_x9, _x10) {\n      return _questionOfExam.apply(this, arguments);\n    }\n\n    return questionOfExam;\n  }(),\n  // add ki thi\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n      var _req$body, ma, tieude, matkhau, dethi, ngaythi, hocki, thoigian, mon, giaovien, kithi;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _req$body = req.body, ma = _req$body.ma, tieude = _req$body.tieude, matkhau = _req$body.matkhau, dethi = _req$body.dethi, ngaythi = _req$body.ngaythi, hocki = _req$body.hocki, thoigian = _req$body.thoigian, mon = _req$body.mon, giaovien = _req$body.giaovien;\n              _context7.next = 4;\n              return new KiThi({\n                ma: ma,\n                tieude: tieude,\n                matkhau: matkhau,\n                ngaythi: ngaythi,\n                hocki: hocki,\n                mon: mon,\n                thoigian: thoigian,\n                trangthai: 0,\n                tinhtrang: 2,\n                // chua thi\n                giaovien: giaovien._id\n              });\n\n            case 4:\n              kithi = _context7.sent;\n              kithi.save().then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(response) {\n                  var taikhoan, p_mon, result;\n                  return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return TaiKhoan.findById(giaovien._id);\n\n                        case 2:\n                          taikhoan = _context6.sent;\n                          taikhoan.kithis.push(response._id);\n                          taikhoan.save();\n                          _context6.next = 7;\n                          return Mon.findById(mon);\n\n                        case 7:\n                          p_mon = _context6.sent;\n                          p_mon.kithis.push(response._id);\n                          p_mon.save();\n                          _context6.next = 12;\n                          return KiThi.findById(response._id).populate({\n                            path: 'dethis',\n                            model: 'DeThi'\n                          }).populate({\n                            path: 'mon',\n                            model: 'Mon'\n                          }).populate({\n                            path: 'sinhviens',\n                            model: 'TaiKhoan'\n                          });\n\n                        case 12:\n                          result = _context6.sent;\n                          res.send({\n                            kithi: result\n                          });\n\n                        case 14:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function (_x13) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n              _context7.next = 11;\n              break;\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](0);\n              res.send(_context7.t0);\n\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 8]]);\n    }));\n\n    function post(_x11, _x12) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete cauhoi (id)\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n      var _req$body2, _idkithi, _iduser, taikhoan, newKithis, kithi;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _req$body2 = req.body, _idkithi = _req$body2._idkithi, _iduser = _req$body2._iduser;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return TaiKhoan.findById(_iduser);\n\n            case 4:\n              taikhoan = _context10.sent;\n              newKithis = taikhoan.kithis.filter(function (x) {\n                return \"\".concat(x) !== _idkithi;\n              });\n              taikhoan.kithis = newKithis;\n              taikhoan.save();\n              _context10.next = 10;\n              return KiThi.findById(_idkithi);\n\n            case 10:\n              kithi = _context10.sent;\n\n              if (kithi.dethis.length > 0) {\n                kithi.dethis.forEach( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(item) {\n                    var dethi, newKithis;\n                    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            _context8.next = 2;\n                            return DeThi.findById(item);\n\n                          case 2:\n                            dethi = _context8.sent;\n                            newKithis = dethi.kithis.filter(function (x) {\n                              return \"\".concat(x) != _idkithi;\n                            });\n                            dethi.kithis = newKithis;\n                            dethi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function (_x16) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              }\n\n              if (kithi.nhoms.length > 0) {\n                kithi.nhoms.forEach( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(item_n) {\n                    var nhom, newKithis_n;\n                    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            _context9.next = 2;\n                            return Nhom.findById(item_n);\n\n                          case 2:\n                            nhom = _context9.sent;\n                            newKithis_n = nhom.kithis.filter(function (x) {\n                              return \"\".concat(x) != _idkithi;\n                            });\n                            nhom.kithis = newKithis_n;\n                            nhom.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee9);\n                  }));\n\n                  return function (_x17) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }\n\n              kithi[\"delete\"]();\n              res.send('ok');\n              _context10.next = 20;\n              break;\n\n            case 17:\n              _context10.prev = 17;\n              _context10.t0 = _context10[\"catch\"](1);\n              res.send(_context10.t0);\n\n            case 20:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 17]]);\n    }));\n\n    function destroy(_x14, _x15) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }(),\n  themDeThi: function () {\n    var _themDeThi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n      var _req$body3, _idkithi, dethis, kithi, newDethis;\n\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              // dethis value label\n              _req$body3 = req.body, _idkithi = _req$body3._idkithi, dethis = _req$body3.dethis;\n\n              if (!(dethis.length > 0)) {\n                _context14.next = 9;\n                break;\n              }\n\n              _context14.next = 5;\n              return KiThi.findById(_idkithi);\n\n            case 5:\n              kithi = _context14.sent;\n              newDethis = kithi.dethis;\n              dethis.forEach( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(item, index) {\n                  return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                      switch (_context11.prev = _context11.next) {\n                        case 0:\n                          newDethis.push(item.value);\n\n                          if (index === dethis.length - 1) {\n                            kithi.dethis = newDethis;\n                            kithi.save();\n                          }\n\n                        case 2:\n                        case \"end\":\n                          return _context11.stop();\n                      }\n                    }\n                  }, _callee11);\n                }));\n\n                return function (_x20, _x21) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n              dethis.forEach( /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(dt, idx) {\n                  var de;\n                  return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                    while (1) {\n                      switch (_context13.prev = _context13.next) {\n                        case 0:\n                          _context13.next = 2;\n                          return DeThi.findById(dt.value);\n\n                        case 2:\n                          de = _context13.sent;\n                          de.kithis.push(_idkithi);\n                          de.save().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                            var result;\n                            return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                              while (1) {\n                                switch (_context12.prev = _context12.next) {\n                                  case 0:\n                                    if (!(idx === dethis.length - 1)) {\n                                      _context12.next = 5;\n                                      break;\n                                    }\n\n                                    _context12.next = 3;\n                                    return KiThi.findById(_idkithi).populate('mon').populate({\n                                      path: 'nhoms',\n                                      model: 'Nhom'\n                                    }).populate({\n                                      path: 'dethis',\n                                      model: 'DeThi'\n                                    });\n\n                                  case 3:\n                                    result = _context12.sent;\n                                    res.send({\n                                      kithi: result\n                                    });\n\n                                  case 5:\n                                  case \"end\":\n                                    return _context12.stop();\n                                }\n                              }\n                            }, _callee12);\n                          })));\n\n                        case 5:\n                        case \"end\":\n                          return _context13.stop();\n                      }\n                    }\n                  }, _callee13);\n                }));\n\n                return function (_x22, _x23) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n\n            case 9:\n              _context14.next = 14;\n              break;\n\n            case 11:\n              _context14.prev = 11;\n              _context14.t0 = _context14[\"catch\"](0);\n              res.send(_context14.t0);\n\n            case 14:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 11]]);\n    }));\n\n    function themDeThi(_x18, _x19) {\n      return _themDeThi.apply(this, arguments);\n    }\n\n    return themDeThi;\n  }(),\n  themNhom: function () {\n    var _themNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res) {\n      var _req$body4, _idkithi, nhoms, kithi, newNhoms;\n\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.prev = 0;\n              _req$body4 = req.body, _idkithi = _req$body4._idkithi, nhoms = _req$body4.nhoms;\n              _context18.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context18.sent;\n              newNhoms = kithi.nhoms;\n\n              if (nhoms.length > 0) {\n                nhoms.forEach( /*#__PURE__*/function () {\n                  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(item, idx) {\n                    var nhom;\n                    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                      while (1) {\n                        switch (_context17.prev = _context17.next) {\n                          case 0:\n                            _context17.next = 2;\n                            return Nhom.findById(item.value);\n\n                          case 2:\n                            nhom = _context17.sent;\n                            nhom.kithis.push(_idkithi);\n                            newNhoms.push(item.value);\n                            nhom.save().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n                              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                                while (1) {\n                                  switch (_context16.prev = _context16.next) {\n                                    case 0:\n                                      if (idx === nhoms.length - 1) {\n                                        kithi.nhoms = newNhoms;\n                                        kithi.save().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                                          var kithi_result;\n                                          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                                            while (1) {\n                                              switch (_context15.prev = _context15.next) {\n                                                case 0:\n                                                  _context15.next = 2;\n                                                  return KiThi.findById(_idkithi).populate({\n                                                    path: 'dethis',\n                                                    model: 'DeThi',\n                                                    populate: {\n                                                      path: 'mon',\n                                                      model: 'Mon'\n                                                    }\n                                                  }).populate({\n                                                    path: 'nhoms',\n                                                    model: 'Nhom',\n                                                    populate: {\n                                                      path: 'sinhviens',\n                                                      model: 'TaiKhoan'\n                                                    }\n                                                  });\n\n                                                case 2:\n                                                  kithi_result = _context15.sent;\n                                                  res.send({\n                                                    kithi: kithi_result\n                                                  });\n\n                                                case 4:\n                                                case \"end\":\n                                                  return _context15.stop();\n                                              }\n                                            }\n                                          }, _callee15);\n                                        })));\n                                      }\n\n                                    case 1:\n                                    case \"end\":\n                                      return _context16.stop();\n                                  }\n                                }\n                              }, _callee16);\n                            })));\n\n                          case 6:\n                          case \"end\":\n                            return _context17.stop();\n                        }\n                      }\n                    }, _callee17);\n                  }));\n\n                  return function (_x26, _x27) {\n                    return _ref7.apply(this, arguments);\n                  };\n                }());\n              } // const nhom = await Nhom.findById(_idnhom)\n              // \tnhom.kithis.push(_idkithi)\n              // \tnhom.save()\n              // const kithi = await KiThi.findById(_idkithi).populate({\n              // \t\tpath:'dethis',\n              // \t\tmodel:'DeThi',\n              // \t\tpopulate:{\n              // \t\t\tpath:'mon',\n              // \t\t\tmodel:'Mon'\n              // \t\t}\n              // \t}).populate({\n              // \t\tpath:'nhoms',\n              // \t\tmodel:'Nhom',\n              // \t\tpopulate:{\n              // \t\t\tpath:'sinhviens',\n              // \t\t\tmodel:'TaiKhoan'\n              // \t\t}\n              // \t})\n              // \tkithi.nhoms.push(_idnhom)\n              // \tkithi.save().then(async ()=>{\n              // \t\tconst kithi_result = await KiThi.findById(_idkithi).populate({\n              // \t\tpath:'dethis',\n              // \t\tmodel:'DeThi',\n              // \t\tpopulate:{\n              // \t\t\tpath:'mon',\n              // \t\t\tmodel:'Mon'\n              // \t\t\t}\n              // \t\t}).populate({\n              // \t\t\tpath:'nhoms',\n              // \t\t\tmodel:'Nhom',\n              // \t\t\tpopulate:{\n              // \t\t\t\tpath:'sinhviens',\n              // \t\t\t\tmodel:'TaiKhoan'\n              // \t\t\t}\n              // \t\t})\t\n              // \t\tres.send(kithi_result)\n              // })\t\t\n\n\n              _context18.next = 12;\n              break;\n\n            case 9:\n              _context18.prev = 9;\n              _context18.t0 = _context18[\"catch\"](0);\n              res.send(_context18.t0);\n\n            case 12:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[0, 9]]);\n    }));\n\n    function themNhom(_x24, _x25) {\n      return _themNhom.apply(this, arguments);\n    }\n\n    return themNhom;\n  }(),\n  removeDethi: function () {\n    var _removeDethi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res) {\n      var _req$body5, _iddethi, _idkithi, dethirendermo, dethirenderdong, dethi, newKithis, kithi, newDethis;\n\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.prev = 0;\n              _req$body5 = req.body, _iddethi = _req$body5._iddethi, _idkithi = _req$body5._idkithi, dethirendermo = _req$body5.dethirendermo, dethirenderdong = _req$body5.dethirenderdong;\n              _context19.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context19.sent;\n              newKithis = dethi.kithis.filter(function (x) {\n                return \"\".concat(x) != _idkithi;\n              });\n              dethi.kithis = newKithis;\n              dethi.save();\n              _context19.next = 10;\n              return KiThi.findById(_idkithi);\n\n            case 10:\n              kithi = _context19.sent;\n              newDethis = kithi.dethis.filter(function (x) {\n                return \"\".concat(x) != _iddethi;\n              });\n              kithi.dethis = newDethis;\n              kithi.dethimos = dethirendermo;\n              kithi.dethidongs = dethirenderdong;\n              kithi.save();\n              res.end();\n              _context19.next = 22;\n              break;\n\n            case 19:\n              _context19.prev = 19;\n              _context19.t0 = _context19[\"catch\"](0);\n              res.send(_context19.t0);\n\n            case 22:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[0, 19]]);\n    }));\n\n    function removeDethi(_x28, _x29) {\n      return _removeDethi.apply(this, arguments);\n    }\n\n    return removeDethi;\n  }(),\n  //remove nhom\n  removeNhom: function () {\n    var _removeNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n      var _req$body6, _idnhom, _idkithi, kithi, newNhoms, nhom, newKithis;\n\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _req$body6 = req.body, _idnhom = _req$body6._idnhom, _idkithi = _req$body6._idkithi;\n              _context20.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context20.sent;\n              newNhoms = kithi.nhoms.filter(function (x) {\n                return \"\".concat(x) != _idnhom;\n              });\n              kithi.nhoms = newNhoms;\n              kithi.save();\n              _context20.next = 10;\n              return Nhom.findById(_idnhom);\n\n            case 10:\n              nhom = _context20.sent;\n              newKithis = nhom.kithis.filter(function (x) {\n                return \"\".concat(x) != _idkithi;\n              });\n              nhom.kithis = newKithis;\n              nhom.save();\n              res.end();\n              _context20.next = 20;\n              break;\n\n            case 17:\n              _context20.prev = 17;\n              _context20.t0 = _context20[\"catch\"](0);\n              res.send(_context20.t0);\n\n            case 20:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[0, 17]]);\n    }));\n\n    function removeNhom(_x30, _x31) {\n      return _removeNhom.apply(this, arguments);\n    }\n\n    return removeNhom;\n  }(),\n  loadDeCuaKiThi: function () {\n    var _loadDeCuaKiThi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(req, res) {\n      var iddethis, dethis;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              try {\n                iddethis = req.body.iddethis;\n                dethis = [];\n\n                if (iddethis.length > 0) {\n                  iddethis.forEach( /*#__PURE__*/function () {\n                    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(_iddethi, idx) {\n                      var dethi;\n                      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                        while (1) {\n                          switch (_context21.prev = _context21.next) {\n                            case 0:\n                              _context21.next = 2;\n                              return DeThi.findById(_iddethi);\n\n                            case 2:\n                              dethi = _context21.sent;\n                              dethis.push(dethi);\n\n                              if (idx === iddethis.length - 1) {\n                                res.send(dethis);\n                              }\n\n                            case 5:\n                            case \"end\":\n                              return _context21.stop();\n                          }\n                        }\n                      }, _callee21);\n                    }));\n\n                    return function (_x34, _x35) {\n                      return _ref10.apply(this, arguments);\n                    };\n                  }());\n                }\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }));\n\n    function loadDeCuaKiThi(_x32, _x33) {\n      return _loadDeCuaKiThi.apply(this, arguments);\n    }\n\n    return loadDeCuaKiThi;\n  }(),\n  changeDongMo: function () {\n    var _changeDongMo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(req, res) {\n      var _req$body7, dedong, demo, _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              _req$body7 = req.body, dedong = _req$body7.dedong, demo = _req$body7.demo, _idkithi = _req$body7._idkithi;\n              _context23.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context23.sent;\n              kithi.dethidongs = dedong;\n              kithi.dethimos = demo;\n              kithi.save();\n              _context23.next = 13;\n              break;\n\n            case 10:\n              _context23.prev = 10;\n              _context23.t0 = _context23[\"catch\"](0);\n              res.send(_context23.t0);\n\n            case 13:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[0, 10]]);\n    }));\n\n    function changeDongMo(_x36, _x37) {\n      return _changeDongMo.apply(this, arguments);\n    }\n\n    return changeDongMo;\n  }(),\n  DoiMatKhau: function () {\n    var _DoiMatKhau = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(req, res) {\n      var _req$body8, _idkithi, mkmoi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.prev = 0;\n              _req$body8 = req.body, _idkithi = _req$body8._idkithi, mkmoi = _req$body8.mkmoi;\n              _context24.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context24.sent;\n              kithi.matkhau = mkmoi;\n              kithi.save();\n              res.end();\n              _context24.next = 13;\n              break;\n\n            case 10:\n              _context24.prev = 10;\n              _context24.t0 = _context24[\"catch\"](0);\n              res.send(_context24.t0);\n\n            case 13:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, null, [[0, 10]]);\n    }));\n\n    function DoiMatKhau(_x38, _x39) {\n      return _DoiMatKhau.apply(this, arguments);\n    }\n\n    return DoiMatKhau;\n  }(),\n  tinhtrang: function () {\n    var _tinhtrang = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(req, res) {\n      var _req$body9, _idkithi, _tinhtrang2, kithi;\n\n      return regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.prev = 0;\n              _req$body9 = req.body, _idkithi = _req$body9._idkithi, _tinhtrang2 = _req$body9.tinhtrang;\n              _context25.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context25.sent;\n              kithi.tinhtrang = _tinhtrang2;\n              kithi.save();\n              res.send(kithi);\n              _context25.next = 13;\n              break;\n\n            case 10:\n              _context25.prev = 10;\n              _context25.t0 = _context25[\"catch\"](0);\n              res.send(_context25.t0);\n\n            case 13:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[0, 10]]);\n    }));\n\n    function tinhtrang(_x40, _x41) {\n      return _tinhtrang.apply(this, arguments);\n    }\n\n    return tinhtrang;\n  }(),\n  search: function () {\n    var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(req, res) {\n      var key, kithi;\n      return regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.prev = 0;\n              key = req.body.key;\n              _context26.next = 4;\n              return KiThi.find();\n\n            case 4:\n              kithi = _context26.sent;\n              _context26.next = 10;\n              break;\n\n            case 7:\n              _context26.prev = 7;\n              _context26.t0 = _context26[\"catch\"](0);\n              res.send(_context26.t0);\n\n            case 10:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, null, [[0, 7]]);\n    }));\n\n    function search(_x42, _x43) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }(),\n  kithiCuaGV: function () {\n    var _kithiCuaGV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(req, res) {\n      var _idgv, giaovien;\n\n      return regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.prev = 0;\n              _idgv = req.body._idgv;\n              _context27.next = 4;\n              return TaiKhoan.findById(_idgv).populate({\n                path: 'kithis',\n                model: 'KiThi',\n                populate: {\n                  path: 'dethis',\n                  model: 'DeThi'\n                }\n              }).populate({\n                path: 'kithis',\n                model: 'KiThi',\n                populate: {\n                  path: 'nhoms',\n                  model: 'Nhom'\n                }\n              }).populate({\n                path: 'kithis',\n                model: 'KiThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              });\n\n            case 4:\n              giaovien = _context27.sent;\n              res.send({\n                giaovien: giaovien\n              });\n              _context27.next = 11;\n              break;\n\n            case 8:\n              _context27.prev = 8;\n              _context27.t0 = _context27[\"catch\"](0);\n              res.send(_context27.t0);\n\n            case 11:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27, null, [[0, 8]]);\n    }));\n\n    function kithiCuaGV(_x44, _x45) {\n      return _kithiCuaGV.apply(this, arguments);\n    }\n\n    return kithiCuaGV;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "kithi.controller.js"
      ],
      "names": [
        "Cauhoi",
        "require",
        "DeThi",
        "KiThi",
        "Mon",
        "Nhom",
        "TaiKhoan",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "path",
        "model",
        "kithi",
        "send",
        "updateStatus",
        "_idkithi",
        "params",
        "console",
        "log",
        "findById",
        "trangthai",
        "save",
        "end",
        "kithiCuaSV",
        "_idsv",
        "taikhoan",
        "detail",
        "questionOfExam",
        "_iddethi",
        "id",
        "cauhoi",
        "select",
        "dethi",
        "push",
        "post",
        "body",
        "ma",
        "tieude",
        "matkhau",
        "ngaythi",
        "hocki",
        "thoigian",
        "mon",
        "giaovien",
        "tinhtrang",
        "_id",
        "then",
        "response",
        "kithis",
        "p_mon",
        "result",
        "destroy",
        "_iduser",
        "newKithis",
        "filter",
        "x",
        "dethis",
        "length",
        "forEach",
        "item",
        "nhoms",
        "item_n",
        "nhom",
        "newKithis_n",
        "themDeThi",
        "newDethis",
        "value",
        "dt",
        "idx",
        "de",
        "themNhom",
        "newNhoms",
        "kithi_result",
        "removeDethi",
        "dethirendermo",
        "dethirenderdong",
        "dethimos",
        "dethidongs",
        "removeNhom",
        "_idnhom",
        "loadDeCuaKiThi",
        "iddethis",
        "err",
        "changeDongMo",
        "dedong",
        "demo",
        "DoiMatKhau",
        "mkmoi",
        "search",
        "key",
        "kithiCuaGV",
        "_idgv",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMO,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcR,KAAK,CAACS,IAAN,GAAaC,QAAb,CAAsB;AACzCC,gBAAAA,IAAI,EAAC,QADoC;AAEzCC,gBAAAA,KAAK,EAAC,OAFmC;AAGzCF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHgC,eAAtB,EAOjBF,QAPiB,CAOR;AACXC,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAPQ,EAcjBF,QAdiB,CAcR;AACXC,gBAAAA,IAAI,EAAC,YADM;AAEXC,gBAAAA,KAAK,EAAG,OAFG;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAdQ,EAqBjBF,QArBiB,CAqBR;AACXC,gBAAAA,IAAI,EAAC,UADM;AAEXC,gBAAAA,KAAK,EAAG,OAFG;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eArBQ,CADd;;AAAA;AACAC,cAAAA,KADA;AA8BN;AACAL,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;;AA/BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAkCfE,EAAAA,YAAY;AAAA,gFAAG,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAENQ,cAAAA,QAFM,GAEMT,GAAG,CAACU,MAFV,CAEND,QAFM;AAGbE,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAJa;AAAA,qBAKOhB,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CALP;;AAAA;AAKPH,cAAAA,KALO;AAMZA,cAAAA,KAAK,CAACQ,SAAN,GAAkB,CAACR,KAAK,CAACQ,SAAzB;AACAR,cAAAA,KAAK,CAACS,IAAN;AACDd,cAAAA,GAAG,CAACe,GAAJ;AARa;AAAA;;AAAA;AAAA;AAAA;AAUbf,cAAAA,GAAG,CAACM,IAAJ;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlCG;AA+CfU,EAAAA,UAAU;AAAA,8EAAG,kBAAOjB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJiB,cAAAA,KAFI,GAEKlB,GAAG,CAACU,MAFT,CAEJQ,KAFI;AAAA;AAAA,qBAGYtB,QAAQ,CAACiB,QAAT,CAAkBK,KAAlB,EAAyBf,QAAzB,CAAkC;AACxDC,gBAAAA,IAAI,EAAC,OADmD;AAExDC,gBAAAA,KAAK,EAAC,MAFkD;AAGxDF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,QADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH+C,eAAlC,CAHZ;;AAAA;AAGLc,cAAAA,QAHK;AAWXlB,cAAAA,GAAG,CAACM,IAAJ,CAASY,QAAT;AAXW;AAAA;;AAAA;AAAA;AAAA;AAaXlB,cAAAA,GAAG,CAACM,IAAJ;;AAbW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/CK;AA+Dfa,EAAAA,MAAM;AAAA,0EAAG,kBAAOpB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAQ,cAAAA,QAFA,GAEYT,GAAG,CAACU,MAFhB,CAEAD,QAFA;AAAA;AAAA,qBAGahB,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAHb;;AAAA;AAGDH,cAAAA,KAHC;AAIPL,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AAJO;AAAA;;AAAA;AAAA;AAAA;AAMPL,cAAAA,GAAG,CAACM,IAAJ;;AANO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/DS;AAwEfc,EAAAA,cAAc;AAAA,kFAAG,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVqB,cAAAA,QADU,GACCtB,GAAG,CAACU,MAAJ,CAAWa,EADZ;AAAA;AAGXC,cAAAA,MAHW,GAGF,EAHE;AAAA;AAAA,qBAIKhC,KAAK,CAACqB,QAAN,CAAeS,QAAf,EAAyBnB,QAAzB,CAAkC,SAAlC,EAA6CsB,MAA7C,CAAoD,SAApD,CAJL;;AAAA;AAITC,cAAAA,KAJS;AAMfF,cAAAA,MAAM,CAACG,IAAP,CAAYD,KAAZ,EANe,CAQf;;AACAzB,cAAAA,GAAG,CAACM,IAAJ,CAASiB,MAAT;AATe;AAAA;;AAAA;AAAA;AAAA;AAWfvB,cAAAA,GAAG,CAACM,IAAJ;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxEC;AAsFf;AACAqB,EAAAA,IAAI;AAAA,wEAAE,kBAAO5B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAE4ED,GAAG,CAAC6B,IAFhF,EAEIC,EAFJ,aAEIA,EAFJ,EAEQC,MAFR,aAEQA,MAFR,EAEgBC,OAFhB,aAEgBA,OAFhB,EAEyBN,KAFzB,aAEyBA,KAFzB,EAEgCO,OAFhC,aAEgCA,OAFhC,EAEyCC,KAFzC,aAEyCA,KAFzC,EAEgDC,QAFhD,aAEgDA,QAFhD,EAE0DC,GAF1D,aAE0DA,GAF1D,EAE+DC,QAF/D,aAE+DA,QAF/D;AAAA;AAAA,qBAGgB,IAAI5C,KAAJ,CAAU;AACpBqC,gBAAAA,EAAE,EAAEA,EADgB;AAEpBC,gBAAAA,MAAM,EAAEA,MAFY;AAGpBC,gBAAAA,OAAO,EAACA,OAHY;AAIpBC,gBAAAA,OAAO,EAAEA,OAJW;AAKpBC,gBAAAA,KAAK,EAAEA,KALa;AAMpBE,gBAAAA,GAAG,EAACA,GANgB;AAOpBD,gBAAAA,QAAQ,EAACA,QAPW;AAQpBrB,gBAAAA,SAAS,EAAE,CARS;AASpBwB,gBAAAA,SAAS,EAAE,CATS;AASP;AACbD,gBAAAA,QAAQ,EAACA,QAAQ,CAACE;AAVE,eAAV,CAHhB;;AAAA;AAGEjC,cAAAA,KAHF;AAeJA,cAAAA,KAAK,CAACS,IAAN,GAAayB,IAAb;AAAA,mFAAkB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACM7C,QAAQ,CAACiB,QAAT,CAAkBwB,QAAQ,CAACE,GAA3B,CADN;;AAAA;AACXpB,0BAAAA,QADW;AAEfA,0BAAAA,QAAQ,CAACuB,MAAT,CAAgBf,IAAhB,CAAqBc,QAAQ,CAACF,GAA9B;AACApB,0BAAAA,QAAQ,CAACJ,IAAT;AAHe;AAAA,iCAIIrB,GAAG,CAACmB,QAAJ,CAAauB,GAAb,CAJJ;;AAAA;AAIVO,0BAAAA,KAJU;AAKfA,0BAAAA,KAAK,CAACD,MAAN,CAAaf,IAAb,CAAkBc,QAAQ,CAACF,GAA3B;AACAI,0BAAAA,KAAK,CAAC5B,IAAN;AANe;AAAA,iCAOKtB,KAAK,CAACoB,QAAN,CAAe4B,QAAQ,CAACF,GAAxB,EAA6BpC,QAA7B,CAAsC;AAC1DC,4BAAAA,IAAI,EAAC,QADqD;AAE1DC,4BAAAA,KAAK,EAAC;AAFoD,2BAAtC,EAGlBF,QAHkB,CAGT;AACXC,4BAAAA,IAAI,EAAC,KADM;AAEXC,4BAAAA,KAAK,EAAC;AAFK,2BAHS,EAMlBF,QANkB,CAMT;AACXC,4BAAAA,IAAI,EAAC,WADM;AAEXC,4BAAAA,KAAK,EAAC;AAFK,2BANS,CAPL;;AAAA;AAOVuC,0BAAAA,MAPU;AAiBhB3C,0BAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,4BAAAA,KAAK,EAACsC;AAAP,2BAAT;;AAjBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB;;AAAA;AAAA;AAAA;AAAA;AAfI;AAAA;;AAAA;AAAA;AAAA;AAoCJ3C,cAAAA,GAAG,CAACM,IAAJ;;AApCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvFW;AA8Hf;AACAsC,EAAAA,OAAO;AAAA,2EAAE,mBAAO7C,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BACoBD,GAAG,CAAC6B,IADxB,EACDpB,QADC,cACDA,QADC,EACSqC,OADT,cACSA,OADT;AAAA;AAAA;AAAA,qBAGgBlD,QAAQ,CAACiB,QAAT,CAAkBiC,OAAlB,CAHhB;;AAAA;AAGD3B,cAAAA,QAHC;AAIA4B,cAAAA,SAJA,GAIY5B,QAAQ,CAACuB,MAAT,CAAgBM,MAAhB,CAAuB,UAAAC,CAAC;AAAA,uBAAE,UAAGA,CAAH,MAAWxC,QAAb;AAAA,eAAxB,CAJZ;AAKNU,cAAAA,QAAQ,CAACuB,MAAT,GAAkBK,SAAlB;AACA5B,cAAAA,QAAQ,CAACJ,IAAT;AANM;AAAA,qBAOatB,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAPb;;AAAA;AAODH,cAAAA,KAPC;;AAQN,kBAAGA,KAAK,CAAC4C,MAAN,CAAaC,MAAb,GAAsB,CAAzB,EAA2B;AAC1B7C,gBAAAA,KAAK,CAAC4C,MAAN,CAAaE,OAAb;AAAA,sFAAsB,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACD7D,KAAK,CAACqB,QAAN,CAAewC,IAAf,CADC;;AAAA;AACf3B,4BAAAA,KADe;AAEhBqB,4BAAAA,SAFgB,GAEJrB,KAAK,CAACgB,MAAN,CAAaM,MAAb,CAAoB,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAASxC,QAAZ;AAAA,6BAArB,CAFI;AAGpBiB,4BAAAA,KAAK,CAACgB,MAAN,GAAeK,SAAf;AACArB,4BAAAA,KAAK,CAACX,IAAN;;AAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AACD,kBAAGT,KAAK,CAACgD,KAAN,CAAYH,MAAZ,GAAqB,CAAxB,EAA0B;AACzB7C,gBAAAA,KAAK,CAACgD,KAAN,CAAYF,OAAZ;AAAA,sFAAqB,kBAAMG,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACD5D,IAAI,CAACkB,QAAL,CAAc0C,MAAd,CADC;;AAAA;AACdC,4BAAAA,IADc;AAEfC,4BAAAA,WAFe,GAEDD,IAAI,CAACd,MAAL,CAAYM,MAAZ,CAAmB,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAASxC,QAAZ;AAAA,6BAApB,CAFC;AAGnB+C,4BAAAA,IAAI,CAACd,MAAL,GAAce,WAAd;AACAD,4BAAAA,IAAI,CAACzC,IAAL;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AACDT,cAAAA,KAAK,UAAL;AACDL,cAAAA,GAAG,CAACM,IAAJ,CAAS,IAAT;AAzBO;AAAA;;AAAA;AAAA;AAAA;AA2BPN,cAAAA,GAAG,CAACM,IAAJ;;AA3BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/HQ;AA8JfmD,EAAAA,SAAS;AAAA,6EAAG,mBAAO1D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV;AAFU,2BAGiBD,GAAG,CAAC6B,IAHrB,EAGHpB,QAHG,cAGHA,QAHG,EAGOyC,MAHP,cAGOA,MAHP;;AAAA,oBAIPA,MAAM,CAACC,MAAP,GAAc,CAJP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKW1D,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CALX;;AAAA;AAKHH,cAAAA,KALG;AAMFqD,cAAAA,SANE,GAMUrD,KAAK,CAAC4C,MANhB;AAORA,cAAAA,MAAM,CAACE,OAAP;AAAA,oFAAe,mBAAOC,IAAP,EAAYtD,KAAZ;AAAA;AAAA;AAAA;AAAA;AACd4D,0BAAAA,SAAS,CAAChC,IAAV,CAAe0B,IAAI,CAACO,KAApB;;AACA,8BAAG7D,KAAK,KAAKmD,MAAM,CAACC,MAAP,GAAc,CAA3B,EAA6B;AAC5B7C,4BAAAA,KAAK,CAAC4C,MAAN,GAAeS,SAAf;AACArD,4BAAAA,KAAK,CAACS,IAAN;AACA;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAf;;AAAA;AAAA;AAAA;AAAA;AAQDmC,cAAAA,MAAM,CAACE,OAAP;AAAA,oFAAe,mBAAOS,EAAP,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGtE,KAAK,CAACqB,QAAN,CAAegD,EAAE,CAACD,KAAlB,CADH;;AAAA;AACRG,0BAAAA,EADQ;AAEbA,0BAAAA,EAAE,CAACrB,MAAH,CAAUf,IAAV,CAAelB,QAAf;AACAsD,0BAAAA,EAAE,CAAChD,IAAH,GAAUyB,IAAV,uEAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACVsB,GAAG,KAAKZ,MAAM,CAACC,MAAP,GAAc,CADZ;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGQ1D,KAAK,CAACoB,QAAN,CAAeJ,QAAf,EAAyBN,QAAzB,CAAkC,KAAlC,EAAyCA,QAAzC,CAAkD;AACtEC,sCAAAA,IAAI,EAAC,OADiE;AAEtEC,sCAAAA,KAAK,EAAC;AAFgE,qCAAlD,EAGlBF,QAHkB,CAGT;AACXC,sCAAAA,IAAI,EAAC,QADM;AAEXC,sCAAAA,KAAK,EAAC;AAFK,qCAHS,CAHR;;AAAA;AAGPuC,oCAAAA,MAHO;AAUb3C,oCAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,sCAAAA,KAAK,EAACsC;AAAP,qCAAT;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAf;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAf;;AAAA;AAAA;AAAA;AAAA;;AAfS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmCV3C,cAAAA,GAAG,CAACM,IAAJ;;AAnCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9JM;AAoMfyD,EAAAA,QAAQ;AAAA,4EAAG,mBAAOhE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEiBD,GAAG,CAAC6B,IAFrB,EAEFpB,QAFE,cAEFA,QAFE,EAEQ6C,KAFR,cAEQA,KAFR;AAAA;AAAA,qBAGW7D,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAHX;;AAAA;AAGHH,cAAAA,KAHG;AAIF2D,cAAAA,QAJE,GAIS3D,KAAK,CAACgD,KAJf;;AAKT,kBAAIA,KAAK,CAACH,MAAN,GAAa,CAAjB,EAAmB;AAClBG,gBAAAA,KAAK,CAACF,OAAN;AAAA,sFAAc,mBAAOC,IAAP,EAAYS,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACMnE,IAAI,CAACkB,QAAL,CAAcwC,IAAI,CAACO,KAAnB,CADN;;AAAA;AACPJ,4BAAAA,IADO;AAEZA,4BAAAA,IAAI,CAACd,MAAL,CAAYf,IAAZ,CAAiBlB,QAAjB;AACAwD,4BAAAA,QAAQ,CAACtC,IAAT,CAAc0B,IAAI,CAACO,KAAnB;AACAJ,4BAAAA,IAAI,CAACzC,IAAL,GAAYyB,IAAZ,uEAAiB;AAAA;AAAA;AAAA;AAAA;AAChB,0CAAGsB,GAAG,KAAGR,KAAK,CAACH,MAAN,GAAa,CAAtB,EAAwB;AACvB7C,wCAAAA,KAAK,CAACgD,KAAN,GAAcW,QAAd;AACA3D,wCAAAA,KAAK,CAACS,IAAN,GAAayB,IAAb,uEAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACU/C,KAAK,CAACoB,QAAN,CAAeJ,QAAf,EAAyBN,QAAzB,CAAkC;AAC5DC,oDAAAA,IAAI,EAAC,QADuD;AAE5DC,oDAAAA,KAAK,EAAC,OAFsD;AAG5DF,oDAAAA,QAAQ,EAAC;AACRC,sDAAAA,IAAI,EAAC,KADG;AAERC,sDAAAA,KAAK,EAAC;AAFE;AAHmD,mDAAlC,EAOvBF,QAPuB,CAOd;AACXC,oDAAAA,IAAI,EAAC,OADM;AAEXC,oDAAAA,KAAK,EAAC,MAFK;AAGXF,oDAAAA,QAAQ,EAAC;AACRC,sDAAAA,IAAI,EAAC,WADG;AAERC,sDAAAA,KAAK,EAAC;AAFE;AAHE,mDAPc,CADV;;AAAA;AACX6D,kDAAAA,YADW;AAgBhBjE,kDAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,oDAAAA,KAAK,EAAC4D;AAAP,mDAAT;;AAhBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAlB;AAmBC;;AAtBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAjB;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAd;;AAAA;AAAA;AAAA;AAAA;AA6BE,eAnCM,CAsCT;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;;AA5EQ;AAAA;;AAAA;AAAA;AAAA;AA8ETjE,cAAAA,GAAG,CAACM,IAAJ;;AA9ES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApMO;AAqRf4D,EAAAA,WAAW;AAAA,+EAAG,mBAAOnE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEiDD,GAAG,CAAC6B,IAFrD,EAELP,QAFK,cAELA,QAFK,EAEKb,QAFL,cAEKA,QAFL,EAEe2D,aAFf,cAEeA,aAFf,EAE8BC,eAF9B,cAE8BA,eAF9B;AAAA;AAAA,qBAIQ7E,KAAK,CAACqB,QAAN,CAAeS,QAAf,CAJR;;AAAA;AAINI,cAAAA,KAJM;AAKLqB,cAAAA,SALK,GAKOrB,KAAK,CAACgB,MAAN,CAAaM,MAAb,CAAoB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAAUxC,QAAd;AAAA,eAArB,CALP;AAMXiB,cAAAA,KAAK,CAACgB,MAAN,GAAeK,SAAf;AACArB,cAAAA,KAAK,CAACX,IAAN;AAPW;AAAA,qBAQQtB,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CARR;;AAAA;AAQNH,cAAAA,KARM;AASLqD,cAAAA,SATK,GASOrD,KAAK,CAAC4C,MAAN,CAAaF,MAAb,CAAoB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAAU3B,QAAd;AAAA,eAArB,CATP;AAUXhB,cAAAA,KAAK,CAAC4C,MAAN,GAAeS,SAAf;AACArD,cAAAA,KAAK,CAACgE,QAAN,GAAiBF,aAAjB;AACA9D,cAAAA,KAAK,CAACiE,UAAN,GAAmBF,eAAnB;AACA/D,cAAAA,KAAK,CAACS,IAAN;AAEDd,cAAAA,GAAG,CAACe,GAAJ;AAfY;AAAA;;AAAA;AAAA;AAAA;AAiBZf,cAAAA,GAAG,CAACM,IAAJ;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArRI;AAySf;AACAiE,EAAAA,UAAU;AAAA,8EAAG,mBAAOxE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEiBD,GAAG,CAAC6B,IAFrB,EAEJ4C,OAFI,cAEJA,OAFI,EAEKhE,QAFL,cAEKA,QAFL;AAAA;AAAA,qBAGShB,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAHT;;AAAA;AAGLH,cAAAA,KAHK;AAIJ2D,cAAAA,QAJI,GAIO3D,KAAK,CAACgD,KAAN,CAAYN,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAE,UAAGA,CAAH,KAAQwB,OAAV;AAAA,eAApB,CAJP;AAKVnE,cAAAA,KAAK,CAACgD,KAAN,GAAcW,QAAd;AACA3D,cAAAA,KAAK,CAACS,IAAN;AANU;AAAA,qBAOQpB,IAAI,CAACkB,QAAL,CAAc4D,OAAd,CAPR;;AAAA;AAOLjB,cAAAA,IAPK;AAQJT,cAAAA,SARI,GAQOS,IAAI,CAACd,MAAL,CAAYM,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAE,UAAGA,CAAH,KAAQxC,QAAV;AAAA,eAApB,CARP;AASV+C,cAAAA,IAAI,CAACd,MAAL,GAAcK,SAAd;AACAS,cAAAA,IAAI,CAACzC,IAAL;AAEDd,cAAAA,GAAG,CAACe,GAAJ;AAZW;AAAA;;AAAA;AAAA;AAAA;AAcXf,cAAAA,GAAG,CAACM,IAAJ;;AAdW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA1SK;AA2TfmE,EAAAA,cAAc;AAAA,kFAAG,mBAAO1E,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,kBAAG;AACK0E,gBAAAA,QADL,GACiB3E,GAAG,CAAC6B,IADrB,CACK8C,QADL;AAEEzB,gBAAAA,MAFF,GAEW,EAFX;;AAGF,oBAAIyB,QAAQ,CAACxB,MAAT,GAAiB,CAArB,EAAuB;AACtBwB,kBAAAA,QAAQ,CAACvB,OAAT;AAAA,yFAAiB,mBAAO9B,QAAP,EAAiBwC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACItE,KAAK,CAACqB,QAAN,CAAeS,QAAf,CADJ;;AAAA;AACVI,8BAAAA,KADU;AAEhBwB,8BAAAA,MAAM,CAACvB,IAAP,CAAYD,KAAZ;;AACA,kCAAIoC,GAAG,KAAKa,QAAQ,CAACxB,MAAT,GAAgB,CAA5B,EAA8B;AAC7BlD,gCAAAA,GAAG,CAACM,IAAJ,CAAS2C,MAAT;AACA;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjB;;AAAA;AAAA;AAAA;AAAA;AAOA;AACD,eAZD,CAYE,OAAM0B,GAAN,EAAU;AACX3E,gBAAAA,GAAG,CAACM,IAAJ,CAASqE,GAAT;AACA;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3TC;AA4UfC,EAAAA,YAAY;AAAA,gFAAG,mBAAO7E,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEoBD,GAAG,CAAC6B,IAFxB,EAENiD,MAFM,cAENA,MAFM,EAEEC,IAFF,cAEEA,IAFF,EAEQtE,QAFR,cAEQA,QAFR;AAAA;AAAA,qBAIOhB,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAJP;;AAAA;AAIPH,cAAAA,KAJO;AAKZA,cAAAA,KAAK,CAACiE,UAAN,GAAmBO,MAAnB;AACAxE,cAAAA,KAAK,CAACgE,QAAN,GAAiBS,IAAjB;AACAzE,cAAAA,KAAK,CAACS,IAAN;AAPY;AAAA;;AAAA;AAAA;AAAA;AASbd,cAAAA,GAAG,CAACM,IAAJ;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA5UG;AAwVfyE,EAAAA,UAAU;AAAA,8EAAG,mBAAOhF,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEeD,GAAG,CAAC6B,IAFnB,EAEJpB,QAFI,cAEJA,QAFI,EAEMwE,KAFN,cAEMA,KAFN;AAAA;AAAA,qBAGSxF,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAHT;;AAAA;AAGLH,cAAAA,KAHK;AAIVA,cAAAA,KAAK,CAAC0B,OAAN,GAAgBiD,KAAhB;AACA3E,cAAAA,KAAK,CAACS,IAAN;AACDd,cAAAA,GAAG,CAACe,GAAJ;AANW;AAAA;;AAAA;AAAA;AAAA;AAQXf,cAAAA,GAAG,CAACM,IAAJ;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxVK;AAmWf+B,EAAAA,SAAS;AAAA,6EAAG,mBAAOtC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEsBD,GAAG,CAAC6B,IAF1B,EAEFpB,QAFE,cAEFA,QAFE,EAEQ6B,WAFR,cAEQA,SAFR;AAAA;AAAA,qBAGU7C,KAAK,CAACoB,QAAN,CAAeJ,QAAf,CAHV;;AAAA;AAGJH,cAAAA,KAHI;AAITA,cAAAA,KAAK,CAACgC,SAAN,GAAkBA,WAAlB;AACAhC,cAAAA,KAAK,CAACS,IAAN;AACDd,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AANU;AAAA;;AAAA;AAAA;AAAA;AAQVL,cAAAA,GAAG,CAACM,IAAJ;;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAnWM;AA8Wf2E,EAAAA,MAAM;AAAA,0EAAG,mBAAOlF,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAkF,cAAAA,GAFA,GAEOnF,GAAG,CAAC6B,IAFX,CAEAsD,GAFA;AAAA;AAAA,qBAGa1F,KAAK,CAACS,IAAN,EAHb;;AAAA;AAGDI,cAAAA,KAHC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKPL,cAAAA,GAAG,CAACM,IAAJ;;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9WS;AAsXf6E,EAAAA,UAAU;AAAA,8EAAG,mBAAOpF,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJoF,cAAAA,KAFI,GAEKrF,GAAG,CAAC6B,IAFT,CAEJwD,KAFI;AAAA;AAAA,qBAGYzF,QAAQ,CAACiB,QAAT,CAAkBwE,KAAlB,EAAyBlF,QAAzB,CAAkC;AACxDC,gBAAAA,IAAI,EAAC,QADmD;AAExDC,gBAAAA,KAAK,EAAC,OAFkD;AAGxDF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,QADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH+C,eAAlC,EAOpBF,QAPoB,CAOX;AACXC,gBAAAA,IAAI,EAAC,QADM;AAEXC,gBAAAA,KAAK,EAAC,OAFK;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,OADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAPW,EAcpBF,QAdoB,CAcX;AACXC,gBAAAA,IAAI,EAAC,QADM;AAEXC,gBAAAA,KAAK,EAAC,OAFK;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAdW,CAHZ;;AAAA;AAGLgC,cAAAA,QAHK;AAyBXpC,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAAC8B,gBAAAA,QAAQ,EAACA;AAAV,eAAT;AAzBW;AAAA;;AAAA;AAAA;AAAA;AA2BXpC,cAAAA,GAAG,CAACM,IAAJ;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtXK,CAAhB;AAsZA+E,MAAM,CAACC,OAAP,GAAiBzF,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let Cauhoi = require('../models/cauhoi.model')\nlet DeThi = require('../models/dethi.model')\nlet KiThi = require('../models/kithi.model')\nlet Mon = require('../models/mon.model')\nlet Nhom = require('../models/nhom.model')\nlet TaiKhoan = require('../models/taikhoan.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async (req, res)=>{\n\t\tconst kithi = await KiThi.find().populate({\n\t\t\tpath:'dethis',\n\t\t\tmodel:'DeThi',\n\t\t\tpopulate:{\n\t\t\t\tpath:'mon',\n\t\t\t\tmodel:'Mon'\n\t\t\t}\n\t\t}).populate({\n\t\t\tpath:'nhoms',\n\t\t\tmodel:'Nhom',\n\t\t\tpopulate:{\n\t\t\t\tpath:'sinhviens',\n\t\t\t\tmodel:'TaiKhoan'\n\t\t\t}\n\t\t}).populate({\n\t\t\tpath:'dethidongs',\n\t\t\tmodel : 'DeThi',\n\t\t\tpopulate:{\n\t\t\t\tpath:'mon',\n\t\t\t\tmodel:'Mon'\n\t\t\t}\n\t\t}).populate({\n\t\t\tpath:'dethimos',\n\t\t\tmodel : 'DeThi',\n\t\t\tpopulate:{\n\t\t\t\tpath:'mon',\n\t\t\t\tmodel:'Mon'\n\t\t\t}\n\t\t})\n\t\t//.sort({'_id':-1})\n\t\tres.send(kithi)\n\t},\n\tupdateStatus : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idkithi} = req.params\n\t\t\tconsole.log('ok')\n\t\t\tconsole.log(_idkithi)\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tkithi.trangthai = !kithi.trangthai\n\t\t\t\tkithi.save()\n\t\t\tres.end()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tkithiCuaSV : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idsv} = req.params\n\t\t\tconst taikhoan = await TaiKhoan.findById(_idsv).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'kithis',\n\t\t\t\t\tmodel:'KiThi'\t\t\t\t\t\n\t\t\t\t}\t\t\t\n\t\t\t})\n\t\t\tres.send(taikhoan)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tdetail : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idkithi} = req.params\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\tres.send(kithi)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tquestionOfExam : async (req, res)=>{\n\t\tconst _iddethi = req.params.id\t\t\n\t\ttry{\n\t\t\tlet cauhoi = []\n\t\t\tconst dethi = await DeThi.findById(_iddethi).populate('cauhois').select('cauhois')\n\t\t\t\n\t\t\tcauhoi.push(dethi)\n\t\t\t\n\t\t\t//const cauhoi = await Cauhoi.find()\n\t\t\tres.send(cauhoi)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\t\t\n\t},\n\t// add ki thi\n\tpost: async (req, res)=>{        \n\t\ttry{\t\t\t\n\t\t\tconst { ma, tieude, matkhau ,dethi, ngaythi, hocki, thoigian, mon, giaovien } = req.body        \n\t\t\tconst kithi = await new KiThi({\n\t            ma: ma,\n\t            tieude: tieude,            \n\t            matkhau:matkhau,\n\t            ngaythi: ngaythi,\n\t            hocki: hocki,\n\t            mon:mon,\n\t            thoigian:thoigian,\n\t            trangthai: 0,\n\t            tinhtrang: 2,// chua thi\n\t            giaovien:giaovien._id\n\t\t\t})\n\t\t\tkithi.save().then(async response=>{\n\t\t\t\tconst taikhoan = await TaiKhoan.findById(giaovien._id)\n\t\t\t \t\ttaikhoan.kithis.push(response._id)\n\t\t\t \t\ttaikhoan.save()\n\t\t\t \tconst p_mon = await Mon.findById(mon)\n\t\t\t \t\tp_mon.kithis.push(response._id)\n\t\t\t \t\tp_mon.save()\n\t\t\t \tconst result = await KiThi.findById(response._id).populate({\n\t\t\t \t\tpath:'dethis',\n\t\t\t \t\tmodel:'DeThi',\t\t\t \t\t\n\t\t\t \t}).populate({\n\t\t\t \t\tpath:'mon',\n\t\t\t \t\tmodel:'Mon'\n\t\t\t \t}).populate({\n\t\t\t \t\tpath:'sinhviens',\n\t\t\t \t\tmodel:'TaiKhoan'\n\t\t\t \t})\n\t\t\t \tres.send({kithi:result})\n\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\t// delete cauhoi (id)\n\tdestroy: async (req, res)=>{\n\t\tconst {_idkithi, _iduser} = req.body\n\t\ttry{\t\t\n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\t\n\t\t\t\tconst newKithis = taikhoan.kithis.filter(x=>`${x}` !== _idkithi)\n\t\t\t\ttaikhoan.kithis = newKithis\n\t\t\t\ttaikhoan.save()\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tif(kithi.dethis.length > 0){\n\t\t\t\t\tkithi.dethis.forEach( async item=>{\n\t\t\t\t\t\tconst dethi = await DeThi.findById(item)\n\t\t\t\t\t\t\tlet newKithis = dethi.kithis.filter(x=> `${x}`!= _idkithi)\n\t\t\t\t\t\t\tdethi.kithis = newKithis\n\t\t\t\t\t\t\tdethi.save()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif(kithi.nhoms.length > 0){\n\t\t\t\t\tkithi.nhoms.forEach( async item_n=>{\n\t\t\t\t\t\tconst nhom = await Nhom.findById(item_n)\n\t\t\t\t\t\t\tlet newKithis_n = nhom.kithis.filter(x=> `${x}`!= _idkithi)\n\t\t\t\t\t\t\tnhom.kithis = newKithis_n\n\t\t\t\t\t\t\tnhom.save()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tkithi.delete()\n\t\t\tres.send('ok')\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t\t//res.send(user)\n\t},\n\tthemDeThi : async (req, res)=>{\n\t\ttry{\n\t\t\t// dethis value label\n\t\t\tconst {_idkithi, dethis} = req.body\n\t\t\tif(dethis.length>0){\n\t\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\t\tconst newDethis = kithi.dethis\n\t\t\t\t\tdethis.forEach(async (item,index)=>{\n\t\t\t\t\t\tnewDethis.push(item.value)\n\t\t\t\t\t\tif(index === dethis.length-1){\n\t\t\t\t\t\t\tkithi.dethis = newDethis\n\t\t\t\t\t\t\tkithi.save()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\t\t\t\t\n\n\t\t\t\tdethis.forEach(async (dt,idx)=>{\n\t\t\t\t\tconst de = await DeThi.findById(dt.value)\n\t\t\t\t\t\tde.kithis.push(_idkithi)\n\t\t\t\t\t\tde.save().then(async ()=>{\n\t\t\t\t\t\t\tif (idx === dethis.length-1){\n\n\t\t\t\t\t\t\t\tconst result = await KiThi.findById(_idkithi).populate('mon').populate({\n\t\t\t\t\t\t\t\t\tpath:'nhoms',\n\t\t\t\t\t\t\t\t\tmodel:'Nhom'\n\t\t\t\t\t\t\t\t}).populate({\n\t\t\t\t\t\t\t\t\tpath:'dethis',\n\t\t\t\t\t\t\t\t\tmodel:'DeThi'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tres.send({kithi:result})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\t// moi de thi pish ki thi\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tthemNhom : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idkithi, nhoms} = req.body\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tconst newNhoms = kithi.nhoms\n\t\t\tif (nhoms.length>0){\n\t\t\t\tnhoms.forEach(async (item,idx)=>{\n\t\t\t\t\tconst nhom = await Nhom.findById(item.value)\t\t\t\t\t\n\t\t\t\t\t\tnhom.kithis.push(_idkithi)\n\t\t\t\t\t\tnewNhoms.push(item.value)\n\t\t\t\t\t\tnhom.save().then(async ()=>{\n\t\t\t\t\t\t\tif(idx===nhoms.length-1){\n\t\t\t\t\t\t\t\tkithi.nhoms = newNhoms\n\t\t\t\t\t\t\t\tkithi.save().then(async ()=>{\n\t\t\t\t\t\t\t\t\tconst kithi_result = await KiThi.findById(_idkithi).populate({\n\t\t\t\t\t\t\t\t\t\tpath:'dethis',\n\t\t\t\t\t\t\t\t\t\tmodel:'DeThi',\n\t\t\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\t\t\tpath:'mon',\n\t\t\t\t\t\t\t\t\t\t\tmodel:'Mon'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}).populate({\n\t\t\t\t\t\t\t\t\t\t\tpath:'nhoms',\n\t\t\t\t\t\t\t\t\t\t\tmodel:'Nhom',\n\t\t\t\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\t\t\t\tpath:'sinhviens',\n\t\t\t\t\t\t\t\t\t\t\t\tmodel:'TaiKhoan'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\t\n\t\t\t\t\t\t\t\t\t\tres.send({kithi:kithi_result})\n\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\n\t\t\t// const nhom = await Nhom.findById(_idnhom)\n\t\t\t// \tnhom.kithis.push(_idkithi)\n\t\t\t// \tnhom.save()\n\t\t\t\n\t\t\t// const kithi = await KiThi.findById(_idkithi).populate({\n\t\t\t// \t\tpath:'dethis',\n\t\t\t// \t\tmodel:'DeThi',\n\t\t\t// \t\tpopulate:{\n\t\t\t// \t\t\tpath:'mon',\n\t\t\t// \t\t\tmodel:'Mon'\n\t\t\t// \t\t}\n\t\t\t// \t}).populate({\n\t\t\t// \t\tpath:'nhoms',\n\t\t\t// \t\tmodel:'Nhom',\n\t\t\t// \t\tpopulate:{\n\t\t\t// \t\t\tpath:'sinhviens',\n\t\t\t// \t\t\tmodel:'TaiKhoan'\n\t\t\t// \t\t}\n\t\t\t// \t})\n\n\t\t\t// \tkithi.nhoms.push(_idnhom)\n\t\t\t// \tkithi.save().then(async ()=>{\n\t\t\t// \t\tconst kithi_result = await KiThi.findById(_idkithi).populate({\n\t\t\t// \t\tpath:'dethis',\n\t\t\t// \t\tmodel:'DeThi',\n\t\t\t// \t\tpopulate:{\n\t\t\t// \t\t\tpath:'mon',\n\t\t\t// \t\t\tmodel:'Mon'\n\t\t\t// \t\t\t}\n\t\t\t// \t\t}).populate({\n\t\t\t// \t\t\tpath:'nhoms',\n\t\t\t// \t\t\tmodel:'Nhom',\n\t\t\t// \t\t\tpopulate:{\n\t\t\t// \t\t\t\tpath:'sinhviens',\n\t\t\t// \t\t\t\tmodel:'TaiKhoan'\n\t\t\t// \t\t\t}\n\t\t\t// \t\t})\t\n\t\t\t// \t\tres.send(kithi_result)\n\t\t\t\t// })\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tremoveDethi : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_iddethi, _idkithi, dethirendermo, dethirenderdong} = req.body\t\t\t\n\t\t\t\n\t\t\tconst dethi = await DeThi.findById(_iddethi)\n\t\t\t\tconst newKithis = dethi.kithis.filter(x => `${x}` != _idkithi)\n\t\t\t\tdethi.kithis = newKithis\n\t\t\t\tdethi.save()\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tconst newDethis = kithi.dethis.filter(x => `${x}` != _iddethi)\n\t\t\t\tkithi.dethis = newDethis\n\t\t\t\tkithi.dethimos = dethirendermo\n\t\t\t\tkithi.dethidongs = dethirenderdong\n\t\t\t\tkithi.save()\t\t\t\n\t\t\t\n\t\t\tres.end()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\t//remove nhom\n\tremoveNhom : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idnhom, _idkithi} = req.body\t\t\t\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tconst newNhoms = kithi.nhoms.filter(x=>`${x}`!=_idnhom)\n\t\t\t\tkithi.nhoms = newNhoms\n\t\t\t\tkithi.save()\n\t\t\tconst nhom = await Nhom.findById(_idnhom)\n\t\t\t\tconst newKithis= nhom.kithis.filter(x=>`${x}`!=_idkithi)\n\t\t\t\tnhom.kithis = newKithis\n\t\t\t\tnhom.save()\t\t\t\n\t\t\t\n\t\t\tres.end()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tloadDeCuaKiThi : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {iddethis} = req.body\n\t\t\tlet dethis = []\n\t\t\tif (iddethis.length >0){\n\t\t\t\tiddethis.forEach(async (_iddethi, idx) => {\n\t\t\t\t\tconst dethi = await DeThi.findById(_iddethi)\n\t\t\t\t\tdethis.push(dethi)\n\t\t\t\t\tif (idx === iddethis.length-1){\t\t\t\t\t\t\n\t\t\t\t\t\tres.send(dethis)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tchangeDongMo : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {dedong, demo, _idkithi} = req.body\t\n\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tkithi.dethidongs = dedong\n\t\t\t\tkithi.dethimos = demo\n\t\t\t\tkithi.save()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tDoiMatKhau : async (req, res) => {\n\t\ttry{\n\t\t\tconst {_idkithi, mkmoi} = req.body\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tkithi.matkhau = mkmoi\n\t\t\t\tkithi.save()\n\t\t\tres.end()\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\ttinhtrang : async (req, res) =>{\n\t\ttry{\n\t\t\tconst { _idkithi, tinhtrang } = req.body\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\tkithi.tinhtrang = tinhtrang\n\t\t\t\tkithi.save()\n\t\t\tres.send(kithi)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tsearch : async (req, res) =>{\n\t\ttry{\n\t\t\tconst {key} = req.body\n\t\t\tconst kithi = await KiThi.find()\n\t\t} catch (err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tkithiCuaGV : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idgv} = req.body\n\t\t\tconst giaovien = await TaiKhoan.findById(_idgv).populate({\n\t\t\t\tpath:'kithis',\n\t\t\t\tmodel:'KiThi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'dethis',\n\t\t\t\t\tmodel:'DeThi'\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'kithis',\n\t\t\t\tmodel:'KiThi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'nhoms',\n\t\t\t\t\tmodel:'Nhom'\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'kithis',\n\t\t\t\tmodel:'KiThi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'mon',\n\t\t\t\t\tmodel:'Mon'\n\t\t\t\t}\n\t\t\t})\n\t\t\tres.send({giaovien:giaovien})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1610336655357
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/nhom.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/nhom.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/nhom.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/nhom.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "nhom.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  ten: String,\n  namhoc: String,\n  ghichu: String,\n  trangthai: Number,\n  sinhviens: [{\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }],\n  giaoviens: [{\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }],\n  thongbaos: [{\n    type: Schema.Types.ObjectId,\n    ref: \"ThongBao\"\n  }],\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }]\n});\nvar Nhom = mongoose.model('Nhom', schema);\nmodule.exports = Nhom;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ob20ubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwic2NoZW1hIiwibWEiLCJTdHJpbmciLCJ0ZW4iLCJuYW1ob2MiLCJnaGljaHUiLCJ0cmFuZ3RoYWkiLCJOdW1iZXIiLCJzaW5odmllbnMiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImdpYW92aWVucyIsInRob25nYmFvcyIsImtpdGhpcyIsIk5ob20iLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBdEI7QUFFQSxJQUFJQyxNQUFNLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBRXBCRSxFQUFBQSxFQUFFLEVBQUVDLE1BRmdCO0FBR3BCQyxFQUFBQSxHQUFHLEVBQUNELE1BSGdCO0FBSXBCRSxFQUFBQSxNQUFNLEVBQUVGLE1BSlk7QUFLcEJHLEVBQUFBLE1BQU0sRUFBRUgsTUFMWTtBQU1wQkksRUFBQUEsU0FBUyxFQUFFQyxNQU5TO0FBUXRCQyxFQUFBQSxTQUFTLEVBQUMsQ0FBQztBQUNYQyxJQUFBQSxJQUFJLEVBQUNWLE1BQU0sQ0FBQ1csS0FBUCxDQUFhQyxRQURQO0FBRVhDLElBQUFBLEdBQUcsRUFBQztBQUZPLEdBQUQsQ0FSWTtBQVl2QkMsRUFBQUEsU0FBUyxFQUFDLENBQUM7QUFDVkosSUFBQUEsSUFBSSxFQUFDVixNQUFNLENBQUNXLEtBQVAsQ0FBYUMsUUFEUjtBQUVWQyxJQUFBQSxHQUFHLEVBQUM7QUFGTSxHQUFELENBWmE7QUFnQnZCRSxFQUFBQSxTQUFTLEVBQUMsQ0FBQztBQUNWTCxJQUFBQSxJQUFJLEVBQUNWLE1BQU0sQ0FBQ1csS0FBUCxDQUFhQyxRQURSO0FBRVZDLElBQUFBLEdBQUcsRUFBQztBQUZNLEdBQUQsQ0FoQmE7QUFvQnZCRyxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNQTixJQUFBQSxJQUFJLEVBQUNWLE1BQU0sQ0FBQ1csS0FBUCxDQUFhQyxRQURYO0FBRVBDLElBQUFBLEdBQUcsRUFBQztBQUZHLEdBQUQ7QUFwQmdCLENBQVgsQ0FBYjtBQTJCQSxJQUFJSSxJQUFJLEdBQUduQixRQUFRLENBQUNvQixLQUFULENBQWUsTUFBZixFQUF1QmpCLE1BQXZCLENBQVg7QUFFQWtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsSUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuXG52YXIgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcblxuICAgIG1hOiBTdHJpbmcsXG4gICAgdGVuOlN0cmluZywgICAgICBcbiAgICBuYW1ob2M6IFN0cmluZyxcbiAgICBnaGljaHU6IFN0cmluZyxcbiAgICB0cmFuZ3RoYWk6IE51bWJlcixcbiBcdFxuIFx0c2luaHZpZW5zOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiVGFpS2hvYW5cIlxuXHR9XSxcblx0Z2lhb3ZpZW5zOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiVGFpS2hvYW5cIlxuXHR9XSxcblx0dGhvbmdiYW9zOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiVGhvbmdCYW9cIlxuXHR9XSxcblx0a2l0aGlzOlt7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiS2lUaGlcIlxuXHR9XSxcbiAgICBcbn0pXG5cbnZhciBOaG9tID0gbW9uZ29vc2UubW9kZWwoJ05ob20nLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gTmhvbSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "nhom.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "ten",
        "namhoc",
        "ghichu",
        "trangthai",
        "Number",
        "sinhviens",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "giaoviens",
        "thongbaos",
        "kithis",
        "Nhom",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,GAAG,EAACD,MAHgB;AAIpBE,EAAAA,MAAM,EAAEF,MAJY;AAKpBG,EAAAA,MAAM,EAAEH,MALY;AAMpBI,EAAAA,SAAS,EAAEC,MANS;AAQtBC,EAAAA,SAAS,EAAC,CAAC;AACXC,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADP;AAEXC,IAAAA,GAAG,EAAC;AAFO,GAAD,CARY;AAYvBC,EAAAA,SAAS,EAAC,CAAC;AACVJ,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADR;AAEVC,IAAAA,GAAG,EAAC;AAFM,GAAD,CAZa;AAgBvBE,EAAAA,SAAS,EAAC,CAAC;AACVL,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADR;AAEVC,IAAAA,GAAG,EAAC;AAFM,GAAD,CAhBa;AAoBvBG,EAAAA,MAAM,EAAC,CAAC;AACPN,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD;AApBgB,CAAX,CAAb;AA2BA,IAAII,IAAI,GAAGnB,QAAQ,CAACoB,KAAT,CAAe,MAAf,EAAuBjB,MAAvB,CAAX;AAEAkB,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ma: String,\n    ten:String,      \n    namhoc: String,\n    ghichu: String,\n    trangthai: Number,\n \t\n \tsinhviens:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"TaiKhoan\"\n\t}],\n\tgiaoviens:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"TaiKhoan\"\n\t}],\n\tthongbaos:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"ThongBao\"\n\t}],\n\tkithis:[{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"KiThi\"\n\t}],\n    \n})\n\nvar Nhom = mongoose.model('Nhom', schema)\n\nmodule.exports = Nhom"
      ]
    },
    "sourceType": "script",
    "mtime": 1607004213234
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/nhom.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/nhom.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/nhom.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/nhom.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "nhom.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _nhom = _interopRequireDefault(require(\"../controllers/nhom.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _nhom[\"default\"].index);\nrouter.get('/giao-vien/:_idtaikhoan', _nhom[\"default\"].giaovien);\nrouter.get('/sinh-vien/:_idtaikhoan', _nhom[\"default\"].sinhvien); // add nhom\n\nrouter.post('/add', _nhom[\"default\"].post);\nrouter.post('/giao-vien', _nhom[\"default\"].nhomGiaoVien);\nrouter.get('/detail/:_idnhom', _nhom[\"default\"].detail); // delete loai lop\n//router.delete('/:id', controllers.destroy)\n\nrouter.get('/remove/:_idnhom', _nhom[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ob20ucm91dGUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJjb250cm9sbGVycyIsImluZGV4IiwiZ2lhb3ZpZW4iLCJzaW5odmllbiIsInBvc3QiLCJuaG9tR2lhb1ZpZW4iLCJkZXRhaWwiLCJyZW1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0FBSEEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBSUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGlCQUFZQyxLQUE1QjtBQUVBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyx5QkFBWCxFQUFzQ0MsaUJBQVlFLFFBQWxEO0FBQ0FMLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLHlCQUFYLEVBQXNDQyxpQkFBWUcsUUFBbEQsRSxDQUNBOztBQUNBTixNQUFNLENBQUNPLElBQVAsQ0FBWSxNQUFaLEVBQW9CSixpQkFBWUksSUFBaEM7QUFDQVAsTUFBTSxDQUFDTyxJQUFQLENBQVksWUFBWixFQUEwQkosaUJBQVlLLFlBQXRDO0FBQ0FSLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLGtCQUFYLEVBQStCQyxpQkFBWU0sTUFBM0MsRSxDQUNBO0FBQ0E7O0FBQ0FULE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLGtCQUFYLEVBQStCQyxpQkFBWU8sTUFBM0M7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy9uaG9tLmNvbnRyb2xsZXInXG5cbnJvdXRlci5nZXQoJy8nLCBjb250cm9sbGVycy5pbmRleClcblxucm91dGVyLmdldCgnL2dpYW8tdmllbi86X2lkdGFpa2hvYW4nLCBjb250cm9sbGVycy5naWFvdmllbilcbnJvdXRlci5nZXQoJy9zaW5oLXZpZW4vOl9pZHRhaWtob2FuJywgY29udHJvbGxlcnMuc2luaHZpZW4pXG4vLyBhZGQgbmhvbVxucm91dGVyLnBvc3QoJy9hZGQnLCBjb250cm9sbGVycy5wb3N0KVxucm91dGVyLnBvc3QoJy9naWFvLXZpZW4nLCBjb250cm9sbGVycy5uaG9tR2lhb1ZpZW4pXG5yb3V0ZXIuZ2V0KCcvZGV0YWlsLzpfaWRuaG9tJywgY29udHJvbGxlcnMuZGV0YWlsKVxuLy8gZGVsZXRlIGxvYWkgbG9wXG4vL3JvdXRlci5kZWxldGUoJy86aWQnLCBjb250cm9sbGVycy5kZXN0cm95KVxucm91dGVyLmdldCgnL3JlbW92ZS86X2lkbmhvbScsIGNvbnRyb2xsZXJzLnJlbW92ZSlcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "nhom.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "giaovien",
        "sinhvien",
        "post",
        "nhomGiaoVien",
        "detail",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,iBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,yBAAX,EAAsCC,iBAAYE,QAAlD;AACAL,MAAM,CAACE,GAAP,CAAW,yBAAX,EAAsCC,iBAAYG,QAAlD,E,CACA;;AACAN,MAAM,CAACO,IAAP,CAAY,MAAZ,EAAoBJ,iBAAYI,IAAhC;AACAP,MAAM,CAACO,IAAP,CAAY,YAAZ,EAA0BJ,iBAAYK,YAAtC;AACAR,MAAM,CAACE,GAAP,CAAW,kBAAX,EAA+BC,iBAAYM,MAA3C,E,CACA;AACA;;AACAT,MAAM,CAACE,GAAP,CAAW,kBAAX,EAA+BC,iBAAYO,MAA3C;AAIAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/nhom.controller'\n\nrouter.get('/', controllers.index)\n\nrouter.get('/giao-vien/:_idtaikhoan', controllers.giaovien)\nrouter.get('/sinh-vien/:_idtaikhoan', controllers.sinhvien)\n// add nhom\nrouter.post('/add', controllers.post)\nrouter.post('/giao-vien', controllers.nhomGiaoVien)\nrouter.get('/detail/:_idnhom', controllers.detail)\n// delete loai lop\n//router.delete('/:id', controllers.destroy)\nrouter.get('/remove/:_idnhom', controllers.remove)\n\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1609657978136
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/nhom.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/nhom.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/nhom.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/nhom.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "nhom.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Nhom = require('../models/nhom.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar ThongBao = require('../models/thongbao.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var nhoms;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Nhom.find().populate('giaoviens').populate('thongbaos');\n\n            case 2:\n              nhoms = _context.sent;\n              res.send({\n                nhoms: nhoms\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idnhom, nhom;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context2.next = 4;\n              return Nhom.findById(_idnhom).populate({\n                path: 'sinhviens',\n                model: 'TaiKhoan'\n              });\n\n            case 4:\n              nhom = _context2.sent;\n              res.send(nhom);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function detail(_x3, _x4) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  giaovien: function () {\n    var _giaovien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idtaikhoan, nhoms;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _idtaikhoan = req.params._idtaikhoan; //res.send(_idtaikhoan)\n\n              _context3.next = 4;\n              return Nhom.find({\n                giaoviens: _idtaikhoan\n              }).populate('giaoviens').populate('thongbaos').populate('sinhviens');\n\n            case 4:\n              nhoms = _context3.sent;\n              res.send(nhoms);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    function giaovien(_x5, _x6) {\n      return _giaovien.apply(this, arguments);\n    }\n\n    return giaovien;\n  }(),\n  sinhvien: function () {\n    var _sinhvien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _idtaikhoan, nhoms;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _idtaikhoan = req.params._idtaikhoan; //res.send(_idtaikhoan)\n\n              _context4.next = 4;\n              return Nhom.find({\n                sinhviens: _idtaikhoan\n              }).populate('giaoviens').populate('thongbaos');\n\n            case 4:\n              nhoms = _context4.sent;\n              res.send(nhoms);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              res.send(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    function sinhvien(_x7, _x8) {\n      return _sinhvien.apply(this, arguments);\n    }\n\n    return sinhvien;\n  }(),\n  // nhom -> nhieu tai khoan\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body, ma, ten, namhoc, giaovien, nhom;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _req$body = req.body, ma = _req$body.ma, ten = _req$body.ten, namhoc = _req$body.namhoc, giaovien = _req$body.giaovien;\n              _context6.next = 4;\n              return new Nhom({\n                ma: ma,\n                ten: ten,\n                giaoviens: giaovien,\n                namhoc: namhoc,\n                trangthai: 0\n              });\n\n            case 4:\n              nhom = _context6.sent;\n              nhom.save().then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(respone) {\n                  var taikhoan, result;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return TaiKhoan.findById(giaovien);\n\n                        case 2:\n                          taikhoan = _context5.sent;\n                          taikhoan.nhoms.push(respone._id);\n                          taikhoan.save(); //res.send(respone)\n                          //const nhoms = await Nhom.find().populate('giaoviens')\n\n                          _context5.next = 7;\n                          return TaiKhoan.findById(giaovien).populate({\n                            path: 'nhoms',\n                            model: 'Nhom',\n                            populate: {\n                              path: 'kithis',\n                              model: 'KiThi',\n                              populate: {\n                                path: 'dethis',\n                                model: 'DeThi',\n                                populate: {\n                                  path: 'cauhois',\n                                  model: 'CauHoi',\n                                  populate: {\n                                    path: 'phuongans',\n                                    model: 'PhuongAn'\n                                  }\n                                }\n                              }\n                            }\n                          }).populate({\n                            path: 'nhoms',\n                            model: 'Nhom',\n                            populate: {\n                              path: 'sinhviens',\n                              model: 'TaiKhoan'\n                            }\n                          }).populate({\n                            path: 'nhoms',\n                            model: 'Nhom',\n                            populate: {\n                              path: 'thongbaos',\n                              model: 'ThongBao'\n                            }\n                          });\n\n                        case 7:\n                          result = _context5.sent;\n                          // res.send(nhoms)\n                          res.send({\n                            result: result\n                          });\n\n                        case 9:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x11) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](0);\n              res.send(_context6.t0);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 8]]);\n    }));\n\n    function post(_x9, _x10) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  nhomGiaoVien: function () {\n    var _nhomGiaoVien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n      var _idgv, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _idgv = req.body._idgv;\n              _context7.next = 4;\n              return TaiKhoan.findById(_idgv).populate({\n                path: 'nhoms',\n                model: 'Nhom'\n              });\n\n            case 4:\n              taikhoan = _context7.sent;\n              res.send({\n                taikhoan: taikhoan\n              });\n              _context7.next = 11;\n              break;\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](0);\n              res.send(_context7.t0);\n\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 8]]);\n    }));\n\n    function nhomGiaoVien(_x12, _x13) {\n      return _nhomGiaoVien.apply(this, arguments);\n    }\n\n    return nhomGiaoVien;\n  }(),\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n      var _idnhom, nhom, thongbao;\n\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context11.next = 4;\n              return Nhom.findById(_idnhom);\n\n            case 4:\n              nhom = _context11.sent;\n              _context11.next = 7;\n              return ThongBao.deleteMany({\n                nhom: _idnhom\n              });\n\n            case 7:\n              thongbao = _context11.sent;\n              //}\n              // cap nhat sinh vien va giao vien\n              nhom.kithis.forEach( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_idkithi) {\n                  var kithi, newNhoms;\n                  return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _context8.next = 2;\n                          return KiThi.findById(_idkithi);\n\n                        case 2:\n                          kithi = _context8.sent;\n                          newNhoms = kithi.nhoms.filter(function (x) {\n                            return \"\".concat(x) != _idnhom;\n                          });\n                          kithi.nhom = newNhoms;\n                          kithi.save();\n\n                        case 6:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function (_x16) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              nhom.sinhviens.forEach( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_idtaikhoan) {\n                  var taikhoan_sv, newNhoms_sv;\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          _context9.next = 2;\n                          return TaiKhoan.findById(_idtaikhoan);\n\n                        case 2:\n                          taikhoan_sv = _context9.sent;\n                          newNhoms_sv = taikhoan_sv.nhoms.filter(function (x) {\n                            return \"\".concat(x) != _idnhom;\n                          });\n                          taikhoan_sv.nhoms = newNhoms_sv;\n                          taikhoan_sv.save();\n\n                        case 6:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x17) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              nhom.giaoviens.forEach( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(_idtaikhoan) {\n                  var taikhoan_gv, newNhoms_gv;\n                  return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return TaiKhoan.findById(_idtaikhoan);\n\n                        case 2:\n                          taikhoan_gv = _context10.sent;\n                          newNhoms_gv = taikhoan_gv.nhoms.filter(function (x) {\n                            return \"\".concat(x) != _idnhom;\n                          });\n                          taikhoan_gv.nhoms = newNhoms_gv;\n                          taikhoan_gv.save();\n\n                        case 6:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function (_x18) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n              nhom[\"delete\"]();\n              res.end();\n              _context11.next = 18;\n              break;\n\n            case 15:\n              _context11.prev = 15;\n              _context11.t0 = _context11[\"catch\"](0);\n              res.send(_context11.t0);\n\n            case 18:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 15]]);\n    }));\n\n    function remove(_x14, _x15) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "nhom.controller.js"
      ],
      "names": [
        "Nhom",
        "require",
        "TaiKhoan",
        "ThongBao",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "nhoms",
        "send",
        "detail",
        "_idnhom",
        "params",
        "findById",
        "path",
        "model",
        "nhom",
        "giaovien",
        "_idtaikhoan",
        "giaoviens",
        "sinhvien",
        "sinhviens",
        "post",
        "body",
        "ma",
        "ten",
        "namhoc",
        "trangthai",
        "save",
        "then",
        "respone",
        "taikhoan",
        "push",
        "_id",
        "result",
        "nhomGiaoVien",
        "_idgv",
        "remove",
        "deleteMany",
        "thongbao",
        "kithis",
        "forEach",
        "_idkithi",
        "KiThi",
        "kithi",
        "newNhoms",
        "filter",
        "x",
        "taikhoan_sv",
        "newNhoms_sv",
        "taikhoan_gv",
        "newNhoms_gv",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAtB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMI,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcR,IAAI,CAACS,IAAL,GAAYC,QAAZ,CAAqB,WAArB,EAAkCA,QAAlC,CAA2C,WAA3C,CADd;;AAAA;AACAC,cAAAA,KADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAACD,gBAAAA,KAAK,EAACA;AAAP,eAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKfE,EAAAA,MAAM;AAAA,0EAAG,kBAAON,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAM,cAAAA,OAFA,GAEWP,GAAG,CAACQ,MAFf,CAEAD,OAFA;AAAA;AAAA,qBAGYd,IAAI,CAACgB,QAAL,CAAcF,OAAd,EAAuBJ,QAAvB,CAAgC;AAClDO,gBAAAA,IAAI,EAAC,WAD6C;AAElDC,gBAAAA,KAAK,EAAC;AAF4C,eAAhC,CAHZ;;AAAA;AAGDC,cAAAA,IAHC;AAOPX,cAAAA,GAAG,CAACI,IAAJ,CAASO,IAAT;AAPO;AAAA;;AAAA;AAAA;AAAA;AASPX,cAAAA,GAAG,CAACI,IAAJ;;AATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALS;AAiBfQ,EAAAA,QAAQ;AAAA,4EAAG,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFa,cAAAA,WAFE,GAEad,GAAG,CAACQ,MAFjB,CAEFM,WAFE,EAGT;;AAHS;AAAA,qBAIWrB,IAAI,CAACS,IAAL,CAAU;AAACa,gBAAAA,SAAS,EAACD;AAAX,eAAV,EAAmCX,QAAnC,CAA4C,WAA5C,EAAyDA,QAAzD,CAAkE,WAAlE,EAA+EA,QAA/E,CAAwF,WAAxF,CAJX;;AAAA;AAIHC,cAAAA,KAJG;AAKTH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTH,cAAAA,GAAG,CAACI,IAAJ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAjBO;AA2BfW,EAAAA,QAAQ;AAAA,4EAAG,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFa,cAAAA,WAFE,GAEad,GAAG,CAACQ,MAFjB,CAEFM,WAFE,EAGT;;AAHS;AAAA,qBAIWrB,IAAI,CAACS,IAAL,CAAU;AAACe,gBAAAA,SAAS,EAACH;AAAX,eAAV,EAAmCX,QAAnC,CAA4C,WAA5C,EAAyDA,QAAzD,CAAkE,WAAlE,CAJX;;AAAA;AAIHC,cAAAA,KAJG;AAKTH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTH,cAAAA,GAAG,CAACI,IAAJ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3BO;AAqCf;AACAa,EAAAA,IAAI;AAAA,wEAAG,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAE+BD,GAAG,CAACmB,IAFnC,EAEEC,EAFF,aAEEA,EAFF,EAEMC,GAFN,aAEMA,GAFN,EAEWC,MAFX,aAEWA,MAFX,EAEmBT,QAFnB,aAEmBA,QAFnB;AAAA;AAAA,qBAGc,IAAIpB,IAAJ,CAAS;AAC3B2B,gBAAAA,EAAE,EAAEA,EADuB;AAE3BC,gBAAAA,GAAG,EAAEA,GAFsB;AAG3BN,gBAAAA,SAAS,EAACF,QAHiB;AAI3BS,gBAAAA,MAAM,EAAEA,MAJmB;AAK3BC,gBAAAA,SAAS,EAAE;AALgB,eAAT,CAHd;;AAAA;AAGCX,cAAAA,IAHD;AAULA,cAAAA,IAAI,CAACY,IAAL,GAAYC,IAAZ;AAAA,mFAAiB,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACO/B,QAAQ,CAACc,QAAT,CAAkBI,QAAlB,CADP;;AAAA;AACVc,0BAAAA,QADU;AAEfA,0BAAAA,QAAQ,CAACvB,KAAT,CAAewB,IAAf,CAAoBF,OAAO,CAACG,GAA5B;AACAF,0BAAAA,QAAQ,CAACH,IAAT,GAHe,CAIhB;AACA;;AALgB;AAAA,iCAMK7B,QAAQ,CAACc,QAAT,CAAkBI,QAAlB,EAA4BV,QAA5B,CAAqC;AACvDO,4BAAAA,IAAI,EAAC,OADkD;AAEvDC,4BAAAA,KAAK,EAAC,MAFiD;AAGvDR,4BAAAA,QAAQ,EAAC;AACRO,8BAAAA,IAAI,EAAC,QADG;AAERC,8BAAAA,KAAK,EAAC,OAFE;AAGRR,8BAAAA,QAAQ,EAAC;AACRO,gCAAAA,IAAI,EAAC,QADG;AAERC,gCAAAA,KAAK,EAAC,OAFE;AAGRR,gCAAAA,QAAQ,EAAC;AACRO,kCAAAA,IAAI,EAAC,SADG;AAERC,kCAAAA,KAAK,EAAC,QAFE;AAGRR,kCAAAA,QAAQ,EAAC;AACRO,oCAAAA,IAAI,EAAC,WADG;AAERC,oCAAAA,KAAK,EAAC;AAFE;AAHD;AAHD;AAHD;AAH8C,2BAArC,EAmBhBR,QAnBgB,CAmBP;AACXO,4BAAAA,IAAI,EAAC,OADM;AAEXC,4BAAAA,KAAK,EAAC,MAFK;AAGXR,4BAAAA,QAAQ,EAAC;AACRO,8BAAAA,IAAI,EAAC,WADG;AAERC,8BAAAA,KAAK,EAAC;AAFE;AAHE,2BAnBO,EA0BhBR,QA1BgB,CA0BP;AACXO,4BAAAA,IAAI,EAAC,OADM;AAEXC,4BAAAA,KAAK,EAAC,MAFK;AAGXR,4BAAAA,QAAQ,EAAC;AACRO,8BAAAA,IAAI,EAAC,WADG;AAERC,8BAAAA,KAAK,EAAC;AAFE;AAHE,2BA1BO,CANL;;AAAA;AAMVmB,0BAAAA,MANU;AAwChB;AACA7B,0BAAAA,GAAG,CAACI,IAAJ,CAAS;AAACyB,4BAAAA,MAAM,EAACA;AAAR,2BAAT;;AAzCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;AAAA;AAVK;AAAA;;AAAA;AAAA;AAAA;AAsDL7B,cAAAA,GAAG,CAACI,IAAJ;;AAtDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtCW;AA+Ff0B,EAAAA,YAAY;AAAA,gFAAG,kBAAO/B,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEN+B,cAAAA,KAFM,GAEChC,GAAG,CAACmB,IAFL,CAENa,KAFM;AAAA;AAAA,qBAGUrC,QAAQ,CAACc,QAAT,CAAkBuB,KAAlB,EAAyB7B,QAAzB,CAAkC;AACxDO,gBAAAA,IAAI,EAAC,OADmD;AAExDC,gBAAAA,KAAK,EAAC;AAFkD,eAAlC,CAHV;;AAAA;AAGPgB,cAAAA,QAHO;AAOb1B,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAACsB,gBAAAA,QAAQ,EAACA;AAAV,eAAT;AAPa;AAAA;;AAAA;AAAA;AAAA;AASb1B,cAAAA,GAAG,CAACI,IAAJ;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/FG;AA2Gf4B,EAAAA,MAAM;AAAA,0EAAG,mBAAOjC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMCM,cAAAA,OAND,GAMaP,GAAG,CAACQ,MANjB,CAMCD,OAND;AAAA;AAAA,qBAOYd,IAAI,CAACgB,QAAL,CAAcF,OAAd,CAPZ;;AAAA;AAODK,cAAAA,IAPC;AAAA;AAAA,qBASgBhB,QAAQ,CAACsC,UAAT,CAAoB;AAACtB,gBAAAA,IAAI,EAACL;AAAN,eAApB,CAThB;;AAAA;AASD4B,cAAAA,QATC;AAUP;AACA;AACAvB,cAAAA,IAAI,CAACwB,MAAL,CAAYC,OAAZ;AAAA,oFAAoB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACCC,KAAK,CAAC9B,QAAN,CAAe6B,QAAf,CADD;;AAAA;AACbE,0BAAAA,KADa;AAEZC,0BAAAA,QAFY,GAEDD,KAAK,CAACpC,KAAN,CAAYsC,MAAZ,CAAmB,UAAAC,CAAC;AAAA,mCAAG,UAAGA,CAAH,KAAUpC,OAAb;AAAA,2BAApB,CAFC;AAGlBiC,0BAAAA,KAAK,CAAC5B,IAAN,GAAa6B,QAAb;AACAD,0BAAAA,KAAK,CAAChB,IAAN;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;;AAAA;AAAA;AAAA;AAAA;AAMAZ,cAAAA,IAAI,CAACK,SAAL,CAAeoB,OAAf;AAAA,oFAAwB,kBAAMvB,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGnB,QAAQ,CAACc,QAAT,CAAkBK,WAAlB,CADH;;AAAA;AACjB8B,0BAAAA,WADiB;AAEhBC,0BAAAA,WAFgB,GAEFD,WAAW,CAACxC,KAAZ,CAAkBsC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mCAAI,UAAGA,CAAH,KAASpC,OAAb;AAAA,2BAA1B,CAFE;AAGtBqC,0BAAAA,WAAW,CAACxC,KAAZ,GAAoByC,WAApB;AACAD,0BAAAA,WAAW,CAACpB,IAAZ;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB;;AAAA;AAAA;AAAA;AAAA;AAMAZ,cAAAA,IAAI,CAACG,SAAL,CAAesB,OAAf;AAAA,oFAAwB,mBAAMvB,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGnB,QAAQ,CAACc,QAAT,CAAkBK,WAAlB,CADH;;AAAA;AACjBgC,0BAAAA,WADiB;AAEhBC,0BAAAA,WAFgB,GAEFD,WAAW,CAAC1C,KAAZ,CAAkBsC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mCAAI,UAAGA,CAAH,KAAUpC,OAAd;AAAA,2BAA1B,CAFE;AAGtBuC,0BAAAA,WAAW,CAAC1C,KAAZ,GAAoB2C,WAApB;AACAD,0BAAAA,WAAW,CAACtB,IAAZ;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB;;AAAA;AAAA;AAAA;AAAA;AAOAZ,cAAAA,IAAI,UAAJ;AACAX,cAAAA,GAAG,CAAC+C,GAAJ;AAhCO;AAAA;;AAAA;AAAA;AAAA;AAkCP/C,cAAAA,GAAG,CAACI,IAAJ;;AAlCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA3GS,CAAhB;AAkJA4C,MAAM,CAACC,OAAP,GAAiBpD,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let Nhom = require('../models/nhom.model')\nlet TaiKhoan = require('../models/taikhoan.model')\nlet ThongBao = require('../models/thongbao.model')\n\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async (req, res)=>{\n\t\tconst nhoms = await Nhom.find().populate('giaoviens').populate('thongbaos')\n\t\tres.send({nhoms:nhoms})\n\t},\n\tdetail : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idnhom} = req.params\n\t\t\tconst nhom = await Nhom.findById(_idnhom).populate({\n\t\t\t\tpath:'sinhviens',\n\t\t\t\tmodel:'TaiKhoan'\n\t\t\t})\n\t\t\tres.send(nhom)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tgiaovien : async (req, res) => {\n\t\ttry{\n\t\t\tconst {_idtaikhoan} = req.params\n\t\t\t//res.send(_idtaikhoan)\n\t\t\tconst nhoms = await Nhom.find({giaoviens:_idtaikhoan}).populate('giaoviens').populate('thongbaos').populate('sinhviens')\n\t\t\tres.send(nhoms)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tsinhvien : async (req, res) => {\n\t\ttry{\n\t\t\tconst {_idtaikhoan} = req.params\n\t\t\t//res.send(_idtaikhoan)\n\t\t\tconst nhoms = await Nhom.find({sinhviens:_idtaikhoan}).populate('giaoviens').populate('thongbaos')\n\t\t\tres.send(nhoms)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\t// nhom -> nhieu tai khoan\n\tpost : async (req, res) => {\n\t\ttry{\t\t\t\n\t\t\tconst {ma, ten, namhoc, giaovien} = req.body\n\t\t\tconst nhom = await new Nhom({\n\t\t\t\tma: ma,\n\t\t\t\tten: ten,\n\t\t\t\tgiaoviens:giaovien,\n\t\t\t\tnamhoc: namhoc,\n\t\t\t\ttrangthai: 0,\n\t\t\t})\n\t\t\tnhom.save().then(async respone=>{\n\t\t\t\tconst taikhoan = await TaiKhoan.findById(giaovien)\n\t\t\t\t\ttaikhoan.nhoms.push(respone._id)\n\t\t\t\t\ttaikhoan.save()\n\t\t\t\t//res.send(respone)\n\t\t\t\t//const nhoms = await Nhom.find().populate('giaoviens')\n\t\t\t\tconst result = await TaiKhoan.findById(giaovien).populate({\n\t\t\t\t\t\t\tpath:'nhoms',\n\t\t\t\t\t\t\tmodel:'Nhom',\n\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\tpath:'kithis',\n\t\t\t\t\t\t\t\tmodel:'KiThi',\n\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\tpath:'dethis',\n\t\t\t\t\t\t\t\t\tmodel:'DeThi',\n\t\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).populate({\n\t\t\t\t\t\t\tpath:'nhoms',\n\t\t\t\t\t\t\tmodel:'Nhom',\n\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\tpath:'sinhviens',\n\t\t\t\t\t\t\t\tmodel:'TaiKhoan'\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).populate({\n\t\t\t\t\t\t\tpath:'nhoms',\n\t\t\t\t\t\t\tmodel:'Nhom',\n\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\tpath:'thongbaos',\n\t\t\t\t\t\t\t\tmodel:'ThongBao'\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t// res.send(nhoms)\n\t\t\t\tres.send({result:result})\n\t\t\t})\t\t\t\n\t\t} catch (err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tnhomGiaoVien : async (req,res)=>{\n\t\ttry{\n\t\t\tconst {_idgv}=req.body\n\t\t\tconst taikhoan = await TaiKhoan.findById(_idgv).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom'\n\t\t\t})\n\t\t\tres.send({taikhoan:taikhoan})\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tremove : async (req, res) => {\n\t\t// nhom -> giaoviens\n\t\t// nhom -> sinhviens\n\t\t// nhom -> thongbaos\n\t\t// nhom -> kithis\n\t\ttry {\t\t\t\n\t\t\tconst { _idnhom } = req.params\n\t\t\tconst nhom = await Nhom.findById(_idnhom)\t\t\t\n\t\t\t// if (nhom.thongbaos.length>0){\n\t\t\tconst thongbao = await ThongBao.deleteMany({nhom:_idnhom})\n\t\t\t//}\n\t\t\t// cap nhat sinh vien va giao vien\n\t\t\tnhom.kithis.forEach(async _idkithi=>{\n\t\t\t\tconst kithi = await KiThi.findById(_idkithi)\n\t\t\t\t\tconst newNhoms = kithi.nhoms.filter(x=> `${x}` != _idnhom)\n\t\t\t\t\tkithi.nhom = newNhoms\n\t\t\t\t\tkithi.save()\n\t\t\t})\n\t\t\tnhom.sinhviens.forEach( async _idtaikhoan=>{\n\t\t\t\tconst taikhoan_sv = await TaiKhoan.findById(_idtaikhoan)\n\t\t\t\t\tconst newNhoms_sv = taikhoan_sv.nhoms.filter(x => `${x}`!= _idnhom)\n\t\t\t\t\ttaikhoan_sv.nhoms = newNhoms_sv\n\t\t\t\t\ttaikhoan_sv.save()\n\t\t\t})\n\t\t\tnhom.giaoviens.forEach( async _idtaikhoan=>{\n\t\t\t\tconst taikhoan_gv = await TaiKhoan.findById(_idtaikhoan)\n\t\t\t\t\tconst newNhoms_gv = taikhoan_gv.nhoms.filter(x => `${x}` != _idnhom)\n\t\t\t\t\ttaikhoan_gv.nhoms = newNhoms_gv\n\t\t\t\t\ttaikhoan_gv.save()\n\t\t\t})\n\t\t\t\n\t\t\tnhom.delete()\n\t\t\tres.end()\t\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1609658149347
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/thongbao.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/thongbao.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/thongbao.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/thongbao.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "thongbao.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  noidung: String,\n  ngay: String,\n  gio: String,\n  nhom: {\n    type: Schema.Types.ObjectId,\n    ref: \"Nhom\"\n  }\n});\nvar ThongBao = mongoose.model('ThongBao', schema);\nmodule.exports = ThongBao;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRob25nYmFvLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsIm1hIiwiU3RyaW5nIiwibm9pZHVuZyIsIm5nYXkiLCJnaW8iLCJuaG9tIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJUaG9uZ0JhbyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF0QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFFcEJFLEVBQUFBLEVBQUUsRUFBRUMsTUFGZ0I7QUFHcEJDLEVBQUFBLE9BQU8sRUFBRUQsTUFIVztBQUlwQkUsRUFBQUEsSUFBSSxFQUFDRixNQUplO0FBS3BCRyxFQUFBQSxHQUFHLEVBQUNILE1BTGdCO0FBT3ZCSSxFQUFBQSxJQUFJLEVBQUM7QUFDSkMsSUFBQUEsSUFBSSxFQUFDUixNQUFNLENBQUNTLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQTtBQVBrQixDQUFYLENBQWI7QUFjQSxJQUFJQyxRQUFRLEdBQUdkLFFBQVEsQ0FBQ2UsS0FBVCxDQUFlLFVBQWYsRUFBMkJaLE1BQTNCLENBQWY7QUFFQWEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxRQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5cbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcblxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuXG4gICAgbWE6IFN0cmluZywgICAgICAgIFxuICAgIG5vaWR1bmc6IFN0cmluZywgICAgXG4gICAgbmdheTpTdHJpbmcsXG4gICAgZ2lvOlN0cmluZyxcbiBcdCBcdFxuXHRuaG9tOntcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRyZWY6XCJOaG9tXCJcblx0fSxcbiAgICBcdFxufSlcblxudmFyIFRob25nQmFvID0gbW9uZ29vc2UubW9kZWwoJ1Rob25nQmFvJywgc2NoZW1hKVxuXG5tb2R1bGUuZXhwb3J0cyA9IFRob25nQmFvIl19",
    "map": {
      "version": 3,
      "sources": [
        "thongbao.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "noidung",
        "ngay",
        "gio",
        "nhom",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "ThongBao",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,IAAI,EAACF,MAJe;AAKpBG,EAAAA,GAAG,EAACH,MALgB;AAOvBI,EAAAA,IAAI,EAAC;AACJC,IAAAA,IAAI,EAACR,MAAM,CAACS,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA;AAPkB,CAAX,CAAb;AAcA,IAAIC,QAAQ,GAAGd,QAAQ,CAACe,KAAT,CAAe,UAAf,EAA2BZ,MAA3B,CAAf;AAEAa,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ma: String,        \n    noidung: String,    \n    ngay:String,\n    gio:String,\n \t \t\n\tnhom:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"Nhom\"\n\t},\n    \t\n})\n\nvar ThongBao = mongoose.model('ThongBao', schema)\n\nmodule.exports = ThongBao"
      ]
    },
    "sourceType": "script",
    "mtime": 1607004192191
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/taikhoan.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/taikhoan.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/taikhoan.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/taikhoan.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "taikhoan.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _taikhoan = _interopRequireDefault(require(\"../controllers/taikhoan.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar multer = require('multer');\n\nvar upload = multer({\n  dest: 'assets/image'\n});\nrouter.get('/', _taikhoan[\"default\"].index); // add nhom\n\nrouter.post('/register', _taikhoan[\"default\"].register);\nrouter.post('/login', _taikhoan[\"default\"].login);\nrouter.post('/changepassword', _taikhoan[\"default\"].doiMatKhau); // tao danh sach sinh vien import \n\nrouter.post('/create', _taikhoan[\"default\"].createStudent);\nrouter.post('/capnhat-gv', _taikhoan[\"default\"].capnhatGV);\nrouter.get('/giao-vien', _taikhoan[\"default\"].getGiaoVien);\nrouter.post('/chi-tiet', _taikhoan[\"default\"].chitiet); // cap nhat tai khoan\n\nrouter.post('/cap-nhat', _taikhoan[\"default\"].capnhat);\nrouter.post('/cap-mat-khau', _taikhoan[\"default\"].capmatkhau); // lich su thi cua  tai khoan\n\nrouter.get('/lich-su-thi/:_idtaikhoan', _taikhoan[\"default\"].lichsuthi); //image\n\nrouter.post('/upload-image', upload.single('image'), _taikhoan[\"default\"].uploadImage);\nrouter.post('/update-user', _taikhoan[\"default\"].updateUser); // tai khoan cua nhom\n\nrouter.get('/nhom/:_idnhom', _taikhoan[\"default\"].taiKhoanCuaNhom); // delete loai lop\n//router.delete('/:id', controllers.destroy)\n\nrouter.get('/giao-vien', _taikhoan[\"default\"].giaovien);\nrouter.get('/sinh-vien', _taikhoan[\"default\"].sinhvien);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibXVsdGVyIiwidXBsb2FkIiwiZGVzdCIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJwb3N0IiwicmVnaXN0ZXIiLCJsb2dpbiIsImRvaU1hdEtoYXUiLCJjcmVhdGVTdHVkZW50IiwiY2FwbmhhdEdWIiwiZ2V0R2lhb1ZpZW4iLCJjaGl0aWV0IiwiY2FwbmhhdCIsImNhcG1hdGtoYXUiLCJsaWNoc3V0aGkiLCJzaW5nbGUiLCJ1cGxvYWRJbWFnZSIsInVwZGF0ZVVzZXIiLCJ0YWlLaG9hbkN1YU5ob20iLCJnaWFvdmllbiIsInNpbmh2aWVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFNQTs7OztBQU5BLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxJQUFJQyxNQUFNLEdBQUlILE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQUlJLE1BQU0sR0FBR0QsTUFBTSxDQUFDO0FBQUVFLEVBQUFBLElBQUksRUFBRTtBQUFSLENBQUQsQ0FBbkI7QUFJQUosTUFBTSxDQUFDSyxHQUFQLENBQVcsR0FBWCxFQUFnQkMscUJBQVlDLEtBQTVCLEUsQ0FFQTs7QUFDQVAsTUFBTSxDQUFDUSxJQUFQLENBQVksV0FBWixFQUF5QkYscUJBQVlHLFFBQXJDO0FBQ0FULE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFFBQVosRUFBc0JGLHFCQUFZSSxLQUFsQztBQUVBVixNQUFNLENBQUNRLElBQVAsQ0FBWSxpQkFBWixFQUErQkYscUJBQVlLLFVBQTNDLEUsQ0FFQTs7QUFDQVgsTUFBTSxDQUFDUSxJQUFQLENBQVksU0FBWixFQUF1QkYscUJBQVlNLGFBQW5DO0FBQ0FaLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGFBQVosRUFBMkJGLHFCQUFZTyxTQUF2QztBQUVBYixNQUFNLENBQUNLLEdBQVAsQ0FBVyxZQUFYLEVBQXlCQyxxQkFBWVEsV0FBckM7QUFDQWQsTUFBTSxDQUFDUSxJQUFQLENBQVksV0FBWixFQUF5QkYscUJBQVlTLE9BQXJDLEUsQ0FFQTs7QUFDQWYsTUFBTSxDQUFDUSxJQUFQLENBQVksV0FBWixFQUF5QkYscUJBQVlVLE9BQXJDO0FBQ0FoQixNQUFNLENBQUNRLElBQVAsQ0FBWSxlQUFaLEVBQTZCRixxQkFBWVcsVUFBekMsRSxDQUNBOztBQUNBakIsTUFBTSxDQUFDSyxHQUFQLENBQVcsMkJBQVgsRUFBd0NDLHFCQUFZWSxTQUFwRCxFLENBRUE7O0FBQ0FsQixNQUFNLENBQUNRLElBQVAsQ0FBWSxlQUFaLEVBQTZCTCxNQUFNLENBQUNnQixNQUFQLENBQWMsT0FBZCxDQUE3QixFQUFxRGIscUJBQVljLFdBQWpFO0FBQ0FwQixNQUFNLENBQUNRLElBQVAsQ0FBWSxjQUFaLEVBQTRCRixxQkFBWWUsVUFBeEMsRSxDQUVBOztBQUNBckIsTUFBTSxDQUFDSyxHQUFQLENBQVcsZ0JBQVgsRUFBNkJDLHFCQUFZZ0IsZUFBekMsRSxDQUNBO0FBQ0E7O0FBQ0F0QixNQUFNLENBQUNLLEdBQVAsQ0FBVyxZQUFYLEVBQXlCQyxxQkFBWWlCLFFBQXJDO0FBQ0F2QixNQUFNLENBQUNLLEdBQVAsQ0FBVyxZQUFYLEVBQXlCQyxxQkFBWWtCLFFBQXJDO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjFCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2Qvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcblxudmFyIG11bHRlciAgPSByZXF1aXJlKCdtdWx0ZXInKVxudmFyIHVwbG9hZCA9IG11bHRlcih7IGRlc3Q6ICdhc3NldHMvaW1hZ2UnIH0pXG5cbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy90YWlraG9hbi5jb250cm9sbGVyJ1xuXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXG5cbi8vIGFkZCBuaG9tXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgY29udHJvbGxlcnMucmVnaXN0ZXIpXG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgY29udHJvbGxlcnMubG9naW4pXG5cbnJvdXRlci5wb3N0KCcvY2hhbmdlcGFzc3dvcmQnLCBjb250cm9sbGVycy5kb2lNYXRLaGF1KVxuXG4vLyB0YW8gZGFuaCBzYWNoIHNpbmggdmllbiBpbXBvcnQgXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNvbnRyb2xsZXJzLmNyZWF0ZVN0dWRlbnQpXG5yb3V0ZXIucG9zdCgnL2NhcG5oYXQtZ3YnLCBjb250cm9sbGVycy5jYXBuaGF0R1YpXG5cbnJvdXRlci5nZXQoJy9naWFvLXZpZW4nLCBjb250cm9sbGVycy5nZXRHaWFvVmllbilcbnJvdXRlci5wb3N0KCcvY2hpLXRpZXQnLCBjb250cm9sbGVycy5jaGl0aWV0KVxuXG4vLyBjYXAgbmhhdCB0YWkga2hvYW5cbnJvdXRlci5wb3N0KCcvY2FwLW5oYXQnLCBjb250cm9sbGVycy5jYXBuaGF0KVxucm91dGVyLnBvc3QoJy9jYXAtbWF0LWtoYXUnLCBjb250cm9sbGVycy5jYXBtYXRraGF1KVxuLy8gbGljaCBzdSB0aGkgY3VhICB0YWkga2hvYW5cbnJvdXRlci5nZXQoJy9saWNoLXN1LXRoaS86X2lkdGFpa2hvYW4nLCBjb250cm9sbGVycy5saWNoc3V0aGkpXG5cbi8vaW1hZ2VcbnJvdXRlci5wb3N0KCcvdXBsb2FkLWltYWdlJywgdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKSwgY29udHJvbGxlcnMudXBsb2FkSW1hZ2UpXG5yb3V0ZXIucG9zdCgnL3VwZGF0ZS11c2VyJywgY29udHJvbGxlcnMudXBkYXRlVXNlcilcblxuLy8gdGFpIGtob2FuIGN1YSBuaG9tXG5yb3V0ZXIuZ2V0KCcvbmhvbS86X2lkbmhvbScsIGNvbnRyb2xsZXJzLnRhaUtob2FuQ3VhTmhvbSlcbi8vIGRlbGV0ZSBsb2FpIGxvcFxuLy9yb3V0ZXIuZGVsZXRlKCcvOmlkJywgY29udHJvbGxlcnMuZGVzdHJveSlcbnJvdXRlci5nZXQoJy9naWFvLXZpZW4nLCBjb250cm9sbGVycy5naWFvdmllbilcbnJvdXRlci5nZXQoJy9zaW5oLXZpZW4nLCBjb250cm9sbGVycy5zaW5odmllbilcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "multer",
        "upload",
        "dest",
        "get",
        "controllers",
        "index",
        "post",
        "register",
        "login",
        "doiMatKhau",
        "createStudent",
        "capnhatGV",
        "getGiaoVien",
        "chitiet",
        "capnhat",
        "capmatkhau",
        "lichsuthi",
        "single",
        "uploadImage",
        "updateUser",
        "taiKhoanCuaNhom",
        "giaovien",
        "sinhvien",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;;;AANA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAIC,MAAM,GAAIH,OAAO,CAAC,QAAD,CAArB;;AACA,IAAII,MAAM,GAAGD,MAAM,CAAC;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAnB;AAIAJ,MAAM,CAACK,GAAP,CAAW,GAAX,EAAgBC,qBAAYC,KAA5B,E,CAEA;;AACAP,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBF,qBAAYG,QAArC;AACAT,MAAM,CAACQ,IAAP,CAAY,QAAZ,EAAsBF,qBAAYI,KAAlC;AAEAV,MAAM,CAACQ,IAAP,CAAY,iBAAZ,EAA+BF,qBAAYK,UAA3C,E,CAEA;;AACAX,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBF,qBAAYM,aAAnC;AACAZ,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BF,qBAAYO,SAAvC;AAEAb,MAAM,CAACK,GAAP,CAAW,YAAX,EAAyBC,qBAAYQ,WAArC;AACAd,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBF,qBAAYS,OAArC,E,CAEA;;AACAf,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBF,qBAAYU,OAArC;AACAhB,MAAM,CAACQ,IAAP,CAAY,eAAZ,EAA6BF,qBAAYW,UAAzC,E,CACA;;AACAjB,MAAM,CAACK,GAAP,CAAW,2BAAX,EAAwCC,qBAAYY,SAApD,E,CAEA;;AACAlB,MAAM,CAACQ,IAAP,CAAY,eAAZ,EAA6BL,MAAM,CAACgB,MAAP,CAAc,OAAd,CAA7B,EAAqDb,qBAAYc,WAAjE;AACApB,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BF,qBAAYe,UAAxC,E,CAEA;;AACArB,MAAM,CAACK,GAAP,CAAW,gBAAX,EAA6BC,qBAAYgB,eAAzC,E,CACA;AACA;;AACAtB,MAAM,CAACK,GAAP,CAAW,YAAX,EAAyBC,qBAAYiB,QAArC;AACAvB,MAAM,CAACK,GAAP,CAAW,YAAX,EAAyBC,qBAAYkB,QAArC;AAGAC,MAAM,CAACC,OAAP,GAAiB1B,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nvar multer  = require('multer')\nvar upload = multer({ dest: 'assets/image' })\n\nimport controllers from '../controllers/taikhoan.controller'\n\nrouter.get('/', controllers.index)\n\n// add nhom\nrouter.post('/register', controllers.register)\nrouter.post('/login', controllers.login)\n\nrouter.post('/changepassword', controllers.doiMatKhau)\n\n// tao danh sach sinh vien import \nrouter.post('/create', controllers.createStudent)\nrouter.post('/capnhat-gv', controllers.capnhatGV)\n\nrouter.get('/giao-vien', controllers.getGiaoVien)\nrouter.post('/chi-tiet', controllers.chitiet)\n\n// cap nhat tai khoan\nrouter.post('/cap-nhat', controllers.capnhat)\nrouter.post('/cap-mat-khau', controllers.capmatkhau)\n// lich su thi cua  tai khoan\nrouter.get('/lich-su-thi/:_idtaikhoan', controllers.lichsuthi)\n\n//image\nrouter.post('/upload-image', upload.single('image'), controllers.uploadImage)\nrouter.post('/update-user', controllers.updateUser)\n\n// tai khoan cua nhom\nrouter.get('/nhom/:_idnhom', controllers.taiKhoanCuaNhom)\n// delete loai lop\n//router.delete('/:id', controllers.destroy)\nrouter.get('/giao-vien', controllers.giaovien)\nrouter.get('/sinh-vien', controllers.sinhvien)\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1609659891060
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/taikhoan.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/taikhoan.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/taikhoan.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/taikhoan.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "taikhoan.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar Nhom = require('../models/nhom.model');\n\nvar BaiThi = require('../models/baithi.model');\n\nvar bcrypt = require('bcrypt');\n\nvar fs = require('fs');\n\nvar shortid = require('shortid');\n\nvar saltRounds = 1;\nvar myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nvar someOtherPlaintextPassword = 'not_bacon';\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var taikhoan;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return TaiKhoan.find();\n\n            case 2:\n              taikhoan = _context.sent;\n              res.send(taikhoan);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  register: function () {\n    var _register = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, name, email, code, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _req$body = req.body, name = _req$body.name, email = _req$body.email, code = _req$body.code; // let hash_pass = ''\t\t\t\n              // bcrypt.hash(password, saltRounds).then(hash=>{\n              // \t//console.log(hash)\t\t\t\t\t\t\t\n              // \tlet taikhoan = new TaiKhoan({\n              // \t\tmaso:username,\n              // \t\tmatkhau:hash,\n              // \t\tvaitro:1,\n              // \t\ttrangthai: 0 //0 _cho duyet, 1_da duyet dang hoat dong, 2_bi khoa\n              // \t})\t\t\t\t\t\t\n              // \ttaikhoan.save()\n              // })\t\n\n              _context2.next = 4;\n              return new TaiKhoan({\n                maso: code,\n                vaitro: 1,\n                trangthai: 0,\n                ten: name,\n                email: email\n              });\n\n            case 4:\n              taikhoan = _context2.sent;\n              taikhoan.save();\n              res.send('ok');\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    function register(_x3, _x4) {\n      return _register.apply(this, arguments);\n    }\n\n    return register;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$body2, code, pass, _user, user, check;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _req$body2 = req.body, code = _req$body2.code, pass = _req$body2.pass;\n\n              if (!(code === 'admin' && pass === 'admin')) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 5;\n              return TaiKhoan.find({\n                maso: code\n              });\n\n            case 5:\n              _user = _context3.sent;\n              return _context3.abrupt(\"return\", res.send({\n                checked: true,\n                user: _user\n              }));\n\n            case 7:\n              _context3.next = 9;\n              return TaiKhoan.find({\n                maso: code\n              });\n\n            case 9:\n              user = _context3.sent;\n\n              if (!(user != '')) {\n                _context3.next = 15;\n                break;\n              }\n\n              check = false;\n              bcrypt.compare(pass, user[0].matkhau).then(function (result) {\n                check = result;\n\n                if (check === true) {\n                  return res.send({\n                    checked: true,\n                    user: user\n                  });\n                } else {\n                  return res.send({\n                    checked: false,\n                    mess: 'Wrong Password'\n                  });\n                }\n              });\n              _context3.next = 16;\n              break;\n\n            case 15:\n              return _context3.abrupt(\"return\", res.send({\n                checked: false,\n                mess: 'Not exit'\n              }));\n\n            case 16:\n              _context3.next = 21;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 18]]);\n    }));\n\n    function login(_x5, _x6) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  createStudent: function () {\n    var _createStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n      var _req$body3, students, nhomActived;\n\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              try {\n                _req$body3 = req.body, students = _req$body3.students, nhomActived = _req$body3.nhomActived;\n\n                if (students) {\n                  students.forEach( /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(student, idx) {\n                      var matkhautam, sv;\n                      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              matkhautam = shortid.generate();\n                              _context8.next = 3;\n                              return TaiKhoan.find({\n                                maso: student.MSSV\n                              });\n\n                            case 3:\n                              sv = _context8.sent;\n\n                              if (sv.length != 0) {\n                                sv.forEach( /*#__PURE__*/function () {\n                                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(item) {\n                                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                                      while (1) {\n                                        switch (_context5.prev = _context5.next) {\n                                          case 0:\n                                            item.nhoms.push(nhomActived._id);\n                                            item.save().then( /*#__PURE__*/function () {\n                                              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(response) {\n                                                var nhom;\n                                                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                                                  while (1) {\n                                                    switch (_context4.prev = _context4.next) {\n                                                      case 0:\n                                                        _context4.next = 2;\n                                                        return Nhom.findById(nhomActived._id);\n\n                                                      case 2:\n                                                        nhom = _context4.sent;\n                                                        nhom.sinhviens.push(response._id);\n                                                        nhom.save();\n\n                                                      case 5:\n                                                      case \"end\":\n                                                        return _context4.stop();\n                                                    }\n                                                  }\n                                                }, _callee4);\n                                              }));\n\n                                              return function (_x12) {\n                                                return _ref3.apply(this, arguments);\n                                              };\n                                            }());\n\n                                          case 2:\n                                          case \"end\":\n                                            return _context5.stop();\n                                        }\n                                      }\n                                    }, _callee5);\n                                  }));\n\n                                  return function (_x11) {\n                                    return _ref2.apply(this, arguments);\n                                  };\n                                }()); //sv[0].nhoms.push(nhomActived._id)\t\t\t\t\t\t\n                              } else {\n                                bcrypt.hash(matkhautam, saltRounds).then( /*#__PURE__*/function () {\n                                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(hash) {\n                                    var taikhoan;\n                                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                      while (1) {\n                                        switch (_context7.prev = _context7.next) {\n                                          case 0:\n                                            _context7.next = 2;\n                                            return new TaiKhoan({\n                                              maso: student.MSSV,\n                                              ten: student['Họ tên'],\n                                              gioitinh: student['Giới tính'],\n                                              email: student.Email,\n                                              matkhau: hash,\n                                              nhoms: nhomActived._id,\n                                              matkhautam: matkhautam,\n                                              vaitro: 2,\n                                              trangthai: 1\n                                            });\n\n                                          case 2:\n                                            taikhoan = _context7.sent;\n                                            taikhoan.save().then( /*#__PURE__*/function () {\n                                              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(respone) {\n                                                var nhom;\n                                                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                                  while (1) {\n                                                    switch (_context6.prev = _context6.next) {\n                                                      case 0:\n                                                        _context6.next = 2;\n                                                        return Nhom.findById(nhomActived._id);\n\n                                                      case 2:\n                                                        nhom = _context6.sent;\n                                                        nhom.sinhviens.push(respone._id);\n                                                        nhom.save();\n\n                                                      case 5:\n                                                      case \"end\":\n                                                        return _context6.stop();\n                                                    }\n                                                  }\n                                                }, _callee6);\n                                              }));\n\n                                              return function (_x14) {\n                                                return _ref5.apply(this, arguments);\n                                              };\n                                            }());\n\n                                          case 4:\n                                          case \"end\":\n                                            return _context7.stop();\n                                        }\n                                      }\n                                    }, _callee7);\n                                  }));\n\n                                  return function (_x13) {\n                                    return _ref4.apply(this, arguments);\n                                  };\n                                }());\n                              }\n\n                              if (idx === students.length - 1) {\n                                //const students_result = await Nhom.findById(nhomActived._id).populate('sinhviens')\n                                res.send('ok');\n                              }\n\n                            case 6:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, _callee8);\n                    }));\n\n                    return function (_x9, _x10) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n                }\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function createStudent(_x7, _x8) {\n      return _createStudent.apply(this, arguments);\n    }\n\n    return createStudent;\n  }(),\n  taiKhoanCuaNhom: function () {\n    var _taiKhoanCuaNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n      var _idnhom, nhom;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context10.next = 4;\n              return Nhom.findById(_idnhom).populate('sinhviens').sort({\n                'maso': -1\n              });\n\n            case 4:\n              nhom = _context10.sent;\n              // const nhom = await Nhom.findById(_idnhom).populate({\n              // \tpath:'sinhviens',\n              // \tmodel:'TaiKhoan',\n              // \tsort: {'maso':-1}\n              // })\n              res.send(nhom);\n              _context10.next = 11;\n              break;\n\n            case 8:\n              _context10.prev = 8;\n              _context10.t0 = _context10[\"catch\"](0);\n              res.send(_context10.t0);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 8]]);\n    }));\n\n    function taiKhoanCuaNhom(_x15, _x16) {\n      return _taiKhoanCuaNhom.apply(this, arguments);\n    }\n\n    return taiKhoanCuaNhom;\n  }(),\n  doiMatKhau: function () {\n    var _doiMatKhau = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n      var _req$body4, user, mkc, mkm, mkm2, taikhoan, check;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _req$body4 = req.body, user = _req$body4.user, mkc = _req$body4.mkc, mkm = _req$body4.mkm, mkm2 = _req$body4.mkm2;\n              _context12.next = 4;\n              return TaiKhoan.findById(user._id);\n\n            case 4:\n              taikhoan = _context12.sent;\n              check = false;\n              bcrypt.compare(mkc, taikhoan.matkhau).then(function (result) {\n                check = result;\n\n                if (check === true) {\n                  bcrypt.hash(mkm, saltRounds).then( /*#__PURE__*/function () {\n                    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(hash) {\n                      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                        while (1) {\n                          switch (_context11.prev = _context11.next) {\n                            case 0:\n                              //console.log(hash)\t\t\t\t\n                              taikhoan.matkhau = hash;\n                              taikhoan.matkhautam = mkm;\n                              taikhoan.save();\n\n                            case 3:\n                            case \"end\":\n                              return _context11.stop();\n                          }\n                        }\n                      }, _callee11);\n                    }));\n\n                    return function (_x19) {\n                      return _ref6.apply(this, arguments);\n                    };\n                  }());\n                  res.send({\n                    result: true\n                  });\n                } else {\n                  //return res.send({checked:false,mess:'Wrong Password'})\n                  //res.send(check)\n                  res.send({\n                    result: false\n                  });\n                }\n              }); //console.log(_iduser.password)\n              //res.send(check)\n\n              _context12.next = 12;\n              break;\n\n            case 9:\n              _context12.prev = 9;\n              _context12.t0 = _context12[\"catch\"](0);\n              res.send(_context12.t0);\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 9]]);\n    }));\n\n    function doiMatKhau(_x17, _x18) {\n      return _doiMatKhau.apply(this, arguments);\n    }\n\n    return doiMatKhau;\n  }(),\n  capnhat: function () {\n    var _capnhat = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n      var _req$body5, _iduser, ten, ngaysinh, gioitinh, email, diachi, sdt, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              _req$body5 = req.body, _iduser = _req$body5._iduser, ten = _req$body5.ten, ngaysinh = _req$body5.ngaysinh, gioitinh = _req$body5.gioitinh, email = _req$body5.email, diachi = _req$body5.diachi, sdt = _req$body5.sdt;\n              _context13.next = 4;\n              return TaiKhoan.findById(_iduser);\n\n            case 4:\n              taikhoan = _context13.sent;\n              taikhoan.ten = ten ? ten : taikhoan.ten;\n              taikhoan.ngaysinh = ngaysinh ? ngaysinh : taikhoan.ngaysinh;\n              taikhoan.gioitinh = gioitinh ? gioitinh : taikhoan.gioitinh;\n              taikhoan.email = email ? email : taikhoan.email;\n              taikhoan.diachi = diachi ? diachi : taikhoan.diachi;\n              taikhoan.sdt = sdt ? sdt : taikhoan.sdt;\n              taikhoan.save();\n              res.send([taikhoan]);\n              _context13.next = 18;\n              break;\n\n            case 15:\n              _context13.prev = 15;\n              _context13.t0 = _context13[\"catch\"](0);\n              res.send(_context13.t0);\n\n            case 18:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 15]]);\n    }));\n\n    function capnhat(_x20, _x21) {\n      return _capnhat.apply(this, arguments);\n    }\n\n    return capnhat;\n  }(),\n  lichsuthi: function () {\n    var _lichsuthi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n      var _idtaikhoan, baithis;\n\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              _idtaikhoan = req.params._idtaikhoan;\n              _context14.next = 4;\n              return BaiThi.find({\n                'sinhvien': _idtaikhoan\n              }).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 4:\n              baithis = _context14.sent;\n              res.send({\n                baithis: baithis\n              });\n              _context14.next = 11;\n              break;\n\n            case 8:\n              _context14.prev = 8;\n              _context14.t0 = _context14[\"catch\"](0);\n              res.send(_context14.t0);\n\n            case 11:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 8]]);\n    }));\n\n    function lichsuthi(_x22, _x23) {\n      return _lichsuthi.apply(this, arguments);\n    }\n\n    return lichsuthi;\n  }(),\n  uploadImage: function () {\n    var _uploadImage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n      var processedFile, orgName, fullPathInServ, newFullPath;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              //res.send(req.file)\n              processedFile = req.file || {}; // MULTER xử lý và gắn đối tượng FILE vào req\t\t\n\n              orgName = processedFile.originalname || ''; // Tên gốc trong máy tính của người upload    \n\n              orgName = orgName.trim().replace(/ /g, \"-\");\n              fullPathInServ = processedFile.path; // Đường dẫn đầy đủ của file vừa đc upload lên server\n              // Đổi tên của file vừa upload lên, vì multer đang đặt default ko có đuôi file\n\n              newFullPath = \"\".concat(fullPathInServ, \"-\").concat(orgName);\n              fs.renameSync(fullPathInServ, newFullPath);\n              res.send(newFullPath);\n\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    function uploadImage(_x24, _x25) {\n      return _uploadImage.apply(this, arguments);\n    }\n\n    return uploadImage;\n  }(),\n  updateUser: function () {\n    var _updateUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res) {\n      var _req$body6, _iduser, imageName, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _req$body6 = req.body, _iduser = _req$body6._iduser, imageName = _req$body6.imageName;\n              _context16.next = 4;\n              return TaiKhoan.findById(_iduser);\n\n            case 4:\n              taikhoan = _context16.sent;\n              taikhoan.hinhanh = imageName;\n              taikhoan.save();\n              res.send(taikhoan);\n              _context16.next = 13;\n              break;\n\n            case 10:\n              _context16.prev = 10;\n              _context16.t0 = _context16[\"catch\"](0);\n              res.send(_context16.t0);\n\n            case 13:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 10]]);\n    }));\n\n    function updateUser(_x26, _x27) {\n      return _updateUser.apply(this, arguments);\n    }\n\n    return updateUser;\n  }(),\n  capnhatGV: function () {\n    var _capnhatGV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n      var _req$body7, name, email, phone, address, _idgv, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.prev = 0;\n              _req$body7 = req.body, name = _req$body7.name, email = _req$body7.email, phone = _req$body7.phone, address = _req$body7.address, _idgv = _req$body7._idgv;\n              _context17.next = 4;\n              return TaiKhoan.findById(_idgv);\n\n            case 4:\n              taikhoan = _context17.sent;\n              taikhoan.ten = name ? name : taikhoan.ten;\n              taikhoan.email = email ? email : taikhoan.email;\n              taikhoan.sdt = phone ? phone : taikhoan.sdt;\n              taikhoan.diachi = address ? address : taikhoan.diachi;\n              taikhoan.save();\n              res.send({\n                taikhoan: taikhoan\n              });\n              _context17.next = 16;\n              break;\n\n            case 13:\n              _context17.prev = 13;\n              _context17.t0 = _context17[\"catch\"](0);\n              res.send(_context17.t0);\n\n            case 16:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[0, 13]]);\n    }));\n\n    function capnhatGV(_x28, _x29) {\n      return _capnhatGV.apply(this, arguments);\n    }\n\n    return capnhatGV;\n  }(),\n  giaovien: function () {\n    var _giaovien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res) {\n      var giaoviens;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.prev = 0;\n              _context18.next = 3;\n              return TaiKhoan.find({\n                vaitro: 1\n              });\n\n            case 3:\n              giaoviens = _context18.sent;\n              res.send({\n                giaoviens: giaoviens\n              });\n              _context18.next = 10;\n              break;\n\n            case 7:\n              _context18.prev = 7;\n              _context18.t0 = _context18[\"catch\"](0);\n              res.send(_context18.t0);\n\n            case 10:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[0, 7]]);\n    }));\n\n    function giaovien(_x30, _x31) {\n      return _giaovien.apply(this, arguments);\n    }\n\n    return giaovien;\n  }(),\n  sinhvien: function () {\n    var _sinhvien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res) {\n      var sinhviens;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.prev = 0;\n              _context19.next = 3;\n              return TaiKhoan.find({\n                vaitro: 2\n              });\n\n            case 3:\n              sinhviens = _context19.sent;\n              res.send({\n                sinhviens: sinhviens\n              });\n              _context19.next = 10;\n              break;\n\n            case 7:\n              _context19.prev = 7;\n              _context19.t0 = _context19[\"catch\"](0);\n              res.send(_context19.t0);\n\n            case 10:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[0, 7]]);\n    }));\n\n    function sinhvien(_x32, _x33) {\n      return _sinhvien.apply(this, arguments);\n    }\n\n    return sinhvien;\n  }(),\n  getGiaoVien: function () {\n    var _getGiaoVien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n      var giaoviens;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _context20.next = 3;\n              return TaiKhoan.find({\n                vaitro: 1\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'sinhviens',\n                  model: 'TaiKhoan'\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'thongbaos',\n                  model: 'ThongBao'\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'kithis',\n                  model: 'KiThi'\n                }\n              });\n\n            case 3:\n              giaoviens = _context20.sent;\n              res.send({\n                giaoviens: giaoviens\n              });\n              _context20.next = 10;\n              break;\n\n            case 7:\n              _context20.prev = 7;\n              _context20.t0 = _context20[\"catch\"](0);\n              res.send(_context20.t0);\n\n            case 10:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[0, 7]]);\n    }));\n\n    function getGiaoVien(_x34, _x35) {\n      return _getGiaoVien.apply(this, arguments);\n    }\n\n    return getGiaoVien;\n  }(),\n  chitiet: function () {\n    var _chitiet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(req, res) {\n      var _idtk, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.prev = 0;\n              _idtk = req.body._idtk;\n              _context21.next = 4;\n              return TaiKhoan.findById(_idtk).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'kithis',\n                  model: 'KiThi',\n                  populate: {\n                    path: 'dethis',\n                    model: 'DeThi',\n                    populate: {\n                      path: 'cauhois',\n                      model: 'CauHoi',\n                      populate: {\n                        path: 'phuongans',\n                        model: 'PhuongAn'\n                      }\n                    }\n                  }\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'sinhviens',\n                  model: 'TaiKhoan'\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'thongbaos',\n                  model: 'ThongBao'\n                }\n              }).populate({\n                path: 'kithis',\n                model: 'KiThi',\n                populate: {\n                  path: 'dethis',\n                  model: 'DeThi'\n                }\n              }).populate({\n                path: 'mons',\n                model: 'Mon',\n                populate: {\n                  path: 'cauhois',\n                  model: 'CauHoi',\n                  populate: {\n                    path: 'phuongans',\n                    model: 'PhuongAn'\n                  }\n                }\n              }).populate({\n                path: 'dethis',\n                model: 'DeThi',\n                populate: {\n                  path: 'cauhois',\n                  model: 'CauHoi',\n                  populate: {\n                    path: 'phuongans',\n                    model: 'PhuongAn'\n                  }\n                }\n              }).populate({\n                path: 'dethis',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon',\n                  populate: {\n                    path: 'cauhois',\n                    model: 'CauHoi',\n                    populate: {\n                      path: 'phuongans',\n                      model: 'PhuongAn'\n                    }\n                  }\n                }\n              });\n\n            case 4:\n              taikhoan = _context21.sent;\n              res.send({\n                result: taikhoan\n              });\n              _context21.next = 11;\n              break;\n\n            case 8:\n              _context21.prev = 8;\n              _context21.t0 = _context21[\"catch\"](0);\n              res.send(_context21.t0);\n\n            case 11:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, null, [[0, 8]]);\n    }));\n\n    function chitiet(_x36, _x37) {\n      return _chitiet.apply(this, arguments);\n    }\n\n    return chitiet;\n  }(),\n  capmatkhau: function () {\n    var _capmatkhau = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(req, res) {\n      var _idgv, giaovien, pass;\n\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              _idgv = req.body._idgv;\n              _context23.next = 4;\n              return TaiKhoan.findById(_idgv);\n\n            case 4:\n              giaovien = _context23.sent;\n              pass = shortid.generate();\n              bcrypt.hash(pass, saltRounds).then( /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(hash) {\n                  return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                    while (1) {\n                      switch (_context22.prev = _context22.next) {\n                        case 0:\n                          giaovien.matkhau = hash;\n                          giaovien.matkhautam = pass;\n                          giaovien.trangthai = 1;\n                          giaovien.save();\n\n                        case 4:\n                        case \"end\":\n                          return _context22.stop();\n                      }\n                    }\n                  }, _callee22);\n                }));\n\n                return function (_x40) {\n                  return _ref7.apply(this, arguments);\n                };\n              }());\n              res.send({\n                pass: pass\n              });\n              _context23.next = 13;\n              break;\n\n            case 10:\n              _context23.prev = 10;\n              _context23.t0 = _context23[\"catch\"](0);\n              res.send(_context23.t0);\n\n            case 13:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[0, 10]]);\n    }));\n\n    function capmatkhau(_x38, _x39) {\n      return _capmatkhau.apply(this, arguments);\n    }\n\n    return capmatkhau;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.controller.js"
      ],
      "names": [
        "TaiKhoan",
        "require",
        "Nhom",
        "BaiThi",
        "bcrypt",
        "fs",
        "shortid",
        "saltRounds",
        "myPlaintextPassword",
        "someOtherPlaintextPassword",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "taikhoan",
        "send",
        "register",
        "body",
        "name",
        "email",
        "code",
        "maso",
        "vaitro",
        "trangthai",
        "ten",
        "save",
        "login",
        "pass",
        "user",
        "checked",
        "check",
        "compare",
        "matkhau",
        "then",
        "result",
        "mess",
        "createStudent",
        "students",
        "nhomActived",
        "forEach",
        "student",
        "idx",
        "matkhautam",
        "generate",
        "MSSV",
        "sv",
        "length",
        "item",
        "nhoms",
        "push",
        "_id",
        "response",
        "findById",
        "nhom",
        "sinhviens",
        "hash",
        "gioitinh",
        "Email",
        "respone",
        "err",
        "taiKhoanCuaNhom",
        "_idnhom",
        "params",
        "populate",
        "sort",
        "doiMatKhau",
        "mkc",
        "mkm",
        "mkm2",
        "capnhat",
        "_iduser",
        "ngaysinh",
        "diachi",
        "sdt",
        "lichsuthi",
        "_idtaikhoan",
        "path",
        "model",
        "baithis",
        "uploadImage",
        "processedFile",
        "file",
        "orgName",
        "originalname",
        "trim",
        "replace",
        "fullPathInServ",
        "newFullPath",
        "renameSync",
        "updateUser",
        "imageName",
        "hinhanh",
        "capnhatGV",
        "phone",
        "address",
        "_idgv",
        "giaovien",
        "giaoviens",
        "sinhvien",
        "getGiaoVien",
        "chitiet",
        "_idtk",
        "capmatkhau",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAII,EAAE,GAAGJ,OAAO,CAAE,IAAF,CAAhB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMM,UAAU,GAAG,CAAnB;AACA,IAAMC,mBAAmB,GAAG,gBAA5B;AACA,IAAMC,0BAA0B,GAAG,WAAnC;AAEA,IAAMC,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBb,QAAQ,CAACc,IAAT,EADjB;;AAAA;AACAC,cAAAA,QADA;AAENF,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKfE,EAAAA,QAAQ;AAAA,4EAAG,kBAAOL,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEmBD,GAAG,CAACM,IAFvB,EAEFC,IAFE,aAEFA,IAFE,EAEIC,KAFJ,aAEIA,KAFJ,EAEWC,IAFX,aAEWA,IAFX,EAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAbS;AAAA,qBAcc,IAAIrB,QAAJ,CAAa;AACnCsB,gBAAAA,IAAI,EAACD,IAD8B;AAEnCE,gBAAAA,MAAM,EAAC,CAF4B;AAGnCC,gBAAAA,SAAS,EAAC,CAHyB;AAInCC,gBAAAA,GAAG,EAACN,IAJ+B;AAKnCC,gBAAAA,KAAK,EAACA;AAL6B,eAAb,CAdd;;AAAA;AAcHL,cAAAA,QAdG;AAqBRA,cAAAA,QAAQ,CAACW,IAAT;AACDb,cAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AAtBS;AAAA;;AAAA;AAAA;AAAA;AAyBTH,cAAAA,GAAG,CAACG,IAAJ;;AAzBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALO;AAiCfW,EAAAA,KAAK;AAAA,yEAAG,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEeD,GAAG,CAACM,IAFnB,EAECG,IAFD,cAECA,IAFD,EAEOO,IAFP,cAEOA,IAFP;;AAAA,oBAGHP,IAAI,KAAG,OAAP,IAAgBO,IAAI,KAAG,OAHpB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIc5B,QAAQ,CAACc,IAAT,CAAc;AAACQ,gBAAAA,IAAI,EAACD;AAAN,eAAd,CAJd;;AAAA;AAICQ,cAAAA,KAJD;AAAA,gDAKEhB,GAAG,CAACG,IAAJ,CAAS;AAACc,gBAAAA,OAAO,EAAC,IAAT;AAAcD,gBAAAA,IAAI,EAACA;AAAnB,eAAT,CALF;;AAAA;AAAA;AAAA,qBAOa7B,QAAQ,CAACc,IAAT,CAAc;AAACQ,gBAAAA,IAAI,EAACD;AAAN,eAAd,CAPb;;AAAA;AAOAQ,cAAAA,IAPA;;AAAA,oBAQFA,IAAI,IAAI,EARN;AAAA;AAAA;AAAA;;AASDE,cAAAA,KATC,GASO,KATP;AAUL3B,cAAAA,MAAM,CAAC4B,OAAP,CAAeJ,IAAf,EAAqBC,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAA7B,EAAsCC,IAAtC,CAA2C,UAASC,MAAT,EAAiB;AACxDJ,gBAAAA,KAAK,GAAGI,MAAR;;AACA,oBAAGJ,KAAK,KAAG,IAAX,EAAgB;AACf,yBAAOlB,GAAG,CAACG,IAAJ,CAAS;AAACc,oBAAAA,OAAO,EAAC,IAAT;AAAcD,oBAAAA,IAAI,EAACA;AAAnB,mBAAT,CAAP;AACA,iBAFD,MAEO;AACN,yBAAOhB,GAAG,CAACG,IAAJ,CAAS;AAACc,oBAAAA,OAAO,EAAC,KAAT;AAAeM,oBAAAA,IAAI,EAAC;AAApB,mBAAT,CAAP;AACA;AACJ,eAPD;AAVK;AAAA;;AAAA;AAAA,gDAmBEvB,GAAG,CAACG,IAAJ,CAAS;AAACc,gBAAAA,OAAO,EAAC,KAAT;AAAgBM,gBAAAA,IAAI,EAAC;AAArB,eAAT,CAnBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBNvB,cAAAA,GAAG,CAACG,IAAJ;;AAtBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAjCU;AA0DfqB,EAAAA,aAAa;AAAA,iFAAG,kBAAOzB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACf,kBAAG;AAAA,6BACgCD,GAAG,CAACM,IADpC,EACMoB,QADN,cACMA,QADN,EACgBC,WADhB,cACgBA,WADhB;;AAGF,oBAAGD,QAAH,EAAY;AACXA,kBAAAA,QAAQ,CAACE,OAAT;AAAA,uFAAiB,kBAAOC,OAAP,EAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,8BAAAA,UADU,GACGrC,OAAO,CAACsC,QAAR,EADH;AAAA;AAAA,qCAEC5C,QAAQ,CAACc,IAAT,CAAc;AAACQ,gCAAAA,IAAI,EAACmB,OAAO,CAACI;AAAd,+BAAd,CAFD;;AAAA;AAEVC,8BAAAA,EAFU;;AAGhB,kCAAIA,EAAE,CAACC,MAAH,IAAW,CAAf,EAAiB;AAChBD,gCAAAA,EAAE,CAACN,OAAH;AAAA,sGAAW,kBAAMQ,IAAN;AAAA;AAAA;AAAA;AAAA;AACVA,4CAAAA,IAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBX,WAAW,CAACY,GAA5B;AACAH,4CAAAA,IAAI,CAACtB,IAAL,GAAYQ,IAAZ;AAAA,kHAAiB,kBAAMkB,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACClD,IAAI,CAACmD,QAAL,CAAcd,WAAW,CAACY,GAA1B,CADD;;AAAA;AACZG,wDAAAA,IADY;AAEfA,wDAAAA,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAoBE,QAAQ,CAACD,GAA7B;AACAG,wDAAAA,IAAI,CAAC5B,IAAL;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAjB;;AAAA;AAAA;AAAA;AAAA;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAX;;AAAA;AAAA;AAAA;AAAA,qCADgB,CAShB;AACA,+BAVD,MAUO;AACNtB,gCAAAA,MAAM,CAACoD,IAAP,CAAYb,UAAZ,EAAwBpC,UAAxB,EAAoC2B,IAApC;AAAA,sGAAyC,kBAAMsB,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAGnB,IAAIxD,QAAJ,CAAa;AACjCsB,8CAAAA,IAAI,EAACmB,OAAO,CAACI,IADoB;AAEjCpB,8CAAAA,GAAG,EAACgB,OAAO,CAAC,QAAD,CAFsB;AAGjCgB,8CAAAA,QAAQ,EAAChB,OAAO,CAAC,WAAD,CAHiB;AAIjCrB,8CAAAA,KAAK,EAACqB,OAAO,CAACiB,KAJmB;AAKjCzB,8CAAAA,OAAO,EAACuB,IALyB;AAMjCP,8CAAAA,KAAK,EAACV,WAAW,CAACY,GANe;AAOjCR,8CAAAA,UAAU,EAACA,UAPsB;AAQjCpB,8CAAAA,MAAM,EAAC,CAR0B;AASjCC,8CAAAA,SAAS,EAAC;AATuB,6CAAb,CAHmB;;AAAA;AAGpCT,4CAAAA,QAHoC;AAcxCA,4CAAAA,QAAQ,CAACW,IAAT,GAAgBQ,IAAhB;AAAA,kHAAqB,kBAAMyB,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACHzD,IAAI,CAACmD,QAAL,CAAcd,WAAW,CAACY,GAA1B,CADG;;AAAA;AAChBG,wDAAAA,IADgB;AAEnBA,wDAAAA,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAoBS,OAAO,CAACR,GAA5B;AACAG,wDAAAA,IAAI,CAAC5B,IAAL;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAArB;;AAAA;AAAA;AAAA;AAAA;;AAdwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAzC;;AAAA;AAAA;AAAA;AAAA;AAoBA;;AAED,kCAAIgB,GAAG,KAAKJ,QAAQ,CAACS,MAAT,GAAgB,CAA5B,EAA8B;AAC7B;AACAlC,gCAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AACA;;AAvCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjB;;AAAA;AAAA;AAAA;AAAA;AAyCA;AACD,eA9CD,CA8CE,OAAM4C,GAAN,EAAU;AACX/C,gBAAAA,GAAG,CAACG,IAAJ,CAAS4C,GAAT;AACA;;AAjDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA1DE;AA6GfC,EAAAA,eAAe;AAAA,mFAAG,mBAAOjD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAERiD,cAAAA,OAFQ,GAEIlD,GAAG,CAACmD,MAFR,CAERD,OAFQ;AAAA;AAAA,qBAGG5D,IAAI,CAACmD,QAAL,CAAcS,OAAd,EAAuBE,QAAvB,CAAgC,WAAhC,EAA6CC,IAA7C,CAAkD;AAAC,wBAAO,CAAC;AAAT,eAAlD,CAHH;;AAAA;AAGVX,cAAAA,IAHU;AAIhB;AACA;AACA;AACA;AACA;AACAzC,cAAAA,GAAG,CAACG,IAAJ,CAASsC,IAAT;AATgB;AAAA;;AAAA;AAAA;AAAA;AAWhBzC,cAAAA,GAAG,CAACG,IAAJ;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7GA;AA2HfkD,EAAAA,UAAU;AAAA,8EAAG,mBAAOtD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEkBD,GAAG,CAACM,IAFtB,EAEJW,IAFI,cAEJA,IAFI,EAEEsC,GAFF,cAEEA,GAFF,EAEOC,GAFP,cAEOA,GAFP,EAEYC,IAFZ,cAEYA,IAFZ;AAAA;AAAA,qBAGYrE,QAAQ,CAACqD,QAAT,CAAkBxB,IAAI,CAACsB,GAAvB,CAHZ;;AAAA;AAGLpC,cAAAA,QAHK;AAIPgB,cAAAA,KAJO,GAIC,KAJD;AAKV3B,cAAAA,MAAM,CAAC4B,OAAP,CAAemC,GAAf,EAAoBpD,QAAQ,CAACkB,OAA7B,EAAsCC,IAAtC,CAA2C,UAASC,MAAT,EAAiB;AACxDJ,gBAAAA,KAAK,GAAGI,MAAR;;AACA,oBAAGJ,KAAK,KAAG,IAAX,EAAgB;AAEf3B,kBAAAA,MAAM,CAACoD,IAAP,CAAYY,GAAZ,EAAiB7D,UAAjB,EAA6B2B,IAA7B;AAAA,wFAAkC,mBAAMsB,IAAN;AAAA;AAAA;AAAA;AAAA;AACpC;AACAzC,8BAAAA,QAAQ,CAACkB,OAAT,GAAmBuB,IAAnB;AACAzC,8BAAAA,QAAQ,CAAC4B,UAAT,GAAsByB,GAAtB;AACArD,8BAAAA,QAAQ,CAACW,IAAT;;AAJoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlC;;AAAA;AAAA;AAAA;AAAA;AAQAb,kBAAAA,GAAG,CAACG,IAAJ,CAAS;AAACmB,oBAAAA,MAAM,EAAC;AAAR,mBAAT;AACA,iBAXD,MAWO;AACN;AACA;AACAtB,kBAAAA,GAAG,CAACG,IAAJ,CAAS;AAACmB,oBAAAA,MAAM,EAAC;AAAR,mBAAT;AACA;AACD,eAlBJ,EALU,CAwBX;AACA;;AAzBW;AAAA;;AAAA;AAAA;AAAA;AA2BXtB,cAAAA,GAAG,CAACG,IAAJ;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3HK;AAyJfsD,EAAAA,OAAO;AAAA,2EAAG,mBAAO1D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEuDD,GAAG,CAACM,IAF3D,EAEDqD,OAFC,cAEDA,OAFC,EAEO9C,GAFP,cAEOA,GAFP,EAEY+C,QAFZ,cAEYA,QAFZ,EAEsBf,QAFtB,cAEsBA,QAFtB,EAEgCrC,KAFhC,cAEgCA,KAFhC,EAEuCqD,MAFvC,cAEuCA,MAFvC,EAE+CC,GAF/C,cAE+CA,GAF/C;AAAA;AAAA,qBAGe1E,QAAQ,CAACqD,QAAT,CAAkBkB,OAAlB,CAHf;;AAAA;AAGFxD,cAAAA,QAHE;AAIPA,cAAAA,QAAQ,CAACU,GAAT,GAAeA,GAAG,GAAGA,GAAH,GAASV,QAAQ,CAACU,GAApC;AACAV,cAAAA,QAAQ,CAACyD,QAAT,GAAoBA,QAAQ,GAAGA,QAAH,GAAczD,QAAQ,CAACyD,QAAnD;AACAzD,cAAAA,QAAQ,CAAC0C,QAAT,GAAoBA,QAAQ,GAAGA,QAAH,GAAc1C,QAAQ,CAAC0C,QAAnD;AACA1C,cAAAA,QAAQ,CAACK,KAAT,GAAiBA,KAAK,GAAGA,KAAH,GAAWL,QAAQ,CAACK,KAA1C;AACAL,cAAAA,QAAQ,CAAC0D,MAAT,GAAkBA,MAAM,GAAGA,MAAH,GAAY1D,QAAQ,CAAC0D,MAA7C;AACA1D,cAAAA,QAAQ,CAAC2D,GAAT,GAAeA,GAAG,GAAGA,GAAH,GAAS3D,QAAQ,CAAC2D,GAApC;AACA3D,cAAAA,QAAQ,CAACW,IAAT;AACDb,cAAAA,GAAG,CAACG,IAAJ,CAAS,CAACD,QAAD,CAAT;AAXQ;AAAA;;AAAA;AAAA;AAAA;AAaRF,cAAAA,GAAG,CAACG,IAAJ;;AAbQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzJQ;AAyKf2D,EAAAA,SAAS;AAAA,6EAAG,mBAAO/D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEF+D,cAAAA,WAFE,GAEchE,GAAG,CAACmD,MAFlB,CAEFa,WAFE;AAAA;AAAA,qBAGYzE,MAAM,CAACW,IAAP,CAAY;AAAC,4BAAW8D;AAAZ,eAAZ,EAAsCZ,QAAtC,CAA+C;AACpEa,gBAAAA,IAAI,EAAC,SAD+D;AAEpEC,gBAAAA,KAAK,EAAC,QAF8D;AAGpEd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAE,WADE;AAERC,kBAAAA,KAAK,EAAE;AAFC;AAH2D,eAA/C,CAHZ;;AAAA;AAGJC,cAAAA,OAHI;AAWVlE,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAAC+D,gBAAAA,OAAO,EAACA;AAAT,eAAT;AAXU;AAAA;;AAAA;AAAA;AAAA;AAaVlE,cAAAA,GAAG,CAACG,IAAJ;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzKM;AAyLfgE,EAAAA,WAAW;AAAA,+EAAE,mBAAOpE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ;AACMoE,cAAAA,aAFM,GAEUrE,GAAG,CAACsE,IAAJ,IAAY,EAFtB,EAE0B;;AAC/BC,cAAAA,OAHK,GAGKF,aAAa,CAACG,YAAd,IAA8B,EAHnC,EAGuC;;AAChDD,cAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,GAAeC,OAAf,CAAuB,IAAvB,EAA6B,GAA7B,CAAV;AACMC,cAAAA,cALG,GAKcN,aAAa,CAACJ,IAL5B,EAKkC;AAC3C;;AACMW,cAAAA,WAPG,aAOcD,cAPd,cAOgCJ,OAPhC;AAQT9E,cAAAA,EAAE,CAACoF,UAAH,CAAcF,cAAd,EAA8BC,WAA9B;AACH3E,cAAAA,GAAG,CAACG,IAAJ,CAASwE,WAAT;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzLI;AAoMfE,EAAAA,UAAU;AAAA,8EAAG,mBAAO9E,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEkBD,GAAG,CAACM,IAFtB,EAEJqD,OAFI,cAEJA,OAFI,EAEKoB,SAFL,cAEKA,SAFL;AAAA;AAAA,qBAGY3F,QAAQ,CAACqD,QAAT,CAAkBkB,OAAlB,CAHZ;;AAAA;AAGLxD,cAAAA,QAHK;AAIVA,cAAAA,QAAQ,CAAC6E,OAAT,GAAmBD,SAAnB;AACA5E,cAAAA,QAAQ,CAACW,IAAT;AACDb,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;AANW;AAAA;;AAAA;AAAA;AAAA;AAQXF,cAAAA,GAAG,CAACG,IAAJ;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApMK;AA+Mf6E,EAAAA,SAAS;AAAA,6EAAG,mBAAOjF,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEiCD,GAAG,CAACM,IAFrC,EAEHC,IAFG,cAEHA,IAFG,EAEGC,KAFH,cAEGA,KAFH,EAEU0E,KAFV,cAEUA,KAFV,EAEiBC,OAFjB,cAEiBA,OAFjB,EAE0BC,KAF1B,cAE0BA,KAF1B;AAAA;AAAA,qBAGahG,QAAQ,CAACqD,QAAT,CAAkB2C,KAAlB,CAHb;;AAAA;AAGJjF,cAAAA,QAHI;AAITA,cAAAA,QAAQ,CAACU,GAAT,GAAeN,IAAI,GAAGA,IAAH,GAAUJ,QAAQ,CAACU,GAAtC;AACAV,cAAAA,QAAQ,CAACK,KAAT,GAAiBA,KAAK,GAAGA,KAAH,GAAWL,QAAQ,CAACK,KAA1C;AACAL,cAAAA,QAAQ,CAAC2D,GAAT,GAAeoB,KAAK,GAAGA,KAAH,GAAW/E,QAAQ,CAAC2D,GAAxC;AACA3D,cAAAA,QAAQ,CAAC0D,MAAT,GAAkBsB,OAAO,GAAGA,OAAH,GAAahF,QAAQ,CAAC0D,MAA/C;AACA1D,cAAAA,QAAQ,CAACW,IAAT;AACDb,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAACD,gBAAAA,QAAQ,EAACA;AAAV,eAAT;AATU;AAAA;;AAAA;AAAA;AAAA;AAWVF,cAAAA,GAAG,CAACG,IAAJ;;AAXU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/MM;AA6NfiF,EAAAA,QAAQ;AAAA,4EAAG,mBAAOrF,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEeb,QAAQ,CAACc,IAAT,CAAc;AAACS,gBAAAA,MAAM,EAAC;AAAR,eAAd,CAFf;;AAAA;AAEH2E,cAAAA,SAFG;AAGTrF,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAACkF,gBAAAA,SAAS,EAATA;AAAD,eAAT;AAHS;AAAA;;AAAA;AAAA;AAAA;AAKTrF,cAAAA,GAAG,CAACG,IAAJ;;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7NO;AAqOfmF,EAAAA,QAAQ;AAAA,4EAAG,mBAAOvF,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEeb,QAAQ,CAACc,IAAT,CAAc;AAACS,gBAAAA,MAAM,EAAC;AAAR,eAAd,CAFf;;AAAA;AAEHgC,cAAAA,SAFG;AAGT1C,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAACuC,gBAAAA,SAAS,EAATA;AAAD,eAAT;AAHS;AAAA;;AAAA;AAAA;AAAA;AAKT1C,cAAAA,GAAG,CAACG,IAAJ;;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArOO;AA6OfoF,EAAAA,WAAW;AAAA,+EAAG,mBAAOxF,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEYb,QAAQ,CAACc,IAAT,CAAc;AAACS,gBAAAA,MAAM,EAAC;AAAR,eAAd,EAA0ByC,QAA1B,CAAmC;AAC1Da,gBAAAA,IAAI,EAAC,OADqD;AAE1DC,gBAAAA,KAAK,EAAC,MAFoD;AAG1Dd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHiD,eAAnC,EAOrBd,QAPqB,CAOZ;AACXa,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAPY,EAcrBd,QAdqB,CAcZ;AACXa,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,QADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAdY,CAFZ;;AAAA;AAENoB,cAAAA,SAFM;AAwBZrF,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAACkF,gBAAAA,SAAS,EAACA;AAAX,eAAT;AAxBY;AAAA;;AAAA;AAAA;AAAA;AA0BZrF,cAAAA,GAAG,CAACG,IAAJ;;AA1BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7OI;AA0QfqF,EAAAA,OAAO;AAAA,2EAAG,mBAAOzF,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDyF,cAAAA,KAFC,GAEM1F,GAAG,CAACM,IAFV,CAEDoF,KAFC;AAAA;AAAA,qBAGetG,QAAQ,CAACqD,QAAT,CAAkBiD,KAAlB,EAAyBtC,QAAzB,CAAkC;AACxDa,gBAAAA,IAAI,EAAC,OADmD;AAExDC,gBAAAA,KAAK,EAAC,MAFkD;AAGxDd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,QADG;AAERC,kBAAAA,KAAK,EAAC,OAFE;AAGRd,kBAAAA,QAAQ,EAAC;AACRa,oBAAAA,IAAI,EAAC,QADG;AAERC,oBAAAA,KAAK,EAAC,OAFE;AAGRd,oBAAAA,QAAQ,EAAC;AACRa,sBAAAA,IAAI,EAAC,SADG;AAERC,sBAAAA,KAAK,EAAC,QAFE;AAGRd,sBAAAA,QAAQ,EAAC;AACRa,wBAAAA,IAAI,EAAC,WADG;AAERC,wBAAAA,KAAK,EAAC;AAFE;AAHD;AAHD;AAHD;AAH+C,eAAlC,EAmBpBd,QAnBoB,CAmBX;AACXa,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAnBW,EA0BpBd,QA1BoB,CA0BX;AACXa,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eA1BW,EAiCpBd,QAjCoB,CAiCX;AACXa,gBAAAA,IAAI,EAAC,QADM;AAEXC,gBAAAA,KAAK,EAAC,OAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,QADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAjCW,EAwCpBd,QAxCoB,CAwCX;AACXa,gBAAAA,IAAI,EAAC,MADM;AAEXC,gBAAAA,KAAK,EAAC,KAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,SADG;AAERC,kBAAAA,KAAK,EAAC,QAFE;AAGRd,kBAAAA,QAAQ,EAAC;AACRa,oBAAAA,IAAI,EAAC,WADG;AAERC,oBAAAA,KAAK,EAAC;AAFE;AAHD;AAHE,eAxCW,EAmDpBd,QAnDoB,CAmDX;AACXa,gBAAAA,IAAI,EAAC,QADM;AAEXC,gBAAAA,KAAK,EAAC,OAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,SADG;AAERC,kBAAAA,KAAK,EAAC,QAFE;AAGRd,kBAAAA,QAAQ,EAAC;AACRa,oBAAAA,IAAI,EAAC,WADG;AAERC,oBAAAA,KAAK,EAAC;AAFE;AAHD;AAHE,eAnDW,EA8DpBd,QA9DoB,CA8DX;AACXa,gBAAAA,IAAI,EAAC,QADM;AAEXC,gBAAAA,KAAK,EAAC,OAFK;AAGXd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC,KAFE;AAGRd,kBAAAA,QAAQ,EAAC;AACRa,oBAAAA,IAAI,EAAC,SADG;AAERC,oBAAAA,KAAK,EAAC,QAFE;AAGRd,oBAAAA,QAAQ,EAAC;AACRa,sBAAAA,IAAI,EAAC,WADG;AAERC,sBAAAA,KAAK,EAAC;AAFE;AAHD;AAHD;AAHE,eA9DW,CAHf;;AAAA;AAGF/D,cAAAA,QAHE;AAiFRF,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAACmB,gBAAAA,MAAM,EAACpB;AAAR,eAAT;AAjFQ;AAAA;;AAAA;AAAA;AAAA;AAmFRF,cAAAA,GAAG,CAACG,IAAJ;;AAnFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA1QQ;AAgWfuF,EAAAA,UAAU;AAAA,8EAAG,mBAAO3F,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJmF,cAAAA,KAFI,GAEKpF,GAAG,CAACM,IAFT,CAEJ8E,KAFI;AAAA;AAAA,qBAGYhG,QAAQ,CAACqD,QAAT,CAAkB2C,KAAlB,CAHZ;;AAAA;AAGLC,cAAAA,QAHK;AAIJrE,cAAAA,IAJI,GAIGtB,OAAO,CAACsC,QAAR,EAJH;AAKVxC,cAAAA,MAAM,CAACoD,IAAP,CAAY5B,IAAZ,EAAkBrB,UAAlB,EAA8B2B,IAA9B;AAAA,oFAAmC,mBAAMsB,IAAN;AAAA;AAAA;AAAA;AAAA;AAClCyC,0BAAAA,QAAQ,CAAChE,OAAT,GAAmBuB,IAAnB;AACAyC,0BAAAA,QAAQ,CAACtD,UAAT,GAAsBf,IAAtB;AACAqE,0BAAAA,QAAQ,CAACzE,SAAT,GAAqB,CAArB;AACAyE,0BAAAA,QAAQ,CAACvE,IAAT;;AAJkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnC;;AAAA;AAAA;AAAA;AAAA;AAMAb,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAACY,gBAAAA,IAAI,EAACA;AAAN,eAAT;AAXU;AAAA;;AAAA;AAAA;AAAA;AAcXf,cAAAA,GAAG,CAACG,IAAJ;;AAdW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAhWK,CAAhB;AAmXAwF,MAAM,CAACC,OAAP,GAAiB/F,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let TaiKhoan = require('../models/taikhoan.model')\nlet Nhom = require('../models/nhom.model')\nlet BaiThi = require('../models/baithi.model')\nconst bcrypt = require('bcrypt');\n\nvar fs = require ('fs')\nvar shortid = require('shortid');\nconst saltRounds = 1;\nconst myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nconst someOtherPlaintextPassword = 'not_bacon';\n\nconst methods = {\n\tindex: async (req, res)=>{\n\t\tconst taikhoan = await TaiKhoan.find()\n\t\tres.send(taikhoan)\n\t},\n\tregister : async (req, res) => {\n\t\ttry{\t\t\t\t\t\n\t\t\tconst {name, email, code} = req.body\t\t\t\t\t\t\n\t\t\t// let hash_pass = ''\t\t\t\n\t\t\t// bcrypt.hash(password, saltRounds).then(hash=>{\n\t\t\t// \t//console.log(hash)\t\t\t\t\t\t\t\n\t\t\t// \tlet taikhoan = new TaiKhoan({\n\t\t\t// \t\tmaso:username,\n\t\t\t// \t\tmatkhau:hash,\n\t\t\t// \t\tvaitro:1,\n\t\t\t// \t\ttrangthai: 0 //0 _cho duyet, 1_da duyet dang hoat dong, 2_bi khoa\n\t\t\t// \t})\t\t\t\t\t\t\n\t\t\t// \ttaikhoan.save()\n\t\t\t// })\t\n\t\t\tconst taikhoan = await new TaiKhoan({\n\t\t\t\tmaso:code,\n\t\t\t\tvaitro:1,\n\t\t\t\ttrangthai:0,\n\t\t\t\tten:name,\n\t\t\t\temail:email\n\t\t\t})\t\n\t\t\t\ttaikhoan.save()\n\t\t\tres.send('ok')\t\t\t\t\t\n\t\t\t\t\t\n\t\t} catch (err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tlogin : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {code, pass} = req.body\n\t\t\tif(code==='admin'&&pass==='admin'){\n\t\t\t\tconst user = await TaiKhoan.find({maso:code})\n\t\t\t\treturn res.send({checked:true,user:user})\n\t\t\t}\n\t\t\tconst user = await TaiKhoan.find({maso:code})\n\t\t\tif (user != ''){\t\t\t\t\n\t\t\t\tlet check = false\t\n\t\t\t\tbcrypt.compare(pass, user[0].matkhau).then(function(result) {\n    \t\t\t\tcheck = result\n    \t\t\t\tif(check===true){\n    \t\t\t\t\treturn res.send({checked:true,user:user})\n    \t\t\t\t} else {\n    \t\t\t\t\treturn res.send({checked:false,mess:'Wrong Password'})\n    \t\t\t\t}\n\t\t\t\t});\t\t\t\t\t\t\t\t\n\t\t\t} else {\t\t\t\t\n\t\t\t\treturn res.send({checked:false, mess:'Not exit'})\n\t\t\t}\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tcreateStudent : async (req, res)=>{\n\t\ttry{\n\t\t\tconst { students, nhomActived } = req.body\n\n\t\t\tif(students){\n\t\t\t\tstudents.forEach(async (student, idx)=>{\n\t\t\t\t\tconst matkhautam = shortid.generate()\n\t\t\t\t\tconst sv = await TaiKhoan.find({maso:student.MSSV})\n\t\t\t\t\tif (sv.length!=0){\n\t\t\t\t\t\tsv.forEach(async item=>{\n\t\t\t\t\t\t\titem.nhoms.push(nhomActived._id)\n\t\t\t\t\t\t\titem.save().then(async response=>{\n\t\t\t\t\t\t\t\tlet nhom = await Nhom.findById(nhomActived._id)\n\t\t\t\t\t\t\t\t\tnhom.sinhviens.push(response._id)\n\t\t\t\t\t\t\t\t\tnhom.save()\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t//sv[0].nhoms.push(nhomActived._id)\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbcrypt.hash(matkhautam, saltRounds).then(async hash=>{\n\t\t\t\t\t\t\t//console.log(hash)\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet taikhoan = await new TaiKhoan({\n\t\t\t\t\t\t\t\tmaso:student.MSSV,\n\t\t\t\t\t\t\t\tten:student['Họ tên'],\n\t\t\t\t\t\t\t\tgioitinh:student['Giới tính'],\n\t\t\t\t\t\t\t\temail:student.Email,\n\t\t\t\t\t\t\t\tmatkhau:hash,\n\t\t\t\t\t\t\t\tnhoms:nhomActived._id,\n\t\t\t\t\t\t\t\tmatkhautam:matkhautam,\n\t\t\t\t\t\t\t\tvaitro:2,\n\t\t\t\t\t\t\t\ttrangthai:1\n\t\t\t\t\t\t\t})\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttaikhoan.save().then(async respone=>{\n\t\t\t\t\t\t\t\tlet nhom = await Nhom.findById(nhomActived._id)\n\t\t\t\t\t\t\t\t\tnhom.sinhviens.push(respone._id)\n\t\t\t\t\t\t\t\t\tnhom.save()\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\t\t\t\t\n\t\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t\tif (idx === students.length-1){\n\t\t\t\t\t\t//const students_result = await Nhom.findById(nhomActived._id).populate('sinhviens')\n\t\t\t\t\t\tres.send('ok')\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\ttaiKhoanCuaNhom : async (req, res)=>{\n\t\ttry{\n\t\t\tconst { _idnhom } = req.params\n\t\t\tconst nhom = await Nhom.findById(_idnhom).populate('sinhviens').sort({'maso':-1})\t\t\t\n\t\t\t// const nhom = await Nhom.findById(_idnhom).populate({\n\t\t\t// \tpath:'sinhviens',\n\t\t\t// \tmodel:'TaiKhoan',\n\t\t\t// \tsort: {'maso':-1}\n\t\t\t// })\n\t\t\tres.send(nhom)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tdoiMatKhau : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {user, mkc, mkm, mkm2}=req.body\n\t\t\tconst taikhoan = await TaiKhoan.findById(user._id) \t\t\t\n\t\t\tlet check = false\t\n\t\t\t\tbcrypt.compare(mkc, taikhoan.matkhau).then(function(result) {\n    \t\t\t\tcheck = result\n    \t\t\t\tif(check===true){    \t\t\n\n    \t\t\t\t\tbcrypt.hash(mkm, saltRounds).then(async hash=>{\n\t\t\t\t\t\t\t//console.log(hash)\t\t\t\t\n\t\t\t\t\t\t\ttaikhoan.matkhau = hash\n\t\t\t\t\t\t\ttaikhoan.matkhautam = mkm\n\t\t\t\t\t\t\ttaikhoan.save()\n\n\t\t\t\t\t\t})\t\t\t\n\n    \t\t\t\t\tres.send({result:true})\n    \t\t\t\t} else {\n    \t\t\t\t\t//return res.send({checked:false,mess:'Wrong Password'})\n    \t\t\t\t\t//res.send(check)\n    \t\t\t\t\tres.send({result:false})\n    \t\t\t\t}\n    \t\t\t})\n\t\t\t//console.log(_iduser.password)\n\t\t\t//res.send(check)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tcapnhat : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_iduser,ten, ngaysinh, gioitinh, email, diachi, sdt } = req.body\n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\n\t\t\t\ttaikhoan.ten = ten ? ten : taikhoan.ten\n\t\t\t\ttaikhoan.ngaysinh = ngaysinh ? ngaysinh : taikhoan.ngaysinh\n\t\t\t\ttaikhoan.gioitinh = gioitinh ? gioitinh : taikhoan.gioitinh\n\t\t\t\ttaikhoan.email = email ? email : taikhoan.email\n\t\t\t\ttaikhoan.diachi = diachi ? diachi : taikhoan.diachi\n\t\t\t\ttaikhoan.sdt = sdt ? sdt : taikhoan.sdt\n\t\t\t\ttaikhoan.save()\n\t\t\tres.send([taikhoan])\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tlichsuthi : async (req, res) => {\n\t\ttry{\n\t\t\tconst { _idtaikhoan } = req.params\n\t\t\tconst baithis = await BaiThi.find({'sinhvien':_idtaikhoan}).populate({\n\t\t\t\tpath:'cauhois',\n\t\t\t\tmodel:'CauHoi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath: 'phuongans',\n\t\t\t\t\tmodel: 'PhuongAn'\n\t\t\t\t}\n\t\t\t})\n\t\t\tres.send({baithis:baithis})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tuploadImage: async (req, res)=>{\n\t\t//res.send(req.file)\n\t\tconst processedFile = req.file || {}; // MULTER xử lý và gắn đối tượng FILE vào req\t\t\n\t    let orgName = processedFile.originalname || ''; // Tên gốc trong máy tính của người upload    \n\t    orgName = orgName.trim().replace(/ /g, \"-\")\n\t    const fullPathInServ = processedFile.path; // Đường dẫn đầy đủ của file vừa đc upload lên server\n\t    // Đổi tên của file vừa upload lên, vì multer đang đặt default ko có đuôi file\n\t    const newFullPath = `${fullPathInServ}-${orgName}`;\n\t    fs.renameSync(fullPathInServ, newFullPath);\t\t\t\t\n\t\tres.send(newFullPath)\n\t},\n\tupdateUser : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_iduser, imageName} = req.body\n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\n\t\t\t\ttaikhoan.hinhanh = imageName\n\t\t\t\ttaikhoan.save()\n\t\t\tres.send(taikhoan)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tcapnhatGV : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {name, email, phone, address, _idgv}=req.body\n\t\t\tconst taikhoan = await TaiKhoan.findById(_idgv)\n\t\t\t\ttaikhoan.ten = name ? name : taikhoan.ten\n\t\t\t\ttaikhoan.email = email ? email : taikhoan.email\n\t\t\t\ttaikhoan.sdt = phone ? phone : taikhoan.sdt\n\t\t\t\ttaikhoan.diachi = address ? address : taikhoan.diachi\n\t\t\t\ttaikhoan.save()\n\t\t\tres.send({taikhoan:taikhoan})\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tgiaovien : async (req, res)=>{\n\t\ttry{\n\t\t\tconst giaoviens = await TaiKhoan.find({vaitro:1})\n\t\t\tres.send({giaoviens})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tsinhvien : async (req, res)=>{\n\t\ttry{\n\t\t\tconst sinhviens = await TaiKhoan.find({vaitro:2})\n\t\t\tres.send({sinhviens})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tgetGiaoVien : async (req, res)=>{\n\t\ttry{\n\t\t\tconst giaoviens = await TaiKhoan.find({vaitro:1}).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'sinhviens',\n\t\t\t\t\tmodel:'TaiKhoan'\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'thongbaos',\n\t\t\t\t\tmodel:'ThongBao'\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'kithis',\n\t\t\t\t\tmodel:'KiThi'\n\t\t\t\t}\n\t\t\t})\n\t\t\tres.send({giaoviens:giaoviens})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tchitiet : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idtk}=req.body\n\t\t\tconst taikhoan = await TaiKhoan.findById(_idtk).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'kithis',\n\t\t\t\t\tmodel:'KiThi',\n\t\t\t\t\tpopulate:{\n\t\t\t\t\t\tpath:'dethis',\n\t\t\t\t\t\tmodel:'DeThi',\n\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'sinhviens',\n\t\t\t\t\tmodel:'TaiKhoan'\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'nhoms',\n\t\t\t\tmodel:'Nhom',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'thongbaos',\n\t\t\t\t\tmodel:'ThongBao'\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'kithis',\n\t\t\t\tmodel:'KiThi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'dethis',\n\t\t\t\t\tmodel:'DeThi'\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'mons',\n\t\t\t\tmodel:'Mon',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\tpopulate:{\n\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).populate({\n\t\t\t\tpath:'dethis',\n\t\t\t\tmodel:'DeThi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\tpopulate:{\n\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t}).populate({\n\t\t\t\tpath:'dethis',\n\t\t\t\tmodel:'DeThi',\n\t\t\t\tpopulate:{\n\t\t\t\t\tpath:'mon',\n\t\t\t\t\tmodel:'Mon',\n\t\t\t\t\tpopulate:{\n\t\t\t\t\t\tpath:'cauhois',\n\t\t\t\t\t\tmodel:'CauHoi',\n\t\t\t\t\t\tpopulate:{\n\t\t\t\t\t\t\tpath:'phuongans',\n\t\t\t\t\t\t\tmodel:'PhuongAn'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t})\n\t\t\tres.send({result:taikhoan})\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tcapmatkhau : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idgv} = req.body\n\t\t\tconst giaovien = await TaiKhoan.findById(_idgv)\n\t\t\t\tconst pass = shortid.generate()\t\t\t\t\n\t\t\t\tbcrypt.hash(pass, saltRounds).then(async hash=>{\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tgiaovien.matkhau = hash\n\t\t\t\t\tgiaovien.matkhautam = pass\n\t\t\t\t\tgiaovien.trangthai = 1\n\t\t\t\t\tgiaovien.save()\n\t\t\t\t})\t\n\t\t\t\tres.send({pass:pass})\n\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1609730851103
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/baithi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/baithi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/baithi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/baithi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "baithi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  thoigian: Number,\n  tgbd: String,\n  tgkt: String,\n  tgnb: String,\n  dung: Number,\n  sai: Number,\n  diem: Number,\n  ngay: String,\n  kithi: Object,\n  dethi: Object,\n  sinhvien: {\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  },\n  cauhois: [{\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  }],\n  phuongans: [{\n    type: Schema.Types.ObjectId,\n    ref: \"PhuongAn\"\n  }]\n});\nvar BaiThi = mongoose.model('BaiThi', schema);\nmodule.exports = BaiThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaXRoaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJtYSIsIlN0cmluZyIsInRob2lnaWFuIiwiTnVtYmVyIiwidGdiZCIsInRna3QiLCJ0Z25iIiwiZHVuZyIsInNhaSIsImRpZW0iLCJuZ2F5Iiwia2l0aGkiLCJPYmplY3QiLCJkZXRoaSIsInNpbmh2aWVuIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJjYXVob2lzIiwicGh1b25nYW5zIiwiQmFpVGhpIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsRUFBRSxFQUFFQyxNQUZnQjtBQUdwQkMsRUFBQUEsUUFBUSxFQUFFQyxNQUhVO0FBSXBCQyxFQUFBQSxJQUFJLEVBQUVILE1BSmM7QUFLcEJJLEVBQUFBLElBQUksRUFBRUosTUFMYztBQU1wQkssRUFBQUEsSUFBSSxFQUFFTCxNQU5jO0FBT3BCTSxFQUFBQSxJQUFJLEVBQUVKLE1BUGM7QUFRcEJLLEVBQUFBLEdBQUcsRUFBRUwsTUFSZTtBQVNwQk0sRUFBQUEsSUFBSSxFQUFFTixNQVRjO0FBVXBCTyxFQUFBQSxJQUFJLEVBQUVULE1BVmM7QUFZcEJVLEVBQUFBLEtBQUssRUFBQ0MsTUFaYztBQWFwQkMsRUFBQUEsS0FBSyxFQUFDRCxNQWJjO0FBZXBCRSxFQUFBQSxRQUFRLEVBQUM7QUFDUkMsSUFBQUEsSUFBSSxFQUFDakIsTUFBTSxDQUFDa0IsS0FBUCxDQUFhQyxRQURWO0FBRVhDLElBQUFBLEdBQUcsRUFBQztBQUZPLEdBZlc7QUFvQnBCQyxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNMSixJQUFBQSxJQUFJLEVBQUNqQixNQUFNLENBQUNrQixLQUFQLENBQWFDLFFBRGI7QUFFTEMsSUFBQUEsR0FBRyxFQUFDO0FBRkMsR0FBRCxDQXBCWTtBQXdCdkJFLEVBQUFBLFNBQVMsRUFBQyxDQUFDO0FBQ0pMLElBQUFBLElBQUksRUFBQ2pCLE1BQU0sQ0FBQ2tCLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQSxHQUFEO0FBeEJhLENBQVgsQ0FBYjtBQThCQSxJQUFJRyxNQUFNLEdBQUd6QixRQUFRLENBQUMwQixLQUFULENBQWUsUUFBZixFQUF5QnZCLE1BQXpCLENBQWI7QUFFQXdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuXG52YXIgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcblxuICAgIG1hOiBTdHJpbmcsICAgIFxuICAgIHRob2lnaWFuOiBOdW1iZXIsICAgIFxuICAgIHRnYmQ6IFN0cmluZyxcbiAgICB0Z2t0OiBTdHJpbmcsXG4gICAgdGduYjogU3RyaW5nLFxuICAgIGR1bmc6IE51bWJlcixcbiAgICBzYWk6IE51bWJlcixcbiAgICBkaWVtOiBOdW1iZXIsXG4gICAgbmdheTogU3RyaW5nLFxuICAgIFxuICAgIGtpdGhpOk9iamVjdCxcbiAgICBkZXRoaTpPYmplY3QsXG4gICAgXG4gICAgc2luaHZpZW46e1xuICAgIFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiVGFpS2hvYW5cIlxuICAgIH0sICAgIFxuXG4gICAgY2F1aG9pczpbe1xuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOlwiQ2F1SG9pXCJcbiAgICB9XSwgXHRcblx0cGh1b25nYW5zOlt7XG4gICAgICAgIHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6XCJQaHVvbmdBblwiXG4gICAgfV0sIFxufSlcblxudmFyIEJhaVRoaSA9IG1vbmdvb3NlLm1vZGVsKCdCYWlUaGknLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gQmFpVGhpIl19",
    "map": {
      "version": 3,
      "sources": [
        "baithi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "thoigian",
        "Number",
        "tgbd",
        "tgkt",
        "tgnb",
        "dung",
        "sai",
        "diem",
        "ngay",
        "kithi",
        "Object",
        "dethi",
        "sinhvien",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "cauhois",
        "phuongans",
        "BaiThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,QAAQ,EAAEC,MAHU;AAIpBC,EAAAA,IAAI,EAAEH,MAJc;AAKpBI,EAAAA,IAAI,EAAEJ,MALc;AAMpBK,EAAAA,IAAI,EAAEL,MANc;AAOpBM,EAAAA,IAAI,EAAEJ,MAPc;AAQpBK,EAAAA,GAAG,EAAEL,MARe;AASpBM,EAAAA,IAAI,EAAEN,MATc;AAUpBO,EAAAA,IAAI,EAAET,MAVc;AAYpBU,EAAAA,KAAK,EAACC,MAZc;AAapBC,EAAAA,KAAK,EAACD,MAbc;AAepBE,EAAAA,QAAQ,EAAC;AACRC,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADV;AAEXC,IAAAA,GAAG,EAAC;AAFO,GAfW;AAoBpBC,EAAAA,OAAO,EAAC,CAAC;AACLJ,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD,CApBY;AAwBvBE,EAAAA,SAAS,EAAC,CAAC;AACJL,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD;AAxBa,CAAX,CAAb;AA8BA,IAAIG,MAAM,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,QAAf,EAAyBvB,MAAzB,CAAb;AAEAwB,MAAM,CAACC,OAAP,GAAiBH,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ma: String,    \n    thoigian: Number,    \n    tgbd: String,\n    tgkt: String,\n    tgnb: String,\n    dung: Number,\n    sai: Number,\n    diem: Number,\n    ngay: String,\n    \n    kithi:Object,\n    dethi:Object,\n    \n    sinhvien:{\n    \ttype:Schema.Types.ObjectId,\n\t\tref:\"TaiKhoan\"\n    },    \n\n    cauhois:[{\n        type:Schema.Types.ObjectId,\n        ref:\"CauHoi\"\n    }], \t\n\tphuongans:[{\n        type:Schema.Types.ObjectId,\n        ref:\"PhuongAn\"\n    }], \n})\n\nvar BaiThi = mongoose.model('BaiThi', schema)\n\nmodule.exports = BaiThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1607942701032
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/thongbao.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/thongbao.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/thongbao.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/thongbao.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "thongbao.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _thongbao = _interopRequireDefault(require(\"../controllers/thongbao.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _thongbao[\"default\"].index);\nrouter.get('/nhom/:_idnhom', _thongbao[\"default\"].thongBaoCuaNhom);\nrouter.post('/them', _thongbao[\"default\"].post);\nrouter.post('/remove', _thongbao[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRob25nYmFvLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsInRob25nQmFvQ3VhTmhvbSIsInBvc3QiLCJyZW1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0FBSEEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBSUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLHFCQUFZQyxLQUE1QjtBQUVBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxnQkFBWCxFQUE2QkMscUJBQVlFLGVBQXpDO0FBRUFMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLE9BQVosRUFBb0JILHFCQUFZRyxJQUFoQztBQUVBTixNQUFNLENBQUNNLElBQVAsQ0FBWSxTQUFaLEVBQXNCSCxxQkFBWUksTUFBbEM7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy90aG9uZ2Jhby5jb250cm9sbGVyJ1xuXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXG5cbnJvdXRlci5nZXQoJy9uaG9tLzpfaWRuaG9tJywgY29udHJvbGxlcnMudGhvbmdCYW9DdWFOaG9tKVxuXG5yb3V0ZXIucG9zdCgnL3RoZW0nLGNvbnRyb2xsZXJzLnBvc3QpXG5cbnJvdXRlci5wb3N0KCcvcmVtb3ZlJyxjb250cm9sbGVycy5yZW1vdmUpXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "thongbao.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "thongBaoCuaNhom",
        "post",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,qBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,gBAAX,EAA6BC,qBAAYE,eAAzC;AAEAL,MAAM,CAACM,IAAP,CAAY,OAAZ,EAAoBH,qBAAYG,IAAhC;AAEAN,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAsBH,qBAAYI,MAAlC;AAGAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/thongbao.controller'\n\nrouter.get('/', controllers.index)\n\nrouter.get('/nhom/:_idnhom', controllers.thongBaoCuaNhom)\n\nrouter.post('/them',controllers.post)\n\nrouter.post('/remove',controllers.remove)\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1607006460583
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/thongbao.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/thongbao.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/thongbao.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/thongbao.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "thongbao.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar ThongBao = require('../models/thongbao.model');\n\nvar Nhom = require('../models/nhom.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var thongbao;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ThongBao.find().populate('nhom');\n\n            case 2:\n              thongbao = _context.sent;\n              res.send(thongbao);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  thongBaoCuaNhom: function () {\n    var _thongBaoCuaNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idnhom, thongbaos;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context2.next = 4;\n              return ThongBao.find({\n                'nhom': _idnhom\n              });\n\n            case 4:\n              thongbaos = _context2.sent;\n              res.send(thongbaos);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function thongBaoCuaNhom(_x3, _x4) {\n      return _thongBaoCuaNhom.apply(this, arguments);\n    }\n\n    return thongBaoCuaNhom;\n  }(),\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _req$body, _idnhom, noidung, ngay, gio, thongbao;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _req$body = req.body, _idnhom = _req$body._idnhom, noidung = _req$body.noidung, ngay = _req$body.ngay, gio = _req$body.gio;\n              _context5.next = 4;\n              return new ThongBao({\n                ma: shortid.generate(),\n                noidung: noidung,\n                ngay: ngay,\n                gio: gio,\n                nhom: _idnhom\n              });\n\n            case 4:\n              thongbao = _context5.sent;\n              thongbao.save().then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(respone) {\n                  var nhom;\n                  return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return Nhom.findById(_idnhom);\n\n                        case 2:\n                          nhom = _context4.sent;\n                          nhom.thongbaos.push(respone._id);\n                          nhom.save().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                            var thongbaos;\n                            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                              while (1) {\n                                switch (_context3.prev = _context3.next) {\n                                  case 0:\n                                    _context3.next = 2;\n                                    return ThongBao.find({\n                                      'nhom': _idnhom\n                                    });\n\n                                  case 2:\n                                    thongbaos = _context3.sent;\n                                    res.send({\n                                      thongbaos: thongbaos\n                                    });\n\n                                  case 4:\n                                  case \"end\":\n                                    return _context3.stop();\n                                }\n                              }\n                            }, _callee3);\n                          })));\n\n                        case 5:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x7) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              res.send(_context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n\n    function post(_x5, _x6) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body2, _idnhom, _idthongbao, thongbao, nhom, newThongbaos;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _req$body2 = req.body, _idnhom = _req$body2._idnhom, _idthongbao = _req$body2._idthongbao;\n              _context6.next = 4;\n              return ThongBao.findById(_idthongbao);\n\n            case 4:\n              thongbao = _context6.sent;\n              thongbao[\"delete\"]();\n              _context6.next = 8;\n              return Nhom.findById(_idnhom);\n\n            case 8:\n              nhom = _context6.sent;\n              newThongbaos = nhom.thongbaos.filter(function (x) {\n                return \"\".concat(x) != _idthongbao;\n              });\n              nhom.thongbaos = newThongbaos;\n              nhom.save();\n              res.end();\n              _context6.next = 18;\n              break;\n\n            case 15:\n              _context6.prev = 15;\n              _context6.t0 = _context6[\"catch\"](0);\n              res.send(_context6.t0);\n\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 15]]);\n    }));\n\n    function remove(_x8, _x9) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRob25nYmFvLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiVGhvbmdCYW8iLCJyZXF1aXJlIiwiTmhvbSIsInNob3J0aWQiLCJtZXRob2RzIiwiaW5kZXgiLCJyZXEiLCJyZXMiLCJmaW5kIiwicG9wdWxhdGUiLCJ0aG9uZ2JhbyIsInNlbmQiLCJ0aG9uZ0Jhb0N1YU5ob20iLCJfaWRuaG9tIiwicGFyYW1zIiwidGhvbmdiYW9zIiwicG9zdCIsImJvZHkiLCJub2lkdW5nIiwibmdheSIsImdpbyIsIm1hIiwiZ2VuZXJhdGUiLCJuaG9tIiwic2F2ZSIsInRoZW4iLCJyZXNwb25lIiwiZmluZEJ5SWQiLCJwdXNoIiwiX2lkIiwicmVtb3ZlIiwiX2lkdGhvbmdiYW8iLCJuZXdUaG9uZ2Jhb3MiLCJmaWx0ZXIiLCJ4IiwiZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsMEJBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsc0JBQUQsQ0FBbEI7O0FBQ0EsSUFBSUUsT0FBTyxHQUFHRixPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxPQUFPLEdBQUc7QUFDZkMsRUFBQUEsS0FBSztBQUFBLHlFQUFFLGlCQUFNQyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFDaUJQLFFBQVEsQ0FBQ1EsSUFBVCxHQUFnQkMsUUFBaEIsQ0FBeUIsTUFBekIsQ0FEakI7O0FBQUE7QUFDQUMsY0FBQUEsUUFEQTtBQUVOSCxjQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0QsUUFBVDs7QUFGTTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLEtBRFU7QUFLZkUsRUFBQUEsZUFBZTtBQUFBLG1GQUFHLGtCQUFPTixHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVRNLGNBQUFBLE9BRlMsR0FFRVAsR0FBRyxDQUFDUSxNQUZOLENBRVRELE9BRlM7QUFBQTtBQUFBLHFCQUdRYixRQUFRLENBQUNRLElBQVQsQ0FBYztBQUFDLHdCQUFPSztBQUFSLGVBQWQsQ0FIUjs7QUFBQTtBQUdWRSxjQUFBQSxTQUhVO0FBSWhCUixjQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0ksU0FBVDtBQUpnQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQU1oQlIsY0FBQUEsR0FBRyxDQUFDSSxJQUFKOztBQU5nQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFIOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLEtBTEE7QUFlZkssRUFBQUEsSUFBSTtBQUFBLHdFQUFHLGtCQUFPVixHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBRWlDRCxHQUFHLENBQUNXLElBRnJDLEVBRUVKLE9BRkYsYUFFRUEsT0FGRixFQUVXSyxPQUZYLGFBRVdBLE9BRlgsRUFFb0JDLElBRnBCLGFBRW9CQSxJQUZwQixFQUUwQkMsR0FGMUIsYUFFMEJBLEdBRjFCO0FBQUE7QUFBQSxxQkFHa0IsSUFBSXBCLFFBQUosQ0FBYTtBQUNuQ3FCLGdCQUFBQSxFQUFFLEVBQUVsQixPQUFPLENBQUNtQixRQUFSLEVBRCtCO0FBRW5DSixnQkFBQUEsT0FBTyxFQUFDQSxPQUYyQjtBQUduQ0MsZ0JBQUFBLElBQUksRUFBQ0EsSUFIOEI7QUFJbkNDLGdCQUFBQSxHQUFHLEVBQUNBLEdBSitCO0FBS25DRyxnQkFBQUEsSUFBSSxFQUFDVjtBQUw4QixlQUFiLENBSGxCOztBQUFBO0FBR0NILGNBQUFBLFFBSEQ7QUFVTEEsY0FBQUEsUUFBUSxDQUFDYyxJQUFULEdBQWdCQyxJQUFoQjtBQUFBLG1GQUFxQixrQkFBTUMsT0FBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlDQUNEeEIsSUFBSSxDQUFDeUIsUUFBTCxDQUFjZCxPQUFkLENBREM7O0FBQUE7QUFDZFUsMEJBQUFBLElBRGM7QUFFbkJBLDBCQUFBQSxJQUFJLENBQUNSLFNBQUwsQ0FBZWEsSUFBZixDQUFvQkYsT0FBTyxDQUFDRyxHQUE1QjtBQUNBTiwwQkFBQUEsSUFBSSxDQUFDQyxJQUFMLEdBQVlDLElBQVosdUVBQWlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMkNBQ1F6QixRQUFRLENBQUNRLElBQVQsQ0FBYztBQUFDLDhDQUFPSztBQUFSLHFDQUFkLENBRFI7O0FBQUE7QUFDVkUsb0NBQUFBLFNBRFU7QUFFaEJSLG9DQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFDSSxzQ0FBQUEsU0FBUyxFQUFDQTtBQUFYLHFDQUFUOztBQUZnQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwyQkFBakI7O0FBSG1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFyQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVZLO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBbUJMUixjQUFBQSxHQUFHLENBQUNJLElBQUo7O0FBbkJLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUg7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsS0FmVztBQXFDZm1CLEVBQUFBLE1BQU07QUFBQSwwRUFBRyxrQkFBT3hCLEdBQVAsRUFBWUMsR0FBWjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwyQkFJd0JELEdBQUcsQ0FBQ1csSUFKNUIsRUFJQUosT0FKQSxjQUlBQSxPQUpBLEVBSVNrQixXQUpULGNBSVNBLFdBSlQ7QUFBQTtBQUFBLHFCQUtnQi9CLFFBQVEsQ0FBQzJCLFFBQVQsQ0FBa0JJLFdBQWxCLENBTGhCOztBQUFBO0FBS0RyQixjQUFBQSxRQUxDO0FBTU5BLGNBQUFBLFFBQVEsVUFBUjtBQU5NO0FBQUEscUJBT1lSLElBQUksQ0FBQ3lCLFFBQUwsQ0FBY2QsT0FBZCxDQVBaOztBQUFBO0FBT0RVLGNBQUFBLElBUEM7QUFRQVMsY0FBQUEsWUFSQSxHQVFlVCxJQUFJLENBQUNSLFNBQUwsQ0FBZWtCLE1BQWYsQ0FBc0IsVUFBQUMsQ0FBQztBQUFBLHVCQUFHLFVBQUdBLENBQUgsS0FBVUgsV0FBYjtBQUFBLGVBQXZCLENBUmY7QUFTTlIsY0FBQUEsSUFBSSxDQUFDUixTQUFMLEdBQWlCaUIsWUFBakI7QUFDQVQsY0FBQUEsSUFBSSxDQUFDQyxJQUFMO0FBQ0RqQixjQUFBQSxHQUFHLENBQUM0QixHQUFKO0FBWE87QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFhUDVCLGNBQUFBLEdBQUcsQ0FBQ0ksSUFBSjs7QUFiTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFIOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBckNTLENBQWhCO0FBdURBeUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakMsT0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9jb250cm9sbGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgVGhvbmdCYW8gPSByZXF1aXJlKCcuLi9tb2RlbHMvdGhvbmdiYW8ubW9kZWwnKVxubGV0IE5ob20gPSByZXF1aXJlKCcuLi9tb2RlbHMvbmhvbS5tb2RlbCcpXG52YXIgc2hvcnRpZCA9IHJlcXVpcmUoJ3Nob3J0aWQnKTtcblxuY29uc3QgbWV0aG9kcyA9IHtcblx0aW5kZXg6IGFzeW5jKHJlcSwgcmVzKT0+e1x0XHRcblx0XHRjb25zdCB0aG9uZ2JhbyA9IGF3YWl0IFRob25nQmFvLmZpbmQoKS5wb3B1bGF0ZSgnbmhvbScpXHRcblx0XHRyZXMuc2VuZCh0aG9uZ2Jhbylcblx0fSxcblx0dGhvbmdCYW9DdWFOaG9tIDogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cdFx0dHJ5e1xuXHRcdFx0Y29uc3Qge19pZG5ob219ID0gcmVxLnBhcmFtc1xuXHRcdFx0Y29uc3QgdGhvbmdiYW9zID0gYXdhaXQgVGhvbmdCYW8uZmluZCh7J25ob20nOl9pZG5ob219KVxuXHRcdFx0cmVzLnNlbmQodGhvbmdiYW9zKVxuXHRcdH1jYXRjaChlcnIpe1xuXHRcdFx0cmVzLnNlbmQoZXJyKVxuXHRcdH1cblx0fSxcblxuXHRwb3N0IDogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cdFx0dHJ5e1xuXHRcdFx0Y29uc3Qge19pZG5ob20sIG5vaWR1bmcsIG5nYXksIGdpb30gPSByZXEuYm9keVxuXHRcdFx0Y29uc3QgdGhvbmdiYW8gPSBhd2FpdCBuZXcgVGhvbmdCYW8oe1xuXHRcdFx0XHRtYTogc2hvcnRpZC5nZW5lcmF0ZSgpLFxuXHRcdFx0XHRub2lkdW5nOm5vaWR1bmcsXG5cdFx0XHRcdG5nYXk6bmdheSxcblx0XHRcdFx0Z2lvOmdpbyxcblx0XHRcdFx0bmhvbTpfaWRuaG9tLFxuXHRcdFx0fSlcblx0XHRcdHRob25nYmFvLnNhdmUoKS50aGVuKGFzeW5jIHJlc3BvbmU9Pntcblx0XHRcdFx0Y29uc3QgbmhvbSA9IGF3YWl0IE5ob20uZmluZEJ5SWQoX2lkbmhvbSlcblx0XHRcdFx0XHRuaG9tLnRob25nYmFvcy5wdXNoKHJlc3BvbmUuX2lkKVxuXHRcdFx0XHRcdG5ob20uc2F2ZSgpLnRoZW4oYXN5bmMgKCk9Pntcblx0XHRcdFx0XHRcdGNvbnN0IHRob25nYmFvcyA9IGF3YWl0IFRob25nQmFvLmZpbmQoeyduaG9tJzpfaWRuaG9tfSlcdFx0XHRcblx0XHRcdFx0XHRcdHJlcy5zZW5kKHt0aG9uZ2Jhb3M6dGhvbmdiYW9zfSlcblx0XHRcdFx0XHR9KVxuXHRcdFx0fSlcdFx0XHRcblx0XHR9IGNhdGNoKGVycil7XG5cdFx0XHRyZXMuc2VuZChlcnIpXG5cdFx0fVxuXHR9LFx0XG5cdHJlbW92ZSA6IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuXHRcdC8vIHRob25nYmFvIC0+IG5ob21cblx0XHQvLyBuaG9tIC0+IHRob25nYmFvc1xuXHRcdHRyeXtcblx0XHRcdGNvbnN0IHtfaWRuaG9tLCBfaWR0aG9uZ2Jhb30gPSByZXEuYm9keVxuXHRcdFx0Y29uc3QgdGhvbmdiYW8gPSBhd2FpdCBUaG9uZ0Jhby5maW5kQnlJZChfaWR0aG9uZ2Jhbylcblx0XHRcdFx0dGhvbmdiYW8uZGVsZXRlKClcblx0XHRcdGNvbnN0IG5ob20gPSBhd2FpdCBOaG9tLmZpbmRCeUlkKF9pZG5ob20pXHRcdFx0XG5cdFx0XHRcdGNvbnN0IG5ld1Rob25nYmFvcyA9IG5ob20udGhvbmdiYW9zLmZpbHRlcih4PT4gYCR7eH1gICE9IF9pZHRob25nYmFvKVxuXHRcdFx0XHRuaG9tLnRob25nYmFvcyA9IG5ld1Rob25nYmFvc1xuXHRcdFx0XHRuaG9tLnNhdmUoKVxuXHRcdFx0cmVzLmVuZCgpXHRcdFx0XG5cdFx0fSBjYXRjaChlcnIpe1xuXHRcdFx0cmVzLnNlbmQoZXJyKVxuXHRcdH1cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1ldGhvZHMiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "thongbao.controller.js"
      ],
      "names": [
        "ThongBao",
        "require",
        "Nhom",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "thongbao",
        "send",
        "thongBaoCuaNhom",
        "_idnhom",
        "params",
        "thongbaos",
        "post",
        "body",
        "noidung",
        "ngay",
        "gio",
        "ma",
        "generate",
        "nhom",
        "save",
        "then",
        "respone",
        "findById",
        "push",
        "_id",
        "remove",
        "_idthongbao",
        "newThongbaos",
        "filter",
        "x",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMG,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBP,QAAQ,CAACQ,IAAT,GAAgBC,QAAhB,CAAyB,MAAzB,CADjB;;AAAA;AACAC,cAAAA,QADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAASD,QAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKfE,EAAAA,eAAe;AAAA,mFAAG,kBAAON,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAETM,cAAAA,OAFS,GAEEP,GAAG,CAACQ,MAFN,CAETD,OAFS;AAAA;AAAA,qBAGQb,QAAQ,CAACQ,IAAT,CAAc;AAAC,wBAAOK;AAAR,eAAd,CAHR;;AAAA;AAGVE,cAAAA,SAHU;AAIhBR,cAAAA,GAAG,CAACI,IAAJ,CAASI,SAAT;AAJgB;AAAA;;AAAA;AAAA;AAAA;AAMhBR,cAAAA,GAAG,CAACI,IAAJ;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALA;AAefK,EAAAA,IAAI;AAAA,wEAAG,kBAAOV,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEiCD,GAAG,CAACW,IAFrC,EAEEJ,OAFF,aAEEA,OAFF,EAEWK,OAFX,aAEWA,OAFX,EAEoBC,IAFpB,aAEoBA,IAFpB,EAE0BC,GAF1B,aAE0BA,GAF1B;AAAA;AAAA,qBAGkB,IAAIpB,QAAJ,CAAa;AACnCqB,gBAAAA,EAAE,EAAElB,OAAO,CAACmB,QAAR,EAD+B;AAEnCJ,gBAAAA,OAAO,EAACA,OAF2B;AAGnCC,gBAAAA,IAAI,EAACA,IAH8B;AAInCC,gBAAAA,GAAG,EAACA,GAJ+B;AAKnCG,gBAAAA,IAAI,EAACV;AAL8B,eAAb,CAHlB;;AAAA;AAGCH,cAAAA,QAHD;AAULA,cAAAA,QAAQ,CAACc,IAAT,GAAgBC,IAAhB;AAAA,mFAAqB,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACDxB,IAAI,CAACyB,QAAL,CAAcd,OAAd,CADC;;AAAA;AACdU,0BAAAA,IADc;AAEnBA,0BAAAA,IAAI,CAACR,SAAL,CAAea,IAAf,CAAoBF,OAAO,CAACG,GAA5B;AACAN,0BAAAA,IAAI,CAACC,IAAL,GAAYC,IAAZ,uEAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQzB,QAAQ,CAACQ,IAAT,CAAc;AAAC,8CAAOK;AAAR,qCAAd,CADR;;AAAA;AACVE,oCAAAA,SADU;AAEhBR,oCAAAA,GAAG,CAACI,IAAJ,CAAS;AAACI,sCAAAA,SAAS,EAACA;AAAX,qCAAT;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAjB;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB;;AAAA;AAAA;AAAA;AAAA;AAVK;AAAA;;AAAA;AAAA;AAAA;AAmBLR,cAAAA,GAAG,CAACI,IAAJ;;AAnBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAfW;AAqCfmB,EAAAA,MAAM;AAAA,0EAAG,kBAAOxB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAIwBD,GAAG,CAACW,IAJ5B,EAIAJ,OAJA,cAIAA,OAJA,EAISkB,WAJT,cAISA,WAJT;AAAA;AAAA,qBAKgB/B,QAAQ,CAAC2B,QAAT,CAAkBI,WAAlB,CALhB;;AAAA;AAKDrB,cAAAA,QALC;AAMNA,cAAAA,QAAQ,UAAR;AANM;AAAA,qBAOYR,IAAI,CAACyB,QAAL,CAAcd,OAAd,CAPZ;;AAAA;AAODU,cAAAA,IAPC;AAQAS,cAAAA,YARA,GAQeT,IAAI,CAACR,SAAL,CAAekB,MAAf,CAAsB,UAAAC,CAAC;AAAA,uBAAG,UAAGA,CAAH,KAAUH,WAAb;AAAA,eAAvB,CARf;AASNR,cAAAA,IAAI,CAACR,SAAL,GAAiBiB,YAAjB;AACAT,cAAAA,IAAI,CAACC,IAAL;AACDjB,cAAAA,GAAG,CAAC4B,GAAJ;AAXO;AAAA;;AAAA;AAAA;AAAA;AAaP5B,cAAAA,GAAG,CAACI,IAAJ;;AAbO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AArCS,CAAhB;AAuDAyB,MAAM,CAACC,OAAP,GAAiBjC,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let ThongBao = require('../models/thongbao.model')\nlet Nhom = require('../models/nhom.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async(req, res)=>{\t\t\n\t\tconst thongbao = await ThongBao.find().populate('nhom')\t\n\t\tres.send(thongbao)\n\t},\n\tthongBaoCuaNhom : async (req, res) => {\n\t\ttry{\n\t\t\tconst {_idnhom} = req.params\n\t\t\tconst thongbaos = await ThongBao.find({'nhom':_idnhom})\n\t\t\tres.send(thongbaos)\n\t\t}catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\n\tpost : async (req, res) => {\n\t\ttry{\n\t\t\tconst {_idnhom, noidung, ngay, gio} = req.body\n\t\t\tconst thongbao = await new ThongBao({\n\t\t\t\tma: shortid.generate(),\n\t\t\t\tnoidung:noidung,\n\t\t\t\tngay:ngay,\n\t\t\t\tgio:gio,\n\t\t\t\tnhom:_idnhom,\n\t\t\t})\n\t\t\tthongbao.save().then(async respone=>{\n\t\t\t\tconst nhom = await Nhom.findById(_idnhom)\n\t\t\t\t\tnhom.thongbaos.push(respone._id)\n\t\t\t\t\tnhom.save().then(async ()=>{\n\t\t\t\t\t\tconst thongbaos = await ThongBao.find({'nhom':_idnhom})\t\t\t\n\t\t\t\t\t\tres.send({thongbaos:thongbaos})\n\t\t\t\t\t})\n\t\t\t})\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\t\n\tremove : async (req, res) => {\n\t\t// thongbao -> nhom\n\t\t// nhom -> thongbaos\n\t\ttry{\n\t\t\tconst {_idnhom, _idthongbao} = req.body\n\t\t\tconst thongbao = await ThongBao.findById(_idthongbao)\n\t\t\t\tthongbao.delete()\n\t\t\tconst nhom = await Nhom.findById(_idnhom)\t\t\t\n\t\t\t\tconst newThongbaos = nhom.thongbaos.filter(x=> `${x}` != _idthongbao)\n\t\t\t\tnhom.thongbaos = newThongbaos\n\t\t\t\tnhom.save()\n\t\t\tres.end()\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1609509845773
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/baithi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/baithi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/baithi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/baithi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "baithi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _baithi = _interopRequireDefault(require(\"../controllers/baithi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/detail/:_idbaithi', _baithi[\"default\"].detail);\nrouter.post('/create', _baithi[\"default\"].createBaiThi);\nrouter.post('/nop-bai', _baithi[\"default\"].nopbai);\nrouter.post('/check', _baithi[\"default\"].check);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaXRoaS5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImNvbnRyb2xsZXJzIiwiZGV0YWlsIiwicG9zdCIsImNyZWF0ZUJhaVRoaSIsIm5vcGJhaSIsImNoZWNrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ0MsbUJBQVlDLE1BQTdDO0FBRUFKLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFNBQVosRUFBdUJGLG1CQUFZRyxZQUFuQztBQUVBTixNQUFNLENBQUNLLElBQVAsQ0FBWSxVQUFaLEVBQXdCRixtQkFBWUksTUFBcEM7QUFFQVAsTUFBTSxDQUFDSyxJQUFQLENBQVksUUFBWixFQUFzQkYsbUJBQVlLLEtBQWxDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG5pbXBvcnQgY29udHJvbGxlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvYmFpdGhpLmNvbnRyb2xsZXInXG5cbnJvdXRlci5nZXQoJy9kZXRhaWwvOl9pZGJhaXRoaScsIGNvbnRyb2xsZXJzLmRldGFpbClcblxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBjb250cm9sbGVycy5jcmVhdGVCYWlUaGkpXG5cbnJvdXRlci5wb3N0KCcvbm9wLWJhaScsIGNvbnRyb2xsZXJzLm5vcGJhaSlcblxucm91dGVyLnBvc3QoJy9jaGVjaycsIGNvbnRyb2xsZXJzLmNoZWNrKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "baithi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "detail",
        "post",
        "createBaiThi",
        "nopbai",
        "check",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,oBAAX,EAAiCC,mBAAYC,MAA7C;AAEAJ,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBF,mBAAYG,YAAnC;AAEAN,MAAM,CAACK,IAAP,CAAY,UAAZ,EAAwBF,mBAAYI,MAApC;AAEAP,MAAM,CAACK,IAAP,CAAY,QAAZ,EAAsBF,mBAAYK,KAAlC;AAEAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/baithi.controller'\n\nrouter.get('/detail/:_idbaithi', controllers.detail)\n\nrouter.post('/create', controllers.createBaiThi)\n\nrouter.post('/nop-bai', controllers.nopbai)\n\nrouter.post('/check', controllers.check)\n\nmodule.exports = router\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1607943125840
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/baithi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/baithi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/baithi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/baithi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "baithi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar BaiThi = require('../models/baithi.model');\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar PhuongAn = require('../models/phuongan.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  // index: async (req, res)=>{\n  // \tconst cauhoi = await CauHoi.find().populate('mon')\n  // \tres.send(cauhoi)\n  // },\n  check: function () {\n    var _check = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var _req$body, dethi, kithi, sinhvien, baithi_check;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _req$body = req.body, dethi = _req$body.dethi, kithi = _req$body.kithi, sinhvien = _req$body.sinhvien;\n              _context.next = 4;\n              return BaiThi.find({\n                'kithi._id': kithi._id,\n                'dethi._id': dethi._id,\n                'sinhvien': sinhvien\n              });\n\n            case 4:\n              baithi_check = _context.sent;\n\n              if (baithi_check.length <= 0) {\n                res.send({\n                  result: false\n                });\n              } else {\n                res.send({\n                  result: true\n                });\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              res.send(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    function check(_x, _x2) {\n      return _check.apply(this, arguments);\n    }\n\n    return check;\n  }(),\n  createBaiThi: function () {\n    var _createBaiThi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$body2, dethi, kithi, thoigian, tgbd, tgkt, sinhvien, ngay, baithi, result_baithi, taikhoan, count;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _req$body2 = req.body, dethi = _req$body2.dethi, kithi = _req$body2.kithi, thoigian = _req$body2.thoigian, tgbd = _req$body2.tgbd, tgkt = _req$body2.tgkt, sinhvien = _req$body2.sinhvien, ngay = _req$body2.ngay;\n              _context3.next = 4;\n              return new BaiThi({\n                ma: shortid.generate(),\n                kithi: {\n                  '_id': kithi._id,\n                  'tieude': kithi.tieude\n                },\n                dethi: {\n                  '_id': dethi._id,\n                  'tieude': dethi.tieude\n                },\n                thoigian: thoigian,\n                tgbd: tgbd,\n                tgkt: tgkt,\n                sinhvien: sinhvien,\n                ngay: ngay\n              });\n\n            case 4:\n              baithi = _context3.sent;\n              _context3.next = 7;\n              return baithi.save();\n\n            case 7:\n              result_baithi = _context3.sent;\n              _context3.next = 10;\n              return TaiKhoan.findById(sinhvien);\n\n            case 10:\n              taikhoan = _context3.sent;\n              taikhoan.baithis.push(result_baithi._id);\n              taikhoan.save();\n\n              if (dethi.cauhois.length > 0) {\n                count = 0;\n                dethi.cauhois.forEach( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(ch) {\n                    var cauhoi;\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return CauHoi.findById(ch);\n\n                          case 2:\n                            cauhoi = _context2.sent;\n                            cauhoi.baithis.push(result_baithi._id);\n\n                            if (cauhoi) {\n                              cauhoi.save();\n                              count++;\n                              result_baithi.cauhois.push(ch); // save id cau hoi  ->  bailam cauhois\t\t\t\t\t\t\t\t\t\t\t\t\n\n                              if (count === dethi.cauhois.length) {\n                                result_baithi.save();\n                                res.send({\n                                  result_baithi: result_baithi\n                                });\n                              }\n                            }\n\n                          case 5:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x5) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()); //result_baithi.save()\n                //res.send({result_baithi:result_baithi})\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 16]]);\n    }));\n\n    function createBaiThi(_x3, _x4) {\n      return _createBaiThi.apply(this, arguments);\n    }\n\n    return createBaiThi;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _idbaithi, baithi;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _idbaithi = req.params._idbaithi;\n              _context4.next = 4;\n              return BaiThi.findById(_idbaithi).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 4:\n              baithi = _context4.sent;\n              res.send(baithi);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              res.send(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    function detail(_x6, _x7) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  nopbai: function () {\n    var _nopbai = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _req$body3, _idbaithi, tgnb, dung, phuongans, baithi;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _req$body3 = req.body, _idbaithi = _req$body3._idbaithi, tgnb = _req$body3.tgnb, dung = _req$body3.dung, phuongans = _req$body3.phuongans; // phuongans => phuongan // {cauhoi:_idcauhoi, phuongan:{....}}\n\n              _context5.next = 4;\n              return BaiThi.findById(_idbaithi);\n\n            case 4:\n              baithi = _context5.sent;\n              phuongans.forEach(function (phuongan) {\n                baithi.phuongans.push(phuongan.phuongan._id);\n              });\n              baithi.tgnb = tgnb;\n              baithi.dung = dung;\n              baithi.sai = baithi.cauhois.length - dung;\n              baithi.diem = 10 / baithi.cauhois.length * dung;\n              baithi.save();\n              _context5.next = 16;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](0);\n              res.send(_context5.t0);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 13]]);\n    }));\n\n    function nopbai(_x8, _x9) {\n      return _nopbai.apply(this, arguments);\n    }\n\n    return nopbai;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "baithi.controller.js"
      ],
      "names": [
        "BaiThi",
        "require",
        "CauHoi",
        "PhuongAn",
        "TaiKhoan",
        "shortid",
        "methods",
        "check",
        "req",
        "res",
        "body",
        "dethi",
        "kithi",
        "sinhvien",
        "find",
        "_id",
        "baithi_check",
        "length",
        "send",
        "result",
        "createBaiThi",
        "thoigian",
        "tgbd",
        "tgkt",
        "ngay",
        "ma",
        "generate",
        "tieude",
        "baithi",
        "save",
        "result_baithi",
        "findById",
        "taikhoan",
        "baithis",
        "push",
        "cauhois",
        "count",
        "forEach",
        "ch",
        "cauhoi",
        "detail",
        "_idbaithi",
        "params",
        "populate",
        "path",
        "model",
        "nopbai",
        "tgnb",
        "dung",
        "phuongans",
        "phuongan",
        "sai",
        "diem",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMK,OAAO,GAAG;AACf;AACA;AACA;AACA;AACAC,EAAAA,KAAK;AAAA,yEAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAE2BD,GAAG,CAACE,IAF/B,EAECC,KAFD,aAECA,KAFD,EAEQC,KAFR,aAEQA,KAFR,EAEeC,QAFf,aAEeA,QAFf;AAAA;AAAA,qBAGqBb,MAAM,CAACc,IAAP,CAAY;AAAC,6BAAYF,KAAK,CAACG,GAAnB;AAAuB,6BAAYJ,KAAK,CAACI,GAAzC;AAA6C,4BAAWF;AAAxD,eAAZ,CAHrB;;AAAA;AAGAG,cAAAA,YAHA;;AAIN,kBAAIA,YAAY,CAACC,MAAb,IAAqB,CAAzB,EAA2B;AAC1BR,gBAAAA,GAAG,CAACS,IAAJ,CAAS;AAACC,kBAAAA,MAAM,EAAC;AAAR,iBAAT;AACA,eAFD,MAEO;AACNV,gBAAAA,GAAG,CAACS,IAAJ,CAAS;AAACC,kBAAAA,MAAM,EAAC;AAAR,iBAAT;AACA;;AARK;AAAA;;AAAA;AAAA;AAAA;AAUNV,cAAAA,GAAG,CAACS,IAAJ;;AAVM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALU;AAkBfE,EAAAA,YAAY;AAAA,gFAAG,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEgDD,GAAG,CAACE,IAFpD,EAENC,KAFM,cAENA,KAFM,EAECC,KAFD,cAECA,KAFD,EAEQS,QAFR,cAEQA,QAFR,EAEkBC,IAFlB,cAEkBA,IAFlB,EAEwBC,IAFxB,cAEwBA,IAFxB,EAE8BV,QAF9B,cAE8BA,QAF9B,EAEwCW,IAFxC,cAEwCA,IAFxC;AAAA;AAAA,qBAIQ,IAAIxB,MAAJ,CAAW;AAC/ByB,gBAAAA,EAAE,EAACpB,OAAO,CAACqB,QAAR,EAD4B;AAE/Bd,gBAAAA,KAAK,EAAE;AAAC,yBAAMA,KAAK,CAACG,GAAb;AAAiB,4BAASH,KAAK,CAACe;AAAhC,iBAFwB;AAG/BhB,gBAAAA,KAAK,EAAE;AAAC,yBAAMA,KAAK,CAACI,GAAb;AAAiB,4BAASJ,KAAK,CAACgB;AAAhC,iBAHwB;AAI/BN,gBAAAA,QAAQ,EAAEA,QAJqB;AAK/BC,gBAAAA,IAAI,EAAEA,IALyB;AAM/BC,gBAAAA,IAAI,EAAEA,IANyB;AAO/BV,gBAAAA,QAAQ,EAAEA,QAPqB;AAQ/BW,gBAAAA,IAAI,EAACA;AAR0B,eAAX,CAJR;;AAAA;AAIPI,cAAAA,MAJO;AAAA;AAAA,qBAgBeA,MAAM,CAACC,IAAP,EAhBf;;AAAA;AAgBPC,cAAAA,aAhBO;AAAA;AAAA,qBAkBU1B,QAAQ,CAAC2B,QAAT,CAAkBlB,QAAlB,CAlBV;;AAAA;AAkBPmB,cAAAA,QAlBO;AAmBZA,cAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAjB,CAAsBJ,aAAa,CAACf,GAApC;AACAiB,cAAAA,QAAQ,CAACH,IAAT;;AACD,kBAAIlB,KAAK,CAACwB,OAAN,CAAclB,MAAd,GAAuB,CAA3B,EAA6B;AACxBmB,gBAAAA,KADwB,GAChB,CADgB;AAE5BzB,gBAAAA,KAAK,CAACwB,OAAN,CAAcE,OAAd;AAAA,qFAAsB,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEApC,MAAM,CAAC6B,QAAP,CAAgBO,EAAhB,CAFA;;AAAA;AAEfC,4BAAAA,MAFe;AAGpBA,4BAAAA,MAAM,CAACN,OAAP,CAAeC,IAAf,CAAoBJ,aAAa,CAACf,GAAlC;;AACA,gCAAIwB,MAAJ,EAAW;AACVA,8BAAAA,MAAM,CAACV,IAAP;AACAO,8BAAAA,KAAK;AACLN,8BAAAA,aAAa,CAACK,OAAd,CAAsBD,IAAtB,CAA2BI,EAA3B,EAHU,CAKV;;AACA,kCAAIF,KAAK,KAAKzB,KAAK,CAACwB,OAAN,CAAclB,MAA5B,EAAoC;AACnCa,gCAAAA,aAAa,CAACD,IAAd;AACApB,gCAAAA,GAAG,CAACS,IAAJ,CAAS;AAACY,kCAAAA,aAAa,EAACA;AAAf,iCAAT;AACA;AACD;;AAdmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA,qBAF4B,CAkB5B;AACA;AACC;;AAzCW;AAAA;;AAAA;AAAA;AAAA;AA6CbrB,cAAAA,GAAG,CAACS,IAAJ;;AA7Ca;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlBG;AAmEfsB,EAAAA,MAAM;AAAA,0EAAG,kBAAOhC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAgC,cAAAA,SAFA,GAEajC,GAAG,CAACkC,MAFjB,CAEAD,SAFA;AAAA;AAAA,qBAGczC,MAAM,CAAC+B,QAAP,CAAgBU,SAAhB,EAA2BE,QAA3B,CAAoC;AACxDC,gBAAAA,IAAI,EAAG,SADiD;AAExDC,gBAAAA,KAAK,EAAE,QAFiD;AAGxDF,gBAAAA,QAAQ,EAAG;AACVC,kBAAAA,IAAI,EAAG,WADG;AAEVC,kBAAAA,KAAK,EAAG;AAFE;AAH6C,eAApC,CAHd;;AAAA;AAGDjB,cAAAA,MAHC;AAWPnB,cAAAA,GAAG,CAACS,IAAJ,CAASU,MAAT;AAXO;AAAA;;AAAA;AAAA;AAAA;AAaPnB,cAAAA,GAAG,CAACS,IAAJ;;AAbO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAnES;AAmFf4B,EAAAA,MAAM;AAAA,0EAAG,kBAAOtC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEoCD,GAAG,CAACE,IAFxC,EAEA+B,SAFA,cAEAA,SAFA,EAEWM,IAFX,cAEWA,IAFX,EAEiBC,IAFjB,cAEiBA,IAFjB,EAEuBC,SAFvB,cAEuBA,SAFvB,EAGP;;AAHO;AAAA,qBAIcjD,MAAM,CAAC+B,QAAP,CAAgBU,SAAhB,CAJd;;AAAA;AAIDb,cAAAA,MAJC;AAKNqB,cAAAA,SAAS,CAACZ,OAAV,CAAkB,UAAAa,QAAQ,EAAE;AAC3BtB,gBAAAA,MAAM,CAACqB,SAAP,CAAiBf,IAAjB,CAAsBgB,QAAQ,CAACA,QAAT,CAAkBnC,GAAxC;AACA,eAFD;AAGAa,cAAAA,MAAM,CAACmB,IAAP,GAAcA,IAAd;AACAnB,cAAAA,MAAM,CAACoB,IAAP,GAAcA,IAAd;AACApB,cAAAA,MAAM,CAACuB,GAAP,GAAavB,MAAM,CAACO,OAAP,CAAelB,MAAf,GAAwB+B,IAArC;AACApB,cAAAA,MAAM,CAACwB,IAAP,GAAe,KAAGxB,MAAM,CAACO,OAAP,CAAelB,MAAnB,GAA2B+B,IAAzC;AACApB,cAAAA,MAAM,CAACC,IAAP;AAZM;AAAA;;AAAA;AAAA;AAAA;AAgBPpB,cAAAA,GAAG,CAACS,IAAJ;;AAhBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAnFS,CAAhB;AAwGAmC,MAAM,CAACC,OAAP,GAAiBhD,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let BaiThi = require('../models/baithi.model')\nlet CauHoi = require('../models/cauhoi.model')\nlet PhuongAn = require('../models/phuongan.model')\nlet TaiKhoan = require('../models/taikhoan.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\t// index: async (req, res)=>{\n\t// \tconst cauhoi = await CauHoi.find().populate('mon')\n\t// \tres.send(cauhoi)\n\t// },\n\tcheck : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {dethi, kithi, sinhvien} = req.body\t\t\t\t\t\t\n\t\t\tconst baithi_check = await BaiThi.find({'kithi._id':kithi._id,'dethi._id':dethi._id,'sinhvien':sinhvien})\n\t\t\tif (baithi_check.length<=0){\n\t\t\t\tres.send({result:false})\n\t\t\t} else {\t\t\t\t\n\t\t\t\tres.send({result:true})\n\t\t\t}\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tcreateBaiThi : async (req, res)=>{\t\t\n\t\ttry{\n\t\t\tconst {dethi, kithi, thoigian, tgbd, tgkt, sinhvien, ngay} = req.body\n\t\t\t\t\t\t\t\n\t\t\tconst baithi = await new BaiThi({\n\t\t\t\tma:shortid.generate(),\n\t\t\t\tkithi: {'_id':kithi._id,'tieude':kithi.tieude},\n\t\t\t\tdethi: {'_id':dethi._id,'tieude':dethi.tieude},\n\t\t\t\tthoigian: thoigian,\n\t\t\t\ttgbd: tgbd,\n\t\t\t\ttgkt: tgkt,\n\t\t\t\tsinhvien: sinhvien,\n\t\t\t\tngay:ngay\t\t\t\t\t\t\t\n\t\t\t})\n\n\t\t\t//res.send({result_baithi:true})\n\t\t\tconst result_baithi = await baithi.save()\n\n\t\t\tconst taikhoan = await TaiKhoan.findById(sinhvien)\n\t\t\t\ttaikhoan.baithis.push(result_baithi._id)\n\t\t\t\ttaikhoan.save()\n\t\t\tif (dethi.cauhois.length > 0){\t\t\t\t\n\t\t\t\tlet count = 0\n\t\t\t\tdethi.cauhois.forEach(async ch=>{\t\t\t\t\t\n\t\t\t\t\t//count++\n\t\t\t\t\tconst cauhoi = await CauHoi.findById(ch)\n\t\t\t\t\t\tcauhoi.baithis.push(result_baithi._id)\t\t\t\t\t\t\n\t\t\t\t\t\tif (cauhoi){\n\t\t\t\t\t\t\tcauhoi.save()\n\t\t\t\t\t\t\tcount++\n\t\t\t\t\t\t\tresult_baithi.cauhois.push(ch)\t\t\t\t\t\n\n\t\t\t\t\t\t\t// save id cau hoi  ->  bailam cauhois\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (count === dethi.cauhois.length ){\n\t\t\t\t\t\t\t\tresult_baithi.save(\t)\n\t\t\t\t\t\t\t\tres.send({result_baithi:result_baithi})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t//result_baithi.save()\n\t\t\t\t//res.send({result_baithi:result_baithi})\n\t\t\t\t}\t\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\n\tdetail : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idbaithi} = req.params\n\t\t\tconst baithi = await BaiThi.findById(_idbaithi).populate({\n\t\t\t\tpath : 'cauhois',\n\t\t\t\tmodel: 'CauHoi',\n\t\t\t\tpopulate : {\n\t\t\t\t\tpath : 'phuongans',\n\t\t\t\t\tmodel : 'PhuongAn'\n\t\t\t\t}\n\t\t\t})\n\t\t\tres.send(baithi)\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t},\n\tnopbai : async (req, res)=>{\n\t\ttry{\n\t\t\tconst {_idbaithi, tgnb, dung, phuongans} = req.body\n\t\t\t// phuongans => phuongan // {cauhoi:_idcauhoi, phuongan:{....}}\n\t\t\tconst baithi = await BaiThi.findById(_idbaithi)\n\t\t\t\tphuongans.forEach(phuongan=>{\n\t\t\t\t\tbaithi.phuongans.push(phuongan.phuongan._id)\n\t\t\t\t})\n\t\t\t\tbaithi.tgnb = tgnb\n\t\t\t\tbaithi.dung = dung\n\t\t\t\tbaithi.sai = baithi.cauhois.length - dung\t\t\t\t\n\t\t\t\tbaithi.diem = (10/baithi.cauhois.length)*dung\n\t\t\t\tbaithi.save()\n\n\n\t\t} catch(err){\n\t\t\tres.send(err)\n\t\t}\n\t}\n}\n\nmodule.exports = methods\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1608002784332
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/cauhoibaithi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/cauhoibaithi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/cauhoibaithi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/cauhoibaithi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "cauhoibaithi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cauhoibaithi = _interopRequireDefault(require(\"../controllers/cauhoibaithi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _cauhoibaithi[\"default\"].index); // cau hoi cua mon\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaWJhaXRoaS5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0FBSEEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBSUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLHlCQUFZQyxLQUE1QixFLENBRUE7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG5pbXBvcnQgY29udHJvbGxlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvY2F1aG9pYmFpdGhpLmNvbnRyb2xsZXInXG5cbnJvdXRlci5nZXQoJy8nLCBjb250cm9sbGVycy5pbmRleClcblxuLy8gY2F1IGhvaSBjdWEgbW9uXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "cauhoibaithi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,yBAAYC,KAA5B,E,CAEA;;AAEAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/cauhoibaithi.controller'\n\nrouter.get('/', controllers.index)\n\n// cau hoi cua mon\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1607496424793
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/cauhoibaithi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/cauhoibaithi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/cauhoibaithi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/cauhoibaithi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "cauhoibaithi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CauHoiBaiThi = require('../models/cauhoi_baithi.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var cauhoi;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return CauHoiBaiThi.find();\n\n            case 2:\n              cauhoi = _context.sent;\n              res.send(cauhoi);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaWJhaXRoaS5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIkNhdUhvaUJhaVRoaSIsInJlcXVpcmUiLCJzaG9ydGlkIiwibWV0aG9kcyIsImluZGV4IiwicmVxIiwicmVzIiwiZmluZCIsImNhdWhvaSIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQywrQkFBRCxDQUExQjs7QUFFQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUVBLElBQU1FLE9BQU8sR0FBRztBQUNmQyxFQUFBQSxLQUFLO0FBQUEseUVBQUUsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQUNlTixZQUFZLENBQUNPLElBQWIsRUFEZjs7QUFBQTtBQUNBQyxjQUFBQSxNQURBO0FBRU5GLGNBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxNQUFUOztBQUZNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFEVSxDQUFoQjtBQU9BRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE9BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2QvY29udHJvbGxlcnMvIiwic291cmNlc0NvbnRlbnQiOlsibGV0IENhdUhvaUJhaVRoaSA9IHJlcXVpcmUoJy4uL21vZGVscy9jYXVob2lfYmFpdGhpLm1vZGVsJylcblxudmFyIHNob3J0aWQgPSByZXF1aXJlKCdzaG9ydGlkJyk7XG5cbmNvbnN0IG1ldGhvZHMgPSB7XG5cdGluZGV4OiBhc3luYyAocmVxLCByZXMpPT57XG5cdFx0Y29uc3QgY2F1aG9pID0gYXdhaXQgQ2F1SG9pQmFpVGhpLmZpbmQoKVxuXHRcdHJlcy5zZW5kKGNhdWhvaSlcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1ldGhvZHMiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cauhoibaithi.controller.js"
      ],
      "names": [
        "CauHoiBaiThi",
        "require",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "cauhoi",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,+BAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAME,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeN,YAAY,CAACO,IAAb,EADf;;AAAA;AACAC,cAAAA,MADA;AAENF,cAAAA,GAAG,CAACG,IAAJ,CAASD,MAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADU,CAAhB;AAOAE,MAAM,CAACC,OAAP,GAAiBR,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let CauHoiBaiThi = require('../models/cauhoi_baithi.model')\n\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async (req, res)=>{\n\t\tconst cauhoi = await CauHoiBaiThi.find()\n\t\tres.send(cauhoi)\n\t}\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1607496389465
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/cauhoi_baithi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/cauhoi_baithi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/cauhoi_baithi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/cauhoi_baithi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "cauhoi_baithi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  tieude: String,\n  noidung: String,\n  phuonganbaithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"PhuongAn\"\n  }],\n  bailams: [{\n    type: Schema.Types.ObjectId,\n    ref: \"BaiLam\"\n  }]\n});\nvar CauHoiBaiThi = mongoose.model('CauHoiBaiThi', schema);\nmodule.exports = CauHoiBaiThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaV9iYWl0aGkubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwic2NoZW1hIiwidGlldWRlIiwiU3RyaW5nIiwibm9pZHVuZyIsInBodW9uZ2FuYmFpdGhpcyIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiYmFpbGFtcyIsIkNhdUhvaUJhaVRoaSIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF0QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFFcEJFLEVBQUFBLE1BQU0sRUFBRUMsTUFGWTtBQUdwQkMsRUFBQUEsT0FBTyxFQUFFRCxNQUhXO0FBS3BCRSxFQUFBQSxlQUFlLEVBQUMsQ0FBQztBQUNiQyxJQUFBQSxJQUFJLEVBQUNOLE1BQU0sQ0FBQ08sS0FBUCxDQUFhQyxRQURMO0FBRWJDLElBQUFBLEdBQUcsRUFBQztBQUZTLEdBQUQsQ0FMSTtBQVVwQkMsRUFBQUEsT0FBTyxFQUFDLENBQUM7QUFDTEosSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEYjtBQUVMQyxJQUFBQSxHQUFHLEVBQUM7QUFGQyxHQUFEO0FBVlksQ0FBWCxDQUFiO0FBaUJBLElBQUlFLFlBQVksR0FBR2IsUUFBUSxDQUFDYyxLQUFULENBQWUsY0FBZixFQUErQlgsTUFBL0IsQ0FBbkI7QUFFQVksTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxZQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5cbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcblxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICAgICAgICBcbiAgICB0aWV1ZGU6IFN0cmluZyxcbiAgICBub2lkdW5nOiBTdHJpbmcsICAgIFxuICAgIFxuICAgIHBodW9uZ2FuYmFpdGhpczpbe1xuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOlwiUGh1b25nQW5cIlxuICAgIH1dLFxuIFx0XG4gICAgYmFpbGFtczpbe1xuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOlwiQmFpTGFtXCJcbiAgICB9XSxcblxufSlcblxudmFyIENhdUhvaUJhaVRoaSA9IG1vbmdvb3NlLm1vZGVsKCdDYXVIb2lCYWlUaGknLCBzY2hlbWEpXG5cbm1vZHVsZS5leHBvcnRzID0gQ2F1SG9pQmFpVGhpIl19",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi_baithi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "tieude",
        "String",
        "noidung",
        "phuonganbaithis",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "bailams",
        "CauHoiBaiThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,MAAM,EAAEC,MAFY;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAKpBE,EAAAA,eAAe,EAAC,CAAC;AACbC,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADL;AAEbC,IAAAA,GAAG,EAAC;AAFS,GAAD,CALI;AAUpBC,EAAAA,OAAO,EAAC,CAAC;AACLJ,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD;AAVY,CAAX,CAAb;AAiBA,IAAIE,YAAY,GAAGb,QAAQ,CAACc,KAAT,CAAe,cAAf,EAA+BX,MAA/B,CAAnB;AAEAY,MAAM,CAACC,OAAP,GAAiBH,YAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n        \n    tieude: String,\n    noidung: String,    \n    \n    phuonganbaithis:[{\n        type:Schema.Types.ObjectId,\n        ref:\"PhuongAn\"\n    }],\n \t\n    bailams:[{\n        type:Schema.Types.ObjectId,\n        ref:\"BaiLam\"\n    }],\n\n})\n\nvar CauHoiBaiThi = mongoose.model('CauHoiBaiThi', schema)\n\nmodule.exports = CauHoiBaiThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1607496332148
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/phuonganbaithi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/phuonganbaithi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/phuonganbaithi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/phuonganbaithi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "phuonganbaithi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _phuonganbaithi = _interopRequireDefault(require(\"../controllers/phuonganbaithi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _phuonganbaithi[\"default\"].index); // cau hoi cua mon\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuYmFpdGhpLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBR0E7Ozs7QUFIQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFJQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkMsMkJBQVlDLEtBQTVCLEUsQ0FFQTs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy9waHVvbmdhbmJhaXRoaS5jb250cm9sbGVyJ1xuXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXG5cbi8vIGNhdSBob2kgY3VhIG1vblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phuonganbaithi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,2BAAYC,KAA5B,E,CAEA;;AAEAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/phuonganbaithi.controller'\n\nrouter.get('/', controllers.index)\n\n// cau hoi cua mon\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1607496526614
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/phuonganbaithi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/phuonganbaithi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/phuonganbaithi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/phuonganbaithi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "phuonganbaithi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar PhuongAnBaiThi = require('../models/phuongan_baithi.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var phuongan;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return PhuongAnBaiThi.find();\n\n            case 2:\n              phuongan = _context.sent;\n              res.send(phuongan);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuYmFpdGhpLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUGh1b25nQW5CYWlUaGkiLCJyZXF1aXJlIiwic2hvcnRpZCIsIm1ldGhvZHMiLCJpbmRleCIsInJlcSIsInJlcyIsImZpbmQiLCJwaHVvbmdhbiIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxpQ0FBRCxDQUE1Qjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUVBLElBQU1FLE9BQU8sR0FBRztBQUNmQyxFQUFBQSxLQUFLO0FBQUEseUVBQUUsaUJBQU1DLEdBQU4sRUFBV0MsR0FBWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQUNpQk4sY0FBYyxDQUFDTyxJQUFmLEVBRGpCOztBQUFBO0FBQ0FDLGNBQUFBLFFBREE7QUFFTkYsY0FBQUEsR0FBRyxDQUFDRyxJQUFKLENBQVNELFFBQVQ7O0FBRk07QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQURVLENBQWhCO0FBT0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsT0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9jb250cm9sbGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgUGh1b25nQW5CYWlUaGkgPSByZXF1aXJlKCcuLi9tb2RlbHMvcGh1b25nYW5fYmFpdGhpLm1vZGVsJylcbnZhciBzaG9ydGlkID0gcmVxdWlyZSgnc2hvcnRpZCcpO1xuXG5jb25zdCBtZXRob2RzID0ge1xuXHRpbmRleDogYXN5bmMocmVxLCByZXMpPT57XG5cdFx0Y29uc3QgcGh1b25nYW4gPSBhd2FpdCBQaHVvbmdBbkJhaVRoaS5maW5kKClcblx0XHRyZXMuc2VuZChwaHVvbmdhbilcblx0fSxcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtZXRob2RzIl19",
    "map": {
      "version": 3,
      "sources": [
        "phuonganbaithi.controller.js"
      ],
      "names": [
        "PhuongAnBaiThi",
        "require",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "phuongan",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,iCAAD,CAA5B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAME,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBN,cAAc,CAACO,IAAf,EADjB;;AAAA;AACAC,cAAAA,QADA;AAENF,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADU,CAAhB;AAOAE,MAAM,CAACC,OAAP,GAAiBR,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "let PhuongAnBaiThi = require('../models/phuongan_baithi.model')\nvar shortid = require('shortid');\n\nconst methods = {\n\tindex: async(req, res)=>{\n\t\tconst phuongan = await PhuongAnBaiThi.find()\n\t\tres.send(phuongan)\n\t},\n}\n\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1607496610910
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/models/phuongan_baithi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/models/phuongan_baithi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/models/phuongan_baithi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/models/phuongan_baithi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
        "sourceFileName": "phuongan_baithi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ten: String,\n  noidung: String,\n  dapan: Boolean,\n  chon: Boolean,\n  cauhoibaithi: {\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoiBaiThi\"\n  }\n});\nvar PhuongAnBaiThi = mongoose.model('PhuongAnBaiThi', schema);\nmodule.exports = PhuongAnBaiThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuX2JhaXRoaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJ0ZW4iLCJTdHJpbmciLCJub2lkdW5nIiwiZGFwYW4iLCJCb29sZWFuIiwiY2hvbiIsImNhdWhvaWJhaXRoaSIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiUGh1b25nQW5CYWlUaGkiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBdEI7QUFFQSxJQUFJQyxNQUFNLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBRXBCRSxFQUFBQSxHQUFHLEVBQUVDLE1BRmU7QUFHcEJDLEVBQUFBLE9BQU8sRUFBRUQsTUFIVztBQUlwQkUsRUFBQUEsS0FBSyxFQUFFQyxPQUphO0FBS3BCQyxFQUFBQSxJQUFJLEVBQUVELE9BTGM7QUFPcEJFLEVBQUFBLFlBQVksRUFBQztBQUNmQyxJQUFBQSxJQUFJLEVBQUNULE1BQU0sQ0FBQ1UsS0FBUCxDQUFhQyxRQURIO0FBRWZDLElBQUFBLEdBQUcsRUFBQztBQUZXO0FBUE8sQ0FBWCxDQUFiO0FBY0EsSUFBSUMsY0FBYyxHQUFHZixRQUFRLENBQUNnQixLQUFULENBQWUsZ0JBQWYsRUFBaUNiLE1BQWpDLENBQXJCO0FBRUFjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsY0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuXG52YXIgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcblxuICAgIHRlbjogU3RyaW5nLCAgICBcbiAgICBub2lkdW5nOiBTdHJpbmcsXG4gICAgZGFwYW46IEJvb2xlYW4sXG4gICAgY2hvbjogQm9vbGVhbixcblxuICAgIGNhdWhvaWJhaXRoaTp7XG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG5cdFx0cmVmOlwiQ2F1SG9pQmFpVGhpXCJcblx0fSxcdFxuXHRcbn0pXG5cbnZhciBQaHVvbmdBbkJhaVRoaSA9IG1vbmdvb3NlLm1vZGVsKCdQaHVvbmdBbkJhaVRoaScsIHNjaGVtYSlcblxubW9kdWxlLmV4cG9ydHMgPSBQaHVvbmdBbkJhaVRoaSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phuongan_baithi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ten",
        "String",
        "noidung",
        "dapan",
        "Boolean",
        "chon",
        "cauhoibaithi",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "PhuongAnBaiThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,GAAG,EAAEC,MAFe;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,KAAK,EAAEC,OAJa;AAKpBC,EAAAA,IAAI,EAAED,OALc;AAOpBE,EAAAA,YAAY,EAAC;AACfC,IAAAA,IAAI,EAACT,MAAM,CAACU,KAAP,CAAaC,QADH;AAEfC,IAAAA,GAAG,EAAC;AAFW;AAPO,CAAX,CAAb;AAcA,IAAIC,cAAc,GAAGf,QAAQ,CAACgB,KAAT,CAAe,gBAAf,EAAiCb,MAAjC,CAArB;AAEAc,MAAM,CAACC,OAAP,GAAiBH,cAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/models/",
      "sourcesContent": [
        "var mongoose = require('mongoose')\n\nvar Schema = mongoose.Schema\n\nvar schema = new Schema({\n\n    ten: String,    \n    noidung: String,\n    dapan: Boolean,\n    chon: Boolean,\n\n    cauhoibaithi:{\n\t\ttype:Schema.Types.ObjectId,\n\t\tref:\"CauHoiBaiThi\"\n\t},\t\n\t\n})\n\nvar PhuongAnBaiThi = mongoose.model('PhuongAnBaiThi', schema)\n\nmodule.exports = PhuongAnBaiThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1607496293229
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/routes/sendmail.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/routes/sendmail.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/routes/sendmail.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/routes/sendmail.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
        "sourceFileName": "sendmail.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sendmail = _interopRequireDefault(require(\"../controllers/sendmail.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.post('/', _sendmail[\"default\"].sendmail);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmRtYWlsLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwicG9zdCIsImNvbnRyb2xsZXJzIiwic2VuZG1haWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0FBSEEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBSUFELE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLEdBQVosRUFBaUJDLHFCQUFZQyxRQUE3QjtBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJOLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90ZW8vRG9jdW1lbnRzL0RpZXAvc2VydmVyX2Qvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcblxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL3NlbmRtYWlsLmNvbnRyb2xsZXInXG5cbnJvdXRlci5wb3N0KCcvJywgY29udHJvbGxlcnMuc2VuZG1haWwpXG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sendmail.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "post",
        "controllers",
        "sendmail",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiBC,qBAAYC,QAA7B;AAIAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/routes/",
      "sourcesContent": [
        "const express = require('express')\nconst router = express.Router()\n\nimport controllers from '../controllers/sendmail.controller'\n\nrouter.post('/', controllers.sendmail)\n\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608444284793
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/controllers/sendmail.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/controllers/sendmail.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/controllers/sendmail.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/controllers/sendmail.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
        "sourceFileName": "sendmail.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('./../components/mail'),\n    sendEmail = _require.sendEmail;\n\nvar methods = {\n  sendmail: function sendmail(req, res) {\n    //console.log({req.body})\n    var _req$body = req.body,\n        name = _req$body.name,\n        email = _req$body.email,\n        pass = _req$body.pass;\n    sendEmail(email, name, 'create_pass_GV', pass);\n  }\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmRtYWlsLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInNlbmRFbWFpbCIsIm1ldGhvZHMiLCJzZW5kbWFpbCIsInJlcSIsInJlcyIsImJvZHkiLCJuYW1lIiwiZW1haWwiLCJwYXNzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7ZUFBc0JBLE9BQU8sQ0FBQyxzQkFBRCxDO0lBQXJCQyxTLFlBQUFBLFM7O0FBRVIsSUFBTUMsT0FBTyxHQUFHO0FBQ2ZDLEVBQUFBLFFBQVEsRUFBRyxrQkFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVc7QUFDckI7QUFEcUIsb0JBRVNELEdBQUcsQ0FBQ0UsSUFGYjtBQUFBLFFBRWJDLElBRmEsYUFFYkEsSUFGYTtBQUFBLFFBRVBDLEtBRk8sYUFFUEEsS0FGTztBQUFBLFFBRUFDLElBRkEsYUFFQUEsSUFGQTtBQUdyQlIsSUFBQUEsU0FBUyxDQUFDTyxLQUFELEVBQVFELElBQVIsRUFBYyxnQkFBZCxFQUErQkUsSUFBL0IsQ0FBVDtBQUNBO0FBTGMsQ0FBaEI7QUFRQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxPQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgc2VuZEVtYWlsIH0gPSByZXF1aXJlKCcuLy4uL2NvbXBvbmVudHMvbWFpbCcpXG5cbmNvbnN0IG1ldGhvZHMgPSB7XG5cdHNlbmRtYWlsIDogKHJlcSxyZXMpPT57XG5cdFx0Ly9jb25zb2xlLmxvZyh7cmVxLmJvZHl9KVxuXHRcdGNvbnN0IHsgbmFtZSwgZW1haWwsIHBhc3MgfSA9IHJlcS5ib2R5XG5cdFx0c2VuZEVtYWlsKGVtYWlsLCBuYW1lLCAnY3JlYXRlX3Bhc3NfR1YnLHBhc3MpXG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtZXRob2RzXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sendmail.controller.js"
      ],
      "names": [
        "require",
        "sendEmail",
        "methods",
        "sendmail",
        "req",
        "res",
        "body",
        "name",
        "email",
        "pass",
        "module",
        "exports"
      ],
      "mappings": ";;eAAsBA,OAAO,CAAC,sBAAD,C;IAArBC,S,YAAAA,S;;AAER,IAAMC,OAAO,GAAG;AACfC,EAAAA,QAAQ,EAAG,kBAACC,GAAD,EAAKC,GAAL,EAAW;AACrB;AADqB,oBAESD,GAAG,CAACE,IAFb;AAAA,QAEbC,IAFa,aAEbA,IAFa;AAAA,QAEPC,KAFO,aAEPA,KAFO;AAAA,QAEAC,IAFA,aAEAA,IAFA;AAGrBR,IAAAA,SAAS,CAACO,KAAD,EAAQD,IAAR,EAAc,gBAAd,EAA+BE,IAA/B,CAAT;AACA;AALc,CAAhB;AAQAC,MAAM,CAACC,OAAP,GAAiBT,OAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/controllers/",
      "sourcesContent": [
        "const { sendEmail } = require('./../components/mail')\n\nconst methods = {\n\tsendmail : (req,res)=>{\n\t\t//console.log({req.body})\n\t\tconst { name, email, pass } = req.body\n\t\tsendEmail(email, name, 'create_pass_GV',pass)\n\t}\n}\n\nmodule.exports = methods\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609638630986
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/components/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/components/mail.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/components/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/components/mail.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/components/mail.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/components/mail.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/components/",
        "sourceFileName": "mail.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mailer = require('nodemailer');\n\nvar _require = require('./templates/create_pass'),\n    create_pass_GV = _require.create_pass_GV;\n\nvar getEmailData = function getEmailData(to, name, template, content) {\n  var data = null;\n\n  switch (template) {\n    case 'create_pass_GV':\n      data = {\n        from: 'Admin <phanlac1345@gmail.com>',\n        to: to,\n        subject: \"C\\u1EA5p m\\u1EADt kh\\u1EA9u \".concat(name),\n        html: create_pass_GV(content)\n      };\n      break;\n\n    default:\n      data;\n  }\n\n  return data;\n};\n\nvar sendEmail = function sendEmail(to, name, type, content) {\n  var smtpTransport = mailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'phanlac1345@gmail.com',\n      pass: 'Kamenrider1'\n    }\n  });\n  var mail = getEmailData(to, name, type, content);\n  smtpTransport.sendMail(mail, function (error, response) {\n    if (error) {\n      console.log('err', error);\n    } else {\n      console.log('send mail successfuly!');\n    }\n  });\n  smtpTransport.close();\n};\n\nmodule.exports = {\n  sendEmail: sendEmail\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWwuanMiXSwibmFtZXMiOlsibWFpbGVyIiwicmVxdWlyZSIsImNyZWF0ZV9wYXNzX0dWIiwiZ2V0RW1haWxEYXRhIiwidG8iLCJuYW1lIiwidGVtcGxhdGUiLCJjb250ZW50IiwiZGF0YSIsImZyb20iLCJzdWJqZWN0IiwiaHRtbCIsInNlbmRFbWFpbCIsInR5cGUiLCJzbXRwVHJhbnNwb3J0IiwiY3JlYXRlVHJhbnNwb3J0Iiwic2VydmljZSIsImF1dGgiLCJ1c2VyIiwicGFzcyIsIm1haWwiLCJzZW5kTWFpbCIsImVycm9yIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwiY2xvc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBdEI7O2VBQzJCQSxPQUFPLENBQUMseUJBQUQsQztJQUExQkMsYyxZQUFBQSxjOztBQUdSLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNDLEVBQUQsRUFBS0MsSUFBTCxFQUFXQyxRQUFYLEVBQXFCQyxPQUFyQixFQUErQjtBQUNuRCxNQUFJQyxJQUFJLEdBQUcsSUFBWDs7QUFFQSxVQUFRRixRQUFSO0FBQ0MsU0FBSyxnQkFBTDtBQUNDRSxNQUFBQSxJQUFJLEdBQUc7QUFDTkMsUUFBQUEsSUFBSSxFQUFFLCtCQURBO0FBRU5MLFFBQUFBLEVBQUUsRUFBRkEsRUFGTTtBQUdOTSxRQUFBQSxPQUFPLHdDQUFrQkwsSUFBbEIsQ0FIRDtBQUlOTSxRQUFBQSxJQUFJLEVBQUVULGNBQWMsQ0FBQ0ssT0FBRDtBQUpkLE9BQVA7QUFNQTs7QUFDRDtBQUNDQyxNQUFBQSxJQUFJO0FBVk47O0FBWUEsU0FBT0EsSUFBUDtBQUNBLENBaEJEOztBQW1CQSxJQUFNSSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDUixFQUFELEVBQUtDLElBQUwsRUFBV1EsSUFBWCxFQUFpQk4sT0FBakIsRUFBNkI7QUFFOUMsTUFBTU8sYUFBYSxHQUFHZCxNQUFNLENBQUNlLGVBQVAsQ0FBdUI7QUFDNUNDLElBQUFBLE9BQU8sRUFBRSxPQURtQztBQUU1Q0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0xDLE1BQUFBLElBQUksRUFBRSx1QkFERDtBQUVMQyxNQUFBQSxJQUFJLEVBQUU7QUFGRDtBQUZzQyxHQUF2QixDQUF0QjtBQVNBLE1BQU1DLElBQUksR0FBR2pCLFlBQVksQ0FBQ0MsRUFBRCxFQUFLQyxJQUFMLEVBQVdRLElBQVgsRUFBaUJOLE9BQWpCLENBQXpCO0FBRUFPLEVBQUFBLGFBQWEsQ0FBQ08sUUFBZCxDQUF1QkQsSUFBdkIsRUFBNkIsVUFBU0UsS0FBVCxFQUFnQkMsUUFBaEIsRUFBMEI7QUFDdEQsUUFBSUQsS0FBSixFQUFVO0FBQ1RFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQVosRUFBa0JILEtBQWxCO0FBQ0EsS0FGRCxNQUVPO0FBQ05FLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0E7QUFDRCxHQU5EO0FBT0FYLEVBQUFBLGFBQWEsQ0FBQ1ksS0FBZDtBQUNBLENBckJEOztBQXVCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVoQixFQUFBQSxTQUFTLEVBQVRBO0FBQUYsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Rlby9Eb2N1bWVudHMvRGllcC9zZXJ2ZXJfZC9jb21wb25lbnRzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1haWxlciA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKVxuY29uc3QgeyBjcmVhdGVfcGFzc19HViB9ID0gcmVxdWlyZSgnLi90ZW1wbGF0ZXMvY3JlYXRlX3Bhc3MnKVxuXG5cbmNvbnN0IGdldEVtYWlsRGF0YSA9ICh0bywgbmFtZSwgdGVtcGxhdGUsIGNvbnRlbnQpPT57XG5cdGxldCBkYXRhID0gbnVsbFxuXG5cdHN3aXRjaCAodGVtcGxhdGUpe1xuXHRcdGNhc2UgJ2NyZWF0ZV9wYXNzX0dWJyA6XG5cdFx0XHRkYXRhID0ge1xuXHRcdFx0XHRmcm9tOiAnQWRtaW4gPHBoYW5sYWMxMzQ1QGdtYWlsLmNvbT4nLFxuXHRcdFx0XHR0byxcblx0XHRcdFx0c3ViamVjdDogYEPhuqVwIG3huq10IGto4bqpdSAke25hbWV9YCxcblx0XHRcdFx0aHRtbDogY3JlYXRlX3Bhc3NfR1YoY29udGVudClcblx0XHRcdH1cblx0XHRcdGJyZWFrXG5cdFx0ZGVmYXVsdDpcblx0XHRcdGRhdGFcblx0fVxuXHRyZXR1cm4gZGF0YVxufVxuXG5cbmNvbnN0IHNlbmRFbWFpbCA9ICh0bywgbmFtZSwgdHlwZSwgY29udGVudCkgPT4ge1xuXHRcblx0Y29uc3Qgc210cFRyYW5zcG9ydCA9IG1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1x0XHRcblx0XHRzZXJ2aWNlOiAnZ21haWwnLFx0XHQgXG5cdFx0YXV0aDoge1x0XHRcdFxuXHRcdFx0dXNlcjogJ3BoYW5sYWMxMzQ1QGdtYWlsLmNvbScsXG5cdFx0XHRwYXNzOiAnS2FtZW5yaWRlcjEnXG5cdFx0fVxuXG5cdH0pXG5cblx0Y29uc3QgbWFpbCA9IGdldEVtYWlsRGF0YSh0bywgbmFtZSwgdHlwZSwgY29udGVudClcblxuXHRzbXRwVHJhbnNwb3J0LnNlbmRNYWlsKG1haWwsIGZ1bmN0aW9uKGVycm9yLCByZXNwb25zZSkge1xuXHRcdGlmIChlcnJvcil7XG5cdFx0XHRjb25zb2xlLmxvZygnZXJyJyxlcnJvcilcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc29sZS5sb2coJ3NlbmQgbWFpbCBzdWNjZXNzZnVseSEnKVxuXHRcdH1cblx0fSlcblx0c210cFRyYW5zcG9ydC5jbG9zZSgpXG59XG5cbm1vZHVsZS5leHBvcnRzID0geyBzZW5kRW1haWwgfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mail.js"
      ],
      "names": [
        "mailer",
        "require",
        "create_pass_GV",
        "getEmailData",
        "to",
        "name",
        "template",
        "content",
        "data",
        "from",
        "subject",
        "html",
        "sendEmail",
        "type",
        "smtpTransport",
        "createTransport",
        "service",
        "auth",
        "user",
        "pass",
        "mail",
        "sendMail",
        "error",
        "response",
        "console",
        "log",
        "close",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAtB;;eAC2BA,OAAO,CAAC,yBAAD,C;IAA1BC,c,YAAAA,c;;AAGR,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,EAA+B;AACnD,MAAIC,IAAI,GAAG,IAAX;;AAEA,UAAQF,QAAR;AACC,SAAK,gBAAL;AACCE,MAAAA,IAAI,GAAG;AACNC,QAAAA,IAAI,EAAE,+BADA;AAENL,QAAAA,EAAE,EAAFA,EAFM;AAGNM,QAAAA,OAAO,wCAAkBL,IAAlB,CAHD;AAINM,QAAAA,IAAI,EAAET,cAAc,CAACK,OAAD;AAJd,OAAP;AAMA;;AACD;AACCC,MAAAA,IAAI;AAVN;;AAYA,SAAOA,IAAP;AACA,CAhBD;;AAmBA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACR,EAAD,EAAKC,IAAL,EAAWQ,IAAX,EAAiBN,OAAjB,EAA6B;AAE9C,MAAMO,aAAa,GAAGd,MAAM,CAACe,eAAP,CAAuB;AAC5CC,IAAAA,OAAO,EAAE,OADmC;AAE5CC,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAE,uBADD;AAELC,MAAAA,IAAI,EAAE;AAFD;AAFsC,GAAvB,CAAtB;AASA,MAAMC,IAAI,GAAGjB,YAAY,CAACC,EAAD,EAAKC,IAAL,EAAWQ,IAAX,EAAiBN,OAAjB,CAAzB;AAEAO,EAAAA,aAAa,CAACO,QAAd,CAAuBD,IAAvB,EAA6B,UAASE,KAAT,EAAgBC,QAAhB,EAA0B;AACtD,QAAID,KAAJ,EAAU;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,KAAlB;AACA,KAFD,MAEO;AACNE,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;AACD,GAND;AAOAX,EAAAA,aAAa,CAACY,KAAd;AACA,CArBD;;AAuBAC,MAAM,CAACC,OAAP,GAAiB;AAAEhB,EAAAA,SAAS,EAATA;AAAF,CAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/components/",
      "sourcesContent": [
        "const mailer = require('nodemailer')\nconst { create_pass_GV } = require('./templates/create_pass')\n\n\nconst getEmailData = (to, name, template, content)=>{\n\tlet data = null\n\n\tswitch (template){\n\t\tcase 'create_pass_GV' :\n\t\t\tdata = {\n\t\t\t\tfrom: 'Admin <phanlac1345@gmail.com>',\n\t\t\t\tto,\n\t\t\t\tsubject: `Cấp mật khẩu ${name}`,\n\t\t\t\thtml: create_pass_GV(content)\n\t\t\t}\n\t\t\tbreak\n\t\tdefault:\n\t\t\tdata\n\t}\n\treturn data\n}\n\n\nconst sendEmail = (to, name, type, content) => {\n\t\n\tconst smtpTransport = mailer.createTransport({\t\t\n\t\tservice: 'gmail',\t\t \n\t\tauth: {\t\t\t\n\t\t\tuser: 'phanlac1345@gmail.com',\n\t\t\tpass: 'Kamenrider1'\n\t\t}\n\n\t})\n\n\tconst mail = getEmailData(to, name, type, content)\n\n\tsmtpTransport.sendMail(mail, function(error, response) {\n\t\tif (error){\n\t\t\tconsole.log('err',error)\n\t\t} else {\n\t\t\tconsole.log('send mail successfuly!')\n\t\t}\n\t})\n\tsmtpTransport.close()\n}\n\nmodule.exports = { sendEmail }"
      ]
    },
    "sourceType": "script",
    "mtime": 1609638529753
  },
  "{\"sourceRoot\":\"/Users/teo/Documents/Diep/server_d/components/templates/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/teo/Documents/Diep/server_d\",\"filename\":\"/Users/teo/Documents/Diep/server_d/components/templates/create_pass.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/teo/Documents/Diep/server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/components/templates/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/teo/Documents/Diep/server_d",
      "filename": "/Users/teo/Documents/Diep/server_d/components/templates/create_pass.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/teo/Documents/Diep/server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/teo/Documents/Diep/server_d/components/templates/create_pass.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/teo/Documents/Diep/server_d/components/templates/create_pass.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/teo/Documents/Diep/server_d/components/templates/",
        "sourceFileName": "create_pass.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar create_pass_GV = function create_pass_GV(data) {\n  return \"\\n\\t\\t<!DOCTYPE html>\\n\\t\\t<html>\\n\\t\\t\\t<head>\\n\\t\\t\\t\\t<title>Hello</title>\\n\\t\\t\\t</head>\\n\\t\\t\\t<body style=\\\"margin: 0; padding:0;\\\">\\n\\t\\t\\t<br />\\t\\t\\t\\n\\t\\t\\t<br />\\n\\t\\t\\t<div>M\\u1EADt kh\\u1EA9u c\\u1EE7a b\\u1EA1n l\\xE0 \".concat(data, \"</div>\\n\\t\\t\\t<br />\\n\\t\\t\\t<br />\\n\\t\\t\\t</body>\\n\\t\\t</html>\\n\\t\");\n};\n\nmodule.exports = {\n  create_pass_GV: create_pass_GV\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZV9wYXNzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZV9wYXNzX0dWIiwiZGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFBQyxJQUFJLEVBQUc7QUFDN0IsdVBBUzZCQSxJQVQ3QjtBQWVBLENBaEJEOztBQWlCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUNILEVBQUFBLGNBQWMsRUFBZEE7QUFBRCxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdGVvL0RvY3VtZW50cy9EaWVwL3NlcnZlcl9kL2NvbXBvbmVudHMvdGVtcGxhdGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyZWF0ZV9wYXNzX0dWID0gZGF0YSA9Pntcblx0cmV0dXJuIGBcblx0XHQ8IURPQ1RZUEUgaHRtbD5cblx0XHQ8aHRtbD5cblx0XHRcdDxoZWFkPlxuXHRcdFx0XHQ8dGl0bGU+SGVsbG88L3RpdGxlPlxuXHRcdFx0PC9oZWFkPlxuXHRcdFx0PGJvZHkgc3R5bGU9XCJtYXJnaW46IDA7IHBhZGRpbmc6MDtcIj5cblx0XHRcdDxiciAvPlx0XHRcdFxuXHRcdFx0PGJyIC8+XG5cdFx0XHQ8ZGl2Pk3huq10IGto4bqpdSBj4bunYSBi4bqhbiBsw6AgJHtkYXRhfTwvZGl2PlxuXHRcdFx0PGJyIC8+XG5cdFx0XHQ8YnIgLz5cblx0XHRcdDwvYm9keT5cblx0XHQ8L2h0bWw+XG5cdGBcbn1cbm1vZHVsZS5leHBvcnRzID0ge2NyZWF0ZV9wYXNzX0dWfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "create_pass.js"
      ],
      "names": [
        "create_pass_GV",
        "data",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAG;AAC7B,uPAS6BA,IAT7B;AAeA,CAhBD;;AAiBAC,MAAM,CAACC,OAAP,GAAiB;AAACH,EAAAA,cAAc,EAAdA;AAAD,CAAjB",
      "sourceRoot": "/Users/teo/Documents/Diep/server_d/components/templates/",
      "sourcesContent": [
        "const create_pass_GV = data =>{\n\treturn `\n\t\t<!DOCTYPE html>\n\t\t<html>\n\t\t\t<head>\n\t\t\t\t<title>Hello</title>\n\t\t\t</head>\n\t\t\t<body style=\"margin: 0; padding:0;\">\n\t\t\t<br />\t\t\t\n\t\t\t<br />\n\t\t\t<div>Mật khẩu của bạn là ${data}</div>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t</body>\n\t\t</html>\n\t`\n}\nmodule.exports = {create_pass_GV}"
      ]
    },
    "sourceType": "script",
    "mtime": 1609638506663
  }
}