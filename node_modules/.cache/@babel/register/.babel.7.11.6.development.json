{
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nvar cors = require('cors');\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser'); //connect db\n\n\nvar connect_db = require('./db');\n\nvar path = require('path'); // import Route ------------------------------------------------------------------------\n\n\nvar rootRouter = require('./routes/index.route');\n\nvar app = express();\napp.use(cors()); // parse application/x-www-form-urlencoded \n\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\nvar port = process.env.PORT; // congifg ------------------------------------------------------------------------------\n\napp.set('view engine', 'pug'); //app.set('views', './views')\n// Route --------------------------------------------------------------------------------\n\napp.use('/', rootRouter);\napp.get('/api/image/:name', function (req, res) {\n  var fileName = req.params.name;\n  res.sendFile(path.resolve(\"./assets/image/\".concat(fileName)));\n});\napp.listen(port, function () {\n  console.log('Start server port = ', port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJjb3JzIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJjb25uZWN0X2RiIiwicGF0aCIsInJvb3RSb3V0ZXIiLCJhcHAiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwic2V0IiwiZ2V0IiwicmVxIiwicmVzIiwiZmlsZU5hbWUiLCJwYXJhbXMiLCJuYW1lIiwic2VuZEZpbGUiLCJyZXNvbHZlIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBRUEsSUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLGFBQUQsQ0FBMUIsQyxDQUVBOzs7QUFDQSxJQUFNSyxVQUFVLEdBQUdMLE9BQU8sQ0FBQyxNQUFELENBQTFCOztBQUNBLElBQUlNLElBQUksR0FBR04sT0FBTyxDQUFDLE1BQUQsQ0FBbEIsQyxDQUVBOzs7QUFDQSxJQUFNTyxVQUFVLEdBQUdQLE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQSxJQUFNUSxHQUFHLEdBQUdMLE9BQU8sRUFBbkI7QUFDQUssR0FBRyxDQUFDQyxHQUFKLENBQVFQLElBQUksRUFBWixFLENBQ0E7O0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTCxVQUFVLENBQUNNLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUUwsVUFBVSxDQUFDUSxJQUFYLEVBQVI7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF6QixDLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkIsRSxDQUNBO0FBRUE7O0FBQ0FULEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYUYsVUFBYjtBQUVBQyxHQUFHLENBQUNVLEdBQUosQ0FBUSxrQkFBUixFQUEyQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBa0I7QUFDNUMsTUFBSUMsUUFBUSxHQUFHRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFBMUI7QUFDQUgsRUFBQUEsR0FBRyxDQUFDSSxRQUFKLENBQWFsQixJQUFJLENBQUNtQixPQUFMLDBCQUErQkosUUFBL0IsRUFBYjtBQUNBLENBSEQ7QUFLQWIsR0FBRyxDQUFDa0IsTUFBSixDQUFXYixJQUFYLEVBQWdCLFlBQUk7QUFDbkJjLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaLEVBQW9DZixJQUFwQztBQUNBLENBRkQiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFwiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcclxuXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxyXG5cclxuLy9jb25uZWN0IGRiXHJcbmNvbnN0IGNvbm5lY3RfZGIgPSByZXF1aXJlKCcuL2RiJylcclxudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJylcclxuXHJcbi8vIGltcG9ydCBSb3V0ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuY29uc3Qgcm9vdFJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4LnJvdXRlJylcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxyXG5hcHAudXNlKGNvcnMoKSlcclxuLy8gcGFyc2UgYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIFxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcclxuXHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUXHJcblxyXG4vLyBjb25naWZnIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdwdWcnKVxyXG4vL2FwcC5zZXQoJ3ZpZXdzJywgJy4vdmlld3MnKVxyXG5cclxuLy8gUm91dGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuYXBwLnVzZSgnLycsIHJvb3RSb3V0ZXIpXHJcblxyXG5hcHAuZ2V0KCcvYXBpL2ltYWdlLzpuYW1lJyxmdW5jdGlvbihyZXEsIHJlcyl7XHJcblx0bGV0IGZpbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lXHJcblx0cmVzLnNlbmRGaWxlKHBhdGgucmVzb2x2ZShgLi9hc3NldHMvaW1hZ2UvJHtmaWxlTmFtZX1gKSk7XHJcbn0pXHJcblxyXG5hcHAubGlzdGVuKHBvcnQsKCk9PntcclxuXHRjb25zb2xlLmxvZygnU3RhcnQgc2VydmVyIHBvcnQgPSAnLCBwb3J0KVxyXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "cors",
        "express",
        "bodyParser",
        "connect_db",
        "path",
        "rootRouter",
        "app",
        "use",
        "urlencoded",
        "extended",
        "json",
        "port",
        "process",
        "env",
        "PORT",
        "set",
        "get",
        "req",
        "res",
        "fileName",
        "params",
        "name",
        "sendFile",
        "resolve",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,MAAD,CAA1B;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAAlB,C,CAEA;;;AACA,IAAMO,UAAU,GAAGP,OAAO,CAAC,sBAAD,CAA1B;;AAEA,IAAMQ,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQP,IAAI,EAAZ,E,CACA;;AACAM,GAAG,CAACC,GAAJ,CAAQL,UAAU,CAACM,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQL,UAAU,CAACQ,IAAX,EAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAzB,C,CAEA;;AACAR,GAAG,CAACS,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CACA;AAEA;;AACAT,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,UAAb;AAEAC,GAAG,CAACU,GAAJ,CAAQ,kBAAR,EAA2B,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC5C,MAAIC,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAWC,IAA1B;AACAH,EAAAA,GAAG,CAACI,QAAJ,CAAalB,IAAI,CAACmB,OAAL,0BAA+BJ,QAA/B,EAAb;AACA,CAHD;AAKAb,GAAG,CAACkB,MAAJ,CAAWb,IAAX,EAAgB,YAAI;AACnBc,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCf,IAApC;AACA,CAFD",
      "sourceRoot": "D:\\LuanVan\\server_d\\",
      "sourcesContent": [
        "require('dotenv').config();\r\n\r\nconst cors = require('cors')\r\nconst express = require('express')\r\nconst bodyParser = require('body-parser')\r\n\r\n//connect db\r\nconst connect_db = require('./db')\r\nvar path = require('path')\r\n\r\n// import Route ------------------------------------------------------------------------\r\nconst rootRouter = require('./routes/index.route')\r\n\r\nconst app = express()\r\napp.use(cors())\r\n// parse application/x-www-form-urlencoded \r\napp.use(bodyParser.urlencoded({ extended: false }))\r\napp.use(bodyParser.json())\r\n\r\nconst port = process.env.PORT\r\n\r\n// congifg ------------------------------------------------------------------------------\r\napp.set('view engine', 'pug')\r\n//app.set('views', './views')\r\n\r\n// Route --------------------------------------------------------------------------------\r\napp.use('/', rootRouter)\r\n\r\napp.get('/api/image/:name',function(req, res){\r\n\tlet fileName = req.params.name\r\n\tres.sendFile(path.resolve(`./assets/image/${fileName}`));\r\n})\r\n\r\napp.listen(port,()=>{\r\n\tconsole.log('Start server port = ', port)\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903195
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\db.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\db.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar connect = mongoose.connect('mongodb://localhost/luanvan_d', {\n  useNewUrlParser: true\n}).then(function () {\n  return console.log(\"connect\");\n});\nmodule.exports = connect;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFNQyxPQUFPLEdBQUdGLFFBQVEsQ0FBQ0UsT0FBVCxDQUFpQiwrQkFBakIsRUFBa0Q7QUFBQ0MsRUFBQUEsZUFBZSxFQUFFO0FBQWxCLENBQWxELEVBQ2ZDLElBRGUsQ0FDVjtBQUFBLFNBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosQ0FBSjtBQUFBLENBRFUsQ0FBaEI7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixPQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuXHJcbmNvbnN0IGNvbm5lY3QgPSBtb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L2x1YW52YW5fZCcsIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KVxyXG4udGhlbigoKT0+Y29uc29sZS5sb2coXCJjb25uZWN0XCIpKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjb25uZWN0XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "require",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,OAAO,GAAGF,QAAQ,CAACE,OAAT,CAAiB,+BAAjB,EAAkD;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAlD,EACfC,IADe,CACV;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAJ;AAAA,CADU,CAAhB;AAGAC,MAAM,CAACC,OAAP,GAAiBN,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\n\r\nconst connect = mongoose.connect('mongodb://localhost/luanvan_d', {useNewUrlParser: true})\r\n.then(()=>console.log(\"connect\"))\r\n\r\nmodule.exports = connect\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1604903906324
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\index.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\index.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\index.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\index.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "index.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar rootRouter = express.Router(); //----------------------------------------------------------\n//const nguoidung = require('./nguoidung.route')\n\nvar cauhoi = require('./cauhoi.route');\n\nvar phuongan = require('./phuongan.route');\n\nvar mon = require('./mon.route');\n\nvar dethi = require('./dethi.route');\n\nvar kithi = require('./kithi.route');\n\nvar nhom = require('./nhom.route');\n\nvar taikhoan = require('./taikhoan.route');\n\nvar thongbao = require('./thongbao.route');\n\nvar baithi = require('./baithi.route');\n\nvar cauhoibaithi = require('./cauhoibaithi.route');\n\nvar phuonganbaithi = require('./phuonganbaithi.route'); //----------------------------------------------------------\n//rootRouter.use('/api/nguoidung', nguoidung)\n\n\nrootRouter.use('/api/cau-hoi', cauhoi);\nrootRouter.use('/api/phuongan', phuongan);\nrootRouter.use('/api/mon', mon);\nrootRouter.use('/api/de-thi', dethi);\nrootRouter.use('/api/ki-thi', kithi);\nrootRouter.use('/api/nhom', nhom);\nrootRouter.use('/api/tai-khoan', taikhoan);\nrootRouter.use('/api/thong-bao', thongbao);\nrootRouter.use('/api/bai-thi', baithi);\nrootRouter.use('/api/cau-hoi-bai-thi', cauhoibaithi);\nrootRouter.use('/api/phuong-an-bai-thi', phuonganbaithi); //----------------------------------------------------------\n\nmodule.exports = rootRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm9vdFJvdXRlciIsIlJvdXRlciIsImNhdWhvaSIsInBodW9uZ2FuIiwibW9uIiwiZGV0aGkiLCJraXRoaSIsIm5ob20iLCJ0YWlraG9hbiIsInRob25nYmFvIiwiYmFpdGhpIiwiY2F1aG9pYmFpdGhpIiwicGh1b25nYW5iYWl0aGkiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBbkIsQyxDQUNBO0FBRUE7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHSCxPQUFPLENBQUMsZ0JBQUQsQ0FBdEI7O0FBQ0EsSUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMsa0JBQUQsQ0FBeEI7O0FBQ0EsSUFBTUssR0FBRyxHQUFHTCxPQUFPLENBQUMsYUFBRCxDQUFuQjs7QUFDQSxJQUFNTSxLQUFLLEdBQUdOLE9BQU8sQ0FBQyxlQUFELENBQXJCOztBQUNBLElBQU1PLEtBQUssR0FBR1AsT0FBTyxDQUFDLGVBQUQsQ0FBckI7O0FBQ0EsSUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsY0FBRCxDQUFwQjs7QUFDQSxJQUFNUyxRQUFRLEdBQUdULE9BQU8sQ0FBQyxrQkFBRCxDQUF4Qjs7QUFDQSxJQUFNVSxRQUFRLEdBQUdWLE9BQU8sQ0FBQyxrQkFBRCxDQUF4Qjs7QUFDQSxJQUFNVyxNQUFNLEdBQUdYLE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFDQSxJQUFNWSxZQUFZLEdBQUdaLE9BQU8sQ0FBQyxzQkFBRCxDQUE1Qjs7QUFDQSxJQUFNYSxjQUFjLEdBQUdiLE9BQU8sQ0FBQyx3QkFBRCxDQUE5QixDLENBQ0E7QUFFQTs7O0FBQ0FDLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLGNBQWYsRUFBK0JYLE1BQS9CO0FBQ0FGLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLGVBQWYsRUFBZ0NWLFFBQWhDO0FBQ0FILFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLFVBQWYsRUFBMkJULEdBQTNCO0FBQ0FKLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLGFBQWYsRUFBOEJSLEtBQTlCO0FBQ0FMLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLGFBQWYsRUFBOEJQLEtBQTlCO0FBQ0FOLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLFdBQWYsRUFBNEJOLElBQTVCO0FBQ0FQLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLGdCQUFmLEVBQWlDTCxRQUFqQztBQUNBUixVQUFVLENBQUNhLEdBQVgsQ0FBZSxnQkFBZixFQUFpQ0osUUFBakM7QUFDQVQsVUFBVSxDQUFDYSxHQUFYLENBQWUsY0FBZixFQUErQkgsTUFBL0I7QUFDQVYsVUFBVSxDQUFDYSxHQUFYLENBQWUsc0JBQWYsRUFBdUNGLFlBQXZDO0FBQ0FYLFVBQVUsQ0FBQ2EsR0FBWCxDQUFlLHdCQUFmLEVBQXlDRCxjQUF6QyxFLENBRUE7O0FBQ0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsVUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IHJvb3RSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy9jb25zdCBuZ3VvaWR1bmcgPSByZXF1aXJlKCcuL25ndW9pZHVuZy5yb3V0ZScpXHJcbmNvbnN0IGNhdWhvaSA9IHJlcXVpcmUoJy4vY2F1aG9pLnJvdXRlJylcclxuY29uc3QgcGh1b25nYW4gPSByZXF1aXJlKCcuL3BodW9uZ2FuLnJvdXRlJylcclxuY29uc3QgbW9uID0gcmVxdWlyZSgnLi9tb24ucm91dGUnKVxyXG5jb25zdCBkZXRoaSA9IHJlcXVpcmUoJy4vZGV0aGkucm91dGUnKVxyXG5jb25zdCBraXRoaSA9IHJlcXVpcmUoJy4va2l0aGkucm91dGUnKVxyXG5jb25zdCBuaG9tID0gcmVxdWlyZSgnLi9uaG9tLnJvdXRlJylcclxuY29uc3QgdGFpa2hvYW4gPSByZXF1aXJlKCcuL3RhaWtob2FuLnJvdXRlJylcclxuY29uc3QgdGhvbmdiYW8gPSByZXF1aXJlKCcuL3Rob25nYmFvLnJvdXRlJylcclxuY29uc3QgYmFpdGhpID0gcmVxdWlyZSgnLi9iYWl0aGkucm91dGUnKVxyXG5jb25zdCBjYXVob2liYWl0aGkgPSByZXF1aXJlKCcuL2NhdWhvaWJhaXRoaS5yb3V0ZScpXHJcbmNvbnN0IHBodW9uZ2FuYmFpdGhpID0gcmVxdWlyZSgnLi9waHVvbmdhbmJhaXRoaS5yb3V0ZScpXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy9yb290Um91dGVyLnVzZSgnL2FwaS9uZ3VvaWR1bmcnLCBuZ3VvaWR1bmcpXHJcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL2NhdS1ob2knLCBjYXVob2kpXHJcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL3BodW9uZ2FuJywgcGh1b25nYW4pXHJcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL21vbicsIG1vbilcclxucm9vdFJvdXRlci51c2UoJy9hcGkvZGUtdGhpJywgZGV0aGkpXHJcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL2tpLXRoaScsIGtpdGhpKVxyXG5yb290Um91dGVyLnVzZSgnL2FwaS9uaG9tJywgbmhvbSlcclxucm9vdFJvdXRlci51c2UoJy9hcGkvdGFpLWtob2FuJywgdGFpa2hvYW4pXHJcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL3Rob25nLWJhbycsIHRob25nYmFvKVxyXG5yb290Um91dGVyLnVzZSgnL2FwaS9iYWktdGhpJywgYmFpdGhpKVxyXG5yb290Um91dGVyLnVzZSgnL2FwaS9jYXUtaG9pLWJhaS10aGknLCBjYXVob2liYWl0aGkpXHJcbnJvb3RSb3V0ZXIudXNlKCcvYXBpL3BodW9uZy1hbi1iYWktdGhpJywgcGh1b25nYW5iYWl0aGkpXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxubW9kdWxlLmV4cG9ydHMgPSByb290Um91dGVyXHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.route.js"
      ],
      "names": [
        "express",
        "require",
        "rootRouter",
        "Router",
        "cauhoi",
        "phuongan",
        "mon",
        "dethi",
        "kithi",
        "nhom",
        "taikhoan",
        "thongbao",
        "baithi",
        "cauhoibaithi",
        "phuonganbaithi",
        "use",
        "module",
        "exports"
      ],
      "mappings": ";;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,EAAnB,C,CACA;AAEA;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMK,GAAG,GAAGL,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAC,eAAD,CAArB;;AACA,IAAMO,KAAK,GAAGP,OAAO,CAAC,eAAD,CAArB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,cAAD,CAApB;;AACA,IAAMS,QAAQ,GAAGT,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMU,QAAQ,GAAGV,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMW,MAAM,GAAGX,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMY,YAAY,GAAGZ,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAMa,cAAc,GAAGb,OAAO,CAAC,wBAAD,CAA9B,C,CACA;AAEA;;;AACAC,UAAU,CAACa,GAAX,CAAe,cAAf,EAA+BX,MAA/B;AACAF,UAAU,CAACa,GAAX,CAAe,eAAf,EAAgCV,QAAhC;AACAH,UAAU,CAACa,GAAX,CAAe,UAAf,EAA2BT,GAA3B;AACAJ,UAAU,CAACa,GAAX,CAAe,aAAf,EAA8BR,KAA9B;AACAL,UAAU,CAACa,GAAX,CAAe,aAAf,EAA8BP,KAA9B;AACAN,UAAU,CAACa,GAAX,CAAe,WAAf,EAA4BN,IAA5B;AACAP,UAAU,CAACa,GAAX,CAAe,gBAAf,EAAiCL,QAAjC;AACAR,UAAU,CAACa,GAAX,CAAe,gBAAf,EAAiCJ,QAAjC;AACAT,UAAU,CAACa,GAAX,CAAe,cAAf,EAA+BH,MAA/B;AACAV,UAAU,CAACa,GAAX,CAAe,sBAAf,EAAuCF,YAAvC;AACAX,UAAU,CAACa,GAAX,CAAe,wBAAf,EAAyCD,cAAzC,E,CAEA;;AACAE,MAAM,CAACC,OAAP,GAAiBf,UAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "\r\nconst express = require('express')\r\nconst rootRouter = express.Router()\r\n//----------------------------------------------------------\r\n\r\n//const nguoidung = require('./nguoidung.route')\r\nconst cauhoi = require('./cauhoi.route')\r\nconst phuongan = require('./phuongan.route')\r\nconst mon = require('./mon.route')\r\nconst dethi = require('./dethi.route')\r\nconst kithi = require('./kithi.route')\r\nconst nhom = require('./nhom.route')\r\nconst taikhoan = require('./taikhoan.route')\r\nconst thongbao = require('./thongbao.route')\r\nconst baithi = require('./baithi.route')\r\nconst cauhoibaithi = require('./cauhoibaithi.route')\r\nconst phuonganbaithi = require('./phuonganbaithi.route')\r\n//----------------------------------------------------------\r\n\r\n//rootRouter.use('/api/nguoidung', nguoidung)\r\nrootRouter.use('/api/cau-hoi', cauhoi)\r\nrootRouter.use('/api/phuongan', phuongan)\r\nrootRouter.use('/api/mon', mon)\r\nrootRouter.use('/api/de-thi', dethi)\r\nrootRouter.use('/api/ki-thi', kithi)\r\nrootRouter.use('/api/nhom', nhom)\r\nrootRouter.use('/api/tai-khoan', taikhoan)\r\nrootRouter.use('/api/thong-bao', thongbao)\r\nrootRouter.use('/api/bai-thi', baithi)\r\nrootRouter.use('/api/cau-hoi-bai-thi', cauhoibaithi)\r\nrootRouter.use('/api/phuong-an-bai-thi', phuonganbaithi)\r\n\r\n//----------------------------------------------------------\r\nmodule.exports = rootRouter\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904080
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\cauhoi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\cauhoi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\cauhoi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\cauhoi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "cauhoi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cauhoi = _interopRequireDefault(require(\"../controllers/cauhoi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _cauhoi[\"default\"].index); // cau hoi cua mon\n\nrouter.get('/mon/:_idmon', _cauhoi[\"default\"].questionOfSubject); //detail \n\nrouter.get('/detail/:id', _cauhoi[\"default\"].detail);\nrouter.get('/de-thi/:_iddethi', _cauhoi[\"default\"].cauhoiCuaDethi); // {noi dung, phuongans[]}\n\nrouter.post('/them', _cauhoi[\"default\"].themCauHoi); // delete cau  hoi\n\nrouter[\"delete\"]('/:id', _cauhoi[\"default\"].destroy);\nrouter.post('/remove', _cauhoi[\"default\"].removeCauHoi); // import cau hoi\n\nrouter.post('/import', _cauhoi[\"default\"][\"import\"]);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaS5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJxdWVzdGlvbk9mU3ViamVjdCIsImRldGFpbCIsImNhdWhvaUN1YURldGhpIiwicG9zdCIsInRoZW1DYXVIb2kiLCJkZXN0cm95IiwicmVtb3ZlQ2F1SG9pIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxtQkFBWUMsS0FBNUIsRSxDQUVBOztBQUNBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxjQUFYLEVBQTJCQyxtQkFBWUUsaUJBQXZDLEUsQ0FDQTs7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsYUFBWCxFQUEwQkMsbUJBQVlHLE1BQXRDO0FBRUFOLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLG1CQUFYLEVBQWdDQyxtQkFBWUksY0FBNUMsRSxDQUVBOztBQUNBUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxPQUFaLEVBQXFCTCxtQkFBWU0sVUFBakMsRSxDQUNBOztBQUNBVCxNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXNCRyxtQkFBWU8sT0FBbEM7QUFFQVYsTUFBTSxDQUFDUSxJQUFQLENBQVksU0FBWixFQUF1QkwsbUJBQVlRLFlBQW5DLEUsQ0FFQTs7QUFDQVgsTUFBTSxDQUFDUSxJQUFQLENBQVksU0FBWixFQUF1QkwsNEJBQXZCO0FBSUFTLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxyXG5cclxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL2NhdWhvaS5jb250cm9sbGVyJ1xyXG5cclxucm91dGVyLmdldCgnLycsIGNvbnRyb2xsZXJzLmluZGV4KVxyXG5cclxuLy8gY2F1IGhvaSBjdWEgbW9uXHJcbnJvdXRlci5nZXQoJy9tb24vOl9pZG1vbicsIGNvbnRyb2xsZXJzLnF1ZXN0aW9uT2ZTdWJqZWN0KVxyXG4vL2RldGFpbCBcclxucm91dGVyLmdldCgnL2RldGFpbC86aWQnLCBjb250cm9sbGVycy5kZXRhaWwpXHJcblxyXG5yb3V0ZXIuZ2V0KCcvZGUtdGhpLzpfaWRkZXRoaScsIGNvbnRyb2xsZXJzLmNhdWhvaUN1YURldGhpKVxyXG5cclxuLy8ge25vaSBkdW5nLCBwaHVvbmdhbnNbXX1cclxucm91dGVyLnBvc3QoJy90aGVtJywgY29udHJvbGxlcnMudGhlbUNhdUhvaSlcclxuLy8gZGVsZXRlIGNhdSAgaG9pXHJcbnJvdXRlci5kZWxldGUoJy86aWQnLCBjb250cm9sbGVycy5kZXN0cm95KVxyXG5cclxucm91dGVyLnBvc3QoJy9yZW1vdmUnLCBjb250cm9sbGVycy5yZW1vdmVDYXVIb2kpXHJcblxyXG4vLyBpbXBvcnQgY2F1IGhvaVxyXG5yb3V0ZXIucG9zdCgnL2ltcG9ydCcsIGNvbnRyb2xsZXJzLmltcG9ydClcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "questionOfSubject",
        "detail",
        "cauhoiCuaDethi",
        "post",
        "themCauHoi",
        "destroy",
        "removeCauHoi",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,mBAAYC,KAA5B,E,CAEA;;AACAJ,MAAM,CAACE,GAAP,CAAW,cAAX,EAA2BC,mBAAYE,iBAAvC,E,CACA;;AACAL,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0BC,mBAAYG,MAAtC;AAEAN,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,mBAAYI,cAA5C,E,CAEA;;AACAP,MAAM,CAACQ,IAAP,CAAY,OAAZ,EAAqBL,mBAAYM,UAAjC,E,CACA;;AACAT,MAAM,UAAN,CAAc,MAAd,EAAsBG,mBAAYO,OAAlC;AAEAV,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBL,mBAAYQ,YAAnC,E,CAEA;;AACAX,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBL,4BAAvB;AAIAS,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nimport controllers from '../controllers/cauhoi.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\n// cau hoi cua mon\r\nrouter.get('/mon/:_idmon', controllers.questionOfSubject)\r\n//detail \r\nrouter.get('/detail/:id', controllers.detail)\r\n\r\nrouter.get('/de-thi/:_iddethi', controllers.cauhoiCuaDethi)\r\n\r\n// {noi dung, phuongans[]}\r\nrouter.post('/them', controllers.themCauHoi)\r\n// delete cau  hoi\r\nrouter.delete('/:id', controllers.destroy)\r\n\r\nrouter.post('/remove', controllers.removeCauHoi)\r\n\r\n// import cau hoi\r\nrouter.post('/import', controllers.import)\r\n\r\n\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904079
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\cauhoi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\cauhoi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\cauhoi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\cauhoi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "cauhoi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar DeThi = require('../models/dethi.model');\n\nvar Mon = require('../models/mon.model');\n\nvar PhuongAn = require('../models/phuongan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var cauhoi;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return CauHoi.find().populate('mon');\n\n            case 2:\n              cauhoi = _context.sent;\n              res.send(cauhoi);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idcauhoi, cauhoi;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _idcauhoi = req.params.id;\n              _context2.next = 3;\n              return CauHoi.findById(_idcauhoi);\n\n            case 3:\n              cauhoi = _context2.sent;\n              res.send(cauhoi);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function detail(_x3, _x4) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  // cau hoi cua mon\n  questionOfSubject: function () {\n    var _questionOfSubject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idmon, _cauhois;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _idmon = req.params._idmon;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return CauHoi.find({\n                mon: _idmon\n              }).populate('phuongans');\n\n            case 4:\n              _cauhois = _context3.sent;\n              res.send(_cauhois);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    function questionOfSubject(_x5, _x6) {\n      return _questionOfSubject.apply(this, arguments);\n    }\n\n    return questionOfSubject;\n  }(),\n  cauhoiCuaDethi: function () {\n    var _cauhoiCuaDethi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _iddethi, _cauhois2, dethi;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _iddethi = req.params._iddethi;\n              _context4.prev = 1;\n              _cauhois2 = []; //const dethi = await DeThi.findById(_iddethi).populate('cauhois').select('cauhois')\n\n              _context4.next = 5;\n              return DeThi.findById(_iddethi).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 5:\n              dethi = _context4.sent;\n\n              _cauhois2.push(dethi);\n\n              res.send(_cauhois2);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](1);\n              res.send(_context4.t0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 10]]);\n    }));\n\n    function cauhoiCuaDethi(_x7, _x8) {\n      return _cauhoiCuaDethi.apply(this, arguments);\n    }\n\n    return cauhoiCuaDethi;\n  }(),\n  // add cau hoi \n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body, tieude, noidung, phuongan, loai, mon, cauhoi;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body = req.body, tieude = _req$body.tieude, noidung = _req$body.noidung, phuongan = _req$body.phuongan, loai = _req$body.loai, mon = _req$body.mon; // let ma = req.body.ma\n              // let ten = req.body.ten\n\n              _context6.next = 3;\n              return new Cauhoi({\n                ma: shortid.generate(),\n                tieude: tieude,\n                noidung: noidung,\n                loai: loai,\n                phuongan: phuongan,\n                mon: mon,\n                trangthai: 1\n              });\n\n            case 3:\n              cauhoi = _context6.sent;\n\n              try {\n                cauhoi.save().then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(respone) {\n                    var p_mon, result;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return Mon.findById(mon);\n\n                          case 2:\n                            p_mon = _context5.sent;\n                            p_mon.cauhois.push(respone._id);\n                            p_mon.save();\n                            _context5.next = 7;\n                            return CauHoi.find().populate('mon');\n\n                          case 7:\n                            result = _context5.sent;\n                            res.json({\n                              result: \"success\",\n                              data: result\n                            });\n\n                          case 9:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x11) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (err) {\n                res.json({\n                  error: error\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function post(_x9, _x10) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // add question\n  themCauHoi: function () {\n    var _themCauHoi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n      var _req$body2, noidung, phuongans, _idmon, cauhoi;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _req$body2 = req.body, noidung = _req$body2.noidung, phuongans = _req$body2.phuongans, _idmon = _req$body2._idmon;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return new CauHoi({\n                noidung: noidung,\n                mon: _idmon,\n                trangthai: 1\n              });\n\n            case 4:\n              cauhoi = _context10.sent;\n              cauhoi.save().then( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(respone) {\n                  var mon;\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          _context9.next = 2;\n                          return Mon.findById(_idmon);\n\n                        case 2:\n                          mon = _context9.sent;\n                          mon.cauhois.push(respone._id);\n                          mon.save();\n                          phuongans.forEach( /*#__PURE__*/function () {\n                            var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(pa, idx) {\n                              var phuongan, result_cauhoi, result_mon;\n                              return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                while (1) {\n                                  switch (_context8.prev = _context8.next) {\n                                    case 0:\n                                      _context8.next = 2;\n                                      return new PhuongAn({\n                                        ten: pa.ten,\n                                        noidung: pa.noidung,\n                                        dapan: pa.dapan,\n                                        cauhoi: respone._id\n                                      });\n\n                                    case 2:\n                                      phuongan = _context8.sent;\n                                      phuongan.save().then( /*#__PURE__*/function () {\n                                        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(result_pa) {\n                                          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                            while (1) {\n                                              switch (_context7.prev = _context7.next) {\n                                                case 0:\n                                                  respone.phuongans.push(result_pa._id);\n                                                  respone.save();\n\n                                                case 2:\n                                                case \"end\":\n                                                  return _context7.stop();\n                                              }\n                                            }\n                                          }, _callee7);\n                                        }));\n\n                                        return function (_x17) {\n                                          return _ref4.apply(this, arguments);\n                                        };\n                                      }());\n\n                                      if (!(idx === phuongans.length - 1)) {\n                                        _context8.next = 12;\n                                        break;\n                                      }\n\n                                      _context8.next = 7;\n                                      return CauHoi.findById(respone._id).populate('phuongans');\n\n                                    case 7:\n                                      result_cauhoi = _context8.sent;\n                                      _context8.next = 10;\n                                      return Mon.findById(_idmon).populate('cauhois');\n\n                                    case 10:\n                                      result_mon = _context8.sent;\n                                      res.send({\n                                        result_cauhoi: result_cauhoi,\n                                        result_mon: result_mon\n                                      });\n\n                                    case 12:\n                                    case \"end\":\n                                      return _context8.stop();\n                                  }\n                                }\n                              }, _callee8);\n                            }));\n\n                            return function (_x15, _x16) {\n                              return _ref3.apply(this, arguments);\n                            };\n                          }());\n\n                        case 6:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x14) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              _context10.next = 11;\n              break;\n\n            case 8:\n              _context10.prev = 8;\n              _context10.t0 = _context10[\"catch\"](1);\n              res.send(_context10.t0);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 8]]);\n    }));\n\n    function themCauHoi(_x12, _x13) {\n      return _themCauHoi.apply(this, arguments);\n    }\n\n    return themCauHoi;\n  }(),\n  // import cau hoi {_idmon, cauhois[]}\n  \"import\": function () {\n    var _import2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n      var arr, _req$body3, _idmon, _cauhois3;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              arr = ['A', 'B', 'C', 'D'];\n\n              try {\n                _req$body3 = req.body, _idmon = _req$body3._idmon, _cauhois3 = _req$body3.cauhois;\n\n                if (_cauhois3.length > 0) {\n                  _cauhois3.forEach( /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(item) {\n                      var arrPA, cauhoi, mon, respone, phuongana, phuonganb, phuonganc, phuongand, result_paa, result_pab, result_pac, result_pad;\n                      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                        while (1) {\n                          switch (_context11.prev = _context11.next) {\n                            case 0:\n                              arrPA = [];\n                              _context11.next = 3;\n                              return new CauHoi({\n                                noidung: item['Nội dung'],\n                                mon: _idmon,\n                                trangthai: 1\n                              });\n\n                            case 3:\n                              cauhoi = _context11.sent;\n                              _context11.next = 6;\n                              return Mon.findById(_idmon);\n\n                            case 6:\n                              mon = _context11.sent;\n                              _context11.next = 9;\n                              return cauhoi.save();\n\n                            case 9:\n                              respone = _context11.sent;\n                              mon.cauhois.push(respone._id);\n                              mon.save();\n                              _context11.next = 14;\n                              return new PhuongAn({\n                                ten: 'A',\n                                noidung: item['Phương án A'],\n                                dapan: item['Đáp án'] === 'A' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 14:\n                              phuongana = _context11.sent;\n                              _context11.next = 17;\n                              return new PhuongAn({\n                                ten: 'B',\n                                noidung: item['Phương án B'],\n                                dapan: item['Đáp án'] === 'B' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 17:\n                              phuonganb = _context11.sent;\n                              _context11.next = 20;\n                              return new PhuongAn({\n                                ten: 'C',\n                                noidung: item['Phương án C'],\n                                dapan: item['Đáp án'] === 'C' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 20:\n                              phuonganc = _context11.sent;\n                              _context11.next = 23;\n                              return new PhuongAn({\n                                ten: 'D',\n                                noidung: item['Phương án D'],\n                                dapan: item['Đáp án'] === 'D' ? true : false,\n                                cauhoi: respone._id,\n                                trangthai: 1\n                              });\n\n                            case 23:\n                              phuongand = _context11.sent;\n                              _context11.next = 26;\n                              return phuongana.save();\n\n                            case 26:\n                              result_paa = _context11.sent;\n                              arrPA.push(result_paa._id);\n                              _context11.next = 30;\n                              return phuonganb.save();\n\n                            case 30:\n                              result_pab = _context11.sent;\n                              arrPA.push(result_pab._id);\n                              _context11.next = 34;\n                              return phuonganc.save();\n\n                            case 34:\n                              result_pac = _context11.sent;\n                              arrPA.push(result_pac._id);\n                              _context11.next = 38;\n                              return phuongand.save();\n\n                            case 38:\n                              result_pad = _context11.sent;\n                              arrPA.push(result_pad._id);\n                              respone.phuongans = arrPA;\n                              respone.save();\n\n                            case 42:\n                            case \"end\":\n                              return _context11.stop();\n                          }\n                        }\n                      }, _callee11);\n                    }));\n\n                    return function (_x20) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                } //res.end()\t\n\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 2:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    function _import(_x18, _x19) {\n      return _import2.apply(this, arguments);\n    }\n\n    return _import;\n  }(),\n  // delete cauhoi (id)\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n      var _idcauhoi, cauhoi, mon, newCauhoi;\n\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _idcauhoi = req.params.id;\n              res.send('ok');\n              _context14.next = 4;\n              return CauHoi.findById(_idcauhoi).populate('dethis');\n\n            case 4:\n              cauhoi = _context14.sent;\n              _context14.prev = 5;\n              _context14.next = 8;\n              return Mon.findById(cauhoi.mon);\n\n            case 8:\n              mon = _context14.sent;\n\n              if (mon.cauhois) {\n                newCauhoi = mon.cauhois.filter(function (x) {\n                  return \"\".concat(x) != _idcauhoi;\n                });\n                mon.cauhois = newCauhoi;\n                mon.save();\n              }\n\n              if (cauhoi.dethis.length > 0) {\n                cauhois.dethi.forEach( /*#__PURE__*/function () {\n                  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(item) {\n                    var dethi, newCauhoi;\n                    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            _context13.next = 2;\n                            return DeThi.findById(item);\n\n                          case 2:\n                            dethi = _context13.sent;\n                            newCauhoi = dethi.filter(function (x) {\n                              return \"\".concat(x) != _idcauhoi;\n                            });\n                            dethi.cauhois = newCauhoi;\n                            dethi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee13);\n                  }));\n\n                  return function (_x23) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }());\n              } //res.send(cauhoi.mon)\n              //cauhoi.delete()\n\n\n              if (cauhoi.bailams.length === 0) {\n                cauhoi[\"delete\"]();\n              } else {\n                cauhoi.trangthai = 0;\n                cauhoi.save();\n              }\n\n              res.send('ok');\n              _context14.next = 18;\n              break;\n\n            case 15:\n              _context14.prev = 15;\n              _context14.t0 = _context14[\"catch\"](5);\n              res.send(_context14.t0);\n\n            case 18:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[5, 15]]);\n    }));\n\n    function destroy(_x21, _x22) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }(),\n  removeCauHoi: function () {\n    var _removeCauHoi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n      var _req$body4, _idcauhoi, _idmon, cauhoi, mon, newCauhois, phuongan, phuongans, result_mon;\n\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _req$body4 = req.body, _idcauhoi = _req$body4._idcauhoi, _idmon = _req$body4._idmon;\n              _context17.prev = 1;\n              _context17.next = 4;\n              return CauHoi.findById(_idcauhoi);\n\n            case 4:\n              cauhoi = _context17.sent;\n              _context17.next = 7;\n              return Mon.findById(cauhoi.mon);\n\n            case 7:\n              mon = _context17.sent;\n              newCauhois = mon.cauhois.filter(function (x) {\n                return \"\".concat(x) !== _idcauhoi;\n              });\n              mon.cauhois = newCauhois;\n              mon.save(); // de thi\n\n              cauhoi.dethis.forEach( /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(dt, idx) {\n                  var dethi, newCauhoiDeThi;\n                  return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                    while (1) {\n                      switch (_context15.prev = _context15.next) {\n                        case 0:\n                          _context15.next = 2;\n                          return DeThi.findById(dt);\n\n                        case 2:\n                          dethi = _context15.sent;\n                          newCauhoiDeThi = dethi.cauhois.filter(function (x) {\n                            return \"\".concat(x) !== _idcauhoi;\n                          });\n                          dethi.cauhois = newCauhoiDeThi;\n                          dethi.save(); // if(idx === cauhoi.dethis.length-1){\n                          // }\n\n                        case 6:\n                        case \"end\":\n                          return _context15.stop();\n                      }\n                    }\n                  }, _callee15);\n                }));\n\n                return function (_x26, _x27) {\n                  return _ref7.apply(this, arguments);\n                };\n              }()); // phuong an\t\t\t\t\n\n              if (!(cauhoi.baithis.length === 0)) {\n                _context17.next = 19;\n                break;\n              }\n\n              _context17.next = 15;\n              return PhuongAn.deleteMany({\n                cauhoi: _idcauhoi\n              });\n\n            case 15:\n              phuongan = _context17.sent;\n              cauhoi[\"delete\"]();\n              _context17.next = 25;\n              break;\n\n            case 19:\n              _context17.next = 21;\n              return PhuongAn.find({\n                cauhoi: _idcauhoi\n              });\n\n            case 21:\n              phuongans = _context17.sent;\n              phuongans.forEach( /*#__PURE__*/function () {\n                var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(phuongan) {\n                  return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                    while (1) {\n                      switch (_context16.prev = _context16.next) {\n                        case 0:\n                          phuongan.trangthai = 0;\n                          phuongan.save();\n\n                        case 2:\n                        case \"end\":\n                          return _context16.stop();\n                      }\n                    }\n                  }, _callee16);\n                }));\n\n                return function (_x28) {\n                  return _ref8.apply(this, arguments);\n                };\n              }());\n              cauhoi.trangthai = 0;\n              cauhoi.save();\n\n            case 25:\n              _context17.next = 27;\n              return Mon.findById(_idmon).populate('cauhois');\n\n            case 27:\n              result_mon = _context17.sent;\n              res.send({\n                result_mon: result_mon\n              });\n              _context17.next = 34;\n              break;\n\n            case 31:\n              _context17.prev = 31;\n              _context17.t0 = _context17[\"catch\"](1);\n              res.send(_context17.t0);\n\n            case 34:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[1, 31]]);\n    }));\n\n    function removeCauHoi(_x24, _x25) {\n      return _removeCauHoi.apply(this, arguments);\n    }\n\n    return removeCauHoi;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi.controller.js"
      ],
      "names": [
        "CauHoi",
        "require",
        "DeThi",
        "Mon",
        "PhuongAn",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "cauhoi",
        "send",
        "detail",
        "_idcauhoi",
        "params",
        "id",
        "findById",
        "questionOfSubject",
        "_idmon",
        "mon",
        "cauhois",
        "cauhoiCuaDethi",
        "_iddethi",
        "path",
        "model",
        "dethi",
        "push",
        "post",
        "body",
        "tieude",
        "noidung",
        "phuongan",
        "loai",
        "Cauhoi",
        "ma",
        "generate",
        "trangthai",
        "save",
        "then",
        "respone",
        "p_mon",
        "_id",
        "result",
        "json",
        "data",
        "err",
        "error",
        "themCauHoi",
        "phuongans",
        "forEach",
        "pa",
        "idx",
        "ten",
        "dapan",
        "result_pa",
        "length",
        "result_cauhoi",
        "result_mon",
        "arr",
        "item",
        "arrPA",
        "phuongana",
        "phuonganb",
        "phuonganc",
        "phuongand",
        "result_paa",
        "result_pab",
        "result_pac",
        "result_pad",
        "destroy",
        "newCauhoi",
        "filter",
        "x",
        "dethis",
        "bailams",
        "removeCauHoi",
        "newCauhois",
        "dt",
        "newCauhoiDeThi",
        "baithis",
        "deleteMany",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMK,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeT,MAAM,CAACU,IAAP,GAAcC,QAAd,CAAuB,KAAvB,CADf;;AAAA;AACAC,cAAAA,MADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAMfE,EAAAA,MAAM;AAAA,0EAAG,kBAAON,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFM,cAAAA,SADE,GACUP,GAAG,CAACQ,MAAJ,CAAWC,EADrB;AAAA;AAAA,qBAGajB,MAAM,CAACkB,QAAP,CAAgBH,SAAhB,CAHb;;AAAA;AAGFH,cAAAA,MAHE;AAIRH,cAAAA,GAAG,CAACI,IAAJ,CAASD,MAAT;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANS;AAYf;AACAO,EAAAA,iBAAiB;AAAA,qFAAG,kBAAOX,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZW,cAAAA,MADY,GACFZ,GAAG,CAACQ,MADF,CACZI,MADY;AAAA;AAAA;AAAA,qBAGEpB,MAAM,CAACU,IAAP,CAAY;AAACW,gBAAAA,GAAG,EAACD;AAAL,eAAZ,EAA0BT,QAA1B,CAAmC,WAAnC,CAHF;;AAAA;AAGdW,cAAAA,QAHc;AAIlBb,cAAAA,GAAG,CAACI,IAAJ,CAASS,QAAT;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlBb,cAAAA,GAAG,CAACI,IAAJ;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAbF;AAuBfU,EAAAA,cAAc;AAAA,kFAAG,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTe,cAAAA,QADS,GACGhB,GAAG,CAACQ,MADP,CACTQ,QADS;AAAA;AAGXF,cAAAA,SAHW,GAGD,EAHC,EAIf;;AAJe;AAAA,qBAKKpB,KAAK,CAACgB,QAAN,CAAeM,QAAf,EAAyBb,QAAzB,CAAkC;AACrDc,gBAAAA,IAAI,EAAC,SADgD;AAErDC,gBAAAA,KAAK,EAAC,QAF+C;AAGrDf,gBAAAA,QAAQ,EAAC;AACRc,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH4C,eAAlC,CALL;;AAAA;AAKTC,cAAAA,KALS;;AAcfL,cAAAA,SAAO,CAACM,IAAR,CAAaD,KAAb;;AACAlB,cAAAA,GAAG,CAACI,IAAJ,CAASS,SAAT;AAfe;AAAA;;AAAA;AAAA;AAAA;AAiBfb,cAAAA,GAAG,CAACI,IAAJ;;AAjBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvBC;AA4Cf;AACAgB,EAAAA,IAAI;AAAA,wEAAE,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgDD,GAAG,CAACsB,IADpD,EACOC,MADP,aACOA,MADP,EACeC,OADf,aACeA,OADf,EACwBC,QADxB,aACwBA,QADxB,EACkCC,IADlC,aACkCA,IADlC,EACwCb,GADxC,aACwCA,GADxC,EAGC;AACA;;AAJD;AAAA,qBAMgB,IAAIc,MAAJ,CAAW;AACtBC,gBAAAA,EAAE,EAAE/B,OAAO,CAACgC,QAAR,EADkB;AAEtBN,gBAAAA,MAAM,EAAEA,MAFc;AAGtBC,gBAAAA,OAAO,EAAEA,OAHa;AAItBE,gBAAAA,IAAI,EAAEA,IAJgB;AAKtBD,gBAAAA,QAAQ,EAACA,QALa;AAMtBZ,gBAAAA,GAAG,EAAEA,GANiB;AAOtBiB,gBAAAA,SAAS,EAAE;AAPW,eAAX,CANhB;;AAAA;AAMC1B,cAAAA,MAND;;AAeL,kBAAG;AACFA,gBAAAA,MAAM,CAAC2B,IAAP,GAAcC,IAAd;AAAA,qFAAmB,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACAtC,GAAG,CAACe,QAAJ,CAAaG,GAAb,CADA;;AAAA;AACdqB,4BAAAA,KADc;AAElBA,4BAAAA,KAAK,CAACpB,OAAN,CAAcM,IAAd,CAAmBa,OAAO,CAACE,GAA3B;AACAD,4BAAAA,KAAK,CAACH,IAAN;AAHkB;AAAA,mCAKCvC,MAAM,CAACU,IAAP,GAAcC,QAAd,CAAuB,KAAvB,CALD;;AAAA;AAKdiC,4BAAAA,MALc;AAMlBnC,4BAAAA,GAAG,CAACoC,IAAJ,CAAS;AACRD,8BAAAA,MAAM,EAAG,SADD;AAERE,8BAAAA,IAAI,EAAEF;AAFE,6BAAT;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;;AAAA;AAAA;AAAA;AAAA;AAWA,eAZD,CAYE,OAAMG,GAAN,EAAU;AACXtC,gBAAAA,GAAG,CAACoC,IAAJ,CAAS;AACRG,kBAAAA,KAAK,EAAGA;AADA,iBAAT;AAGA;;AA/BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7CW;AA8Ef;AACAC,EAAAA,UAAU;AAAA,8EAAE,mBAAOzC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BAC0BD,GAAG,CAACsB,IAD9B,EACJE,OADI,cACJA,OADI,EACKkB,SADL,cACKA,SADL,EACgB9B,MADhB,cACgBA,MADhB;AAAA;AAAA;AAAA,qBAGW,IAAIpB,MAAJ,CAAW;AAC/BgC,gBAAAA,OAAO,EAAEA,OADsB;AAE/BX,gBAAAA,GAAG,EAACD,MAF2B;AAG/BkB,gBAAAA,SAAS,EAAC;AAHqB,eAAX,CAHX;;AAAA;AAGJ1B,cAAAA,MAHI;AASVA,cAAAA,MAAM,CAAC2B,IAAP,GAAcC,IAAd;AAAA,oFAAmB,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACAtC,GAAG,CAACe,QAAJ,CAAaE,MAAb,CADA;;AAAA;AACZC,0BAAAA,GADY;AAEjBA,0BAAAA,GAAG,CAACC,OAAJ,CAAYM,IAAZ,CAAiBa,OAAO,CAACE,GAAzB;AACAtB,0BAAAA,GAAG,CAACkB,IAAJ;AACDW,0BAAAA,SAAS,CAACC,OAAV;AAAA,gGAAkB,kBAAOC,EAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACI,IAAIjD,QAAJ,CAAa;AACjCkD,wCAAAA,GAAG,EAAEF,EAAE,CAACE,GADyB;AAEjCtB,wCAAAA,OAAO,EAAEoB,EAAE,CAACpB,OAFqB;AAGjCuB,wCAAAA,KAAK,EAAEH,EAAE,CAACG,KAHuB;AAIjC3C,wCAAAA,MAAM,EAAE6B,OAAO,CAACE;AAJiB,uCAAb,CADJ;;AAAA;AACbV,sCAAAA,QADa;AAOjBA,sCAAAA,QAAQ,CAACM,IAAT,GAAgBC,IAAhB;AAAA,4GAAqB,kBAAOgB,SAAP;AAAA;AAAA;AAAA;AAAA;AACpBf,kDAAAA,OAAO,CAACS,SAAR,CAAkBtB,IAAlB,CAAuB4B,SAAS,CAACb,GAAjC;AACAF,kDAAAA,OAAO,CAACF,IAAR;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAArB;;AAAA;AAAA;AAAA;AAAA;;AAPiB,4CAWdc,GAAG,KAAKH,SAAS,CAACO,MAAV,GAAiB,CAXX;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAYUzD,MAAM,CAACkB,QAAP,CAAgBuB,OAAO,CAACE,GAAxB,EAA6BhC,QAA7B,CAAsC,WAAtC,CAZV;;AAAA;AAYZ+C,sCAAAA,aAZY;AAAA;AAAA,6CAaOvD,GAAG,CAACe,QAAJ,CAAaE,MAAb,EAAqBT,QAArB,CAA8B,SAA9B,CAbP;;AAAA;AAaZgD,sCAAAA,UAbY;AAchBlD,sCAAAA,GAAG,CAACI,IAAJ,CAAS;AAAC6C,wCAAAA,aAAa,EAAbA,aAAD;AAAgBC,wCAAAA,UAAU,EAAVA;AAAhB,uCAAT;;AAdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAlB;;AAAA;AAAA;AAAA;AAAA;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB;;AAAA;AAAA;AAAA;AAAA;AATU;AAAA;;AAAA;AAAA;AAAA;AAgCVlD,cAAAA,GAAG,CAACI,IAAJ;;AAhCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/EK;AAmHf;AACA;AAAA,2EAAS,mBAAOL,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFmD,cAAAA,GADE,GACG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADH;;AAER,kBAAG;AAAA,6BACwBpD,GAAG,CAACsB,IAD5B,EACKV,MADL,cACKA,MADL,EACaE,SADb,cACaA,OADb;;AAEF,oBAAGA,SAAO,CAACmC,MAAR,GAAe,CAAlB,EAAoB;AACnBnC,kBAAAA,SAAO,CAAC6B,OAAR;AAAA,wFAAgB,mBAAOU,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,8BAAAA,KADW,GACH,EADG;AAAA;AAAA,qCAEM,IAAI9D,MAAJ,CAAW;AAC/BgC,gCAAAA,OAAO,EAAE6B,IAAI,CAAC,UAAD,CADkB;AAE/BxC,gCAAAA,GAAG,EAACD,MAF2B;AAG/BkB,gCAAAA,SAAS,EAAC;AAHqB,+BAAX,CAFN;;AAAA;AAET1B,8BAAAA,MAFS;AAAA;AAAA,qCAOGT,GAAG,CAACe,QAAJ,CAAaE,MAAb,CAPH;;AAAA;AAOTC,8BAAAA,GAPS;AAAA;AAAA,qCAQOT,MAAM,CAAC2B,IAAP,EARP;;AAAA;AAQTE,8BAAAA,OARS;AASdpB,8BAAAA,GAAG,CAACC,OAAJ,CAAYM,IAAZ,CAAiBa,OAAO,CAACE,GAAzB;AACAtB,8BAAAA,GAAG,CAACkB,IAAJ;AAVc;AAAA,qCAWS,IAAInC,QAAJ,CAAa;AACpCkD,gCAAAA,GAAG,EAAC,GADgC;AAEpCtB,gCAAAA,OAAO,EAAE6B,IAAI,CAAC,aAAD,CAFuB;AAGpCN,gCAAAA,KAAK,EAAEM,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpCjD,gCAAAA,MAAM,EAAC6B,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CAXT;;AAAA;AAWTyB,8BAAAA,SAXS;AAAA;AAAA,qCAkBS,IAAI3D,QAAJ,CAAa;AACpCkD,gCAAAA,GAAG,EAAC,GADgC;AAEpCtB,gCAAAA,OAAO,EAAE6B,IAAI,CAAC,aAAD,CAFuB;AAGpCN,gCAAAA,KAAK,EAAEM,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpCjD,gCAAAA,MAAM,EAAC6B,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CAlBT;;AAAA;AAkBT0B,8BAAAA,SAlBS;AAAA;AAAA,qCA0BS,IAAI5D,QAAJ,CAAa;AACpCkD,gCAAAA,GAAG,EAAC,GADgC;AAEpCtB,gCAAAA,OAAO,EAAE6B,IAAI,CAAC,aAAD,CAFuB;AAGpCN,gCAAAA,KAAK,EAAEM,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpCjD,gCAAAA,MAAM,EAAC6B,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CA1BT;;AAAA;AA0BT2B,8BAAAA,SA1BS;AAAA;AAAA,qCAkCS,IAAI7D,QAAJ,CAAa;AACpCkD,gCAAAA,GAAG,EAAC,GADgC;AAEpCtB,gCAAAA,OAAO,EAAE6B,IAAI,CAAC,aAAD,CAFuB;AAGpCN,gCAAAA,KAAK,EAAEM,IAAI,CAAC,QAAD,CAAJ,KAAmB,GAAnB,GAAyB,IAAzB,GAAgC,KAHH;AAIpCjD,gCAAAA,MAAM,EAAC6B,OAAO,CAACE,GAJqB;AAKpCL,gCAAAA,SAAS,EAAC;AAL0B,+BAAb,CAlCT;;AAAA;AAkCT4B,8BAAAA,SAlCS;AAAA;AAAA,qCA0CUH,SAAS,CAACxB,IAAV,EA1CV;;AAAA;AA0CT4B,8BAAAA,UA1CS;AA2CfL,8BAAAA,KAAK,CAAClC,IAAN,CAAWuC,UAAU,CAACxB,GAAtB;AA3Ce;AAAA,qCA4CUqB,SAAS,CAACzB,IAAV,EA5CV;;AAAA;AA4CT6B,8BAAAA,UA5CS;AA6CfN,8BAAAA,KAAK,CAAClC,IAAN,CAAWwC,UAAU,CAACzB,GAAtB;AA7Ce;AAAA,qCA8CUsB,SAAS,CAAC1B,IAAV,EA9CV;;AAAA;AA8CT8B,8BAAAA,UA9CS;AA+CfP,8BAAAA,KAAK,CAAClC,IAAN,CAAWyC,UAAU,CAAC1B,GAAtB;AA/Ce;AAAA,qCAgDUuB,SAAS,CAAC3B,IAAV,EAhDV;;AAAA;AAgDT+B,8BAAAA,UAhDS;AAiDfR,8BAAAA,KAAK,CAAClC,IAAN,CAAW0C,UAAU,CAAC3B,GAAtB;AAEAF,8BAAAA,OAAO,CAACS,SAAR,GAAoBY,KAApB;AACArB,8BAAAA,OAAO,CAACF,IAAR;;AApDe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhB;;AAAA;AAAA;AAAA;AAAA;AAsDA,iBAzDC,CA0DH;;AACC,eA3DD,CA2DE,OAAMQ,GAAN,EAAU;AACXtC,gBAAAA,GAAG,CAACI,IAAJ,CAASkC,GAAT;AACA;;AA/DO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApHe;AAqLf;AACAwB,EAAAA,OAAO;AAAA,2EAAE,mBAAO/D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJM,cAAAA,SADI,GACQP,GAAG,CAACQ,MAAJ,CAAWC,EADnB;AAERR,cAAAA,GAAG,CAACI,IAAJ,CAAS,IAAT;AAFQ;AAAA,qBAIab,MAAM,CAACkB,QAAP,CAAgBH,SAAhB,EAA2BJ,QAA3B,CAAoC,QAApC,CAJb;;AAAA;AAIFC,cAAAA,MAJE;AAAA;AAAA;AAAA,qBAMWT,GAAG,CAACe,QAAJ,CAAaN,MAAM,CAACS,GAApB,CANX;;AAAA;AAMDA,cAAAA,GANC;;AAOP,kBAAGA,GAAG,CAACC,OAAP,EAAe;AACVkD,gBAAAA,SADU,GACEnD,GAAG,CAACC,OAAJ,CAAYmD,MAAZ,CAAmB,UAAAC,CAAC;AAAA,yBAAE,UAAGA,CAAH,KAAS3D,SAAX;AAAA,iBAApB,CADF;AAEdM,gBAAAA,GAAG,CAACC,OAAJ,GAAckD,SAAd;AACAnD,gBAAAA,GAAG,CAACkB,IAAJ;AACA;;AACD,kBAAG3B,MAAM,CAAC+D,MAAP,CAAclB,MAAd,GAAuB,CAA1B,EAA4B;AAC3BnC,gBAAAA,OAAO,CAACK,KAAR,CAAcwB,OAAd;AAAA,sFAAsB,mBAAMU,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACH3D,KAAK,CAACgB,QAAN,CAAe2C,IAAf,CADG;;AAAA;AACjBlC,4BAAAA,KADiB;AAEjB6C,4BAAAA,SAFiB,GAEL7C,KAAK,CAAC8C,MAAN,CAAa,UAAAC,CAAC;AAAA,qCAAI,UAAGA,CAAH,KAAS3D,SAAb;AAAA,6BAAd,CAFK;AAGrBY,4BAAAA,KAAK,CAACL,OAAN,GAAgBkD,SAAhB;AACA7C,4BAAAA,KAAK,CAACY,IAAN;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA;AAMA,eAnBM,CAoBP;AACA;;;AACA,kBAAI3B,MAAM,CAACgE,OAAP,CAAenB,MAAf,KAAwB,CAA5B,EAA8B;AAC7B7C,gBAAAA,MAAM,UAAN;AACA,eAFD,MAEO;AACNA,gBAAAA,MAAM,CAAC0B,SAAP,GAAmB,CAAnB;AACA1B,gBAAAA,MAAM,CAAC2B,IAAP;AACA;;AACD9B,cAAAA,GAAG,CAACI,IAAJ,CAAS,IAAT;AA5BO;AAAA;;AAAA;AAAA;AAAA;AA8BPJ,cAAAA,GAAG,CAACI,IAAJ;;AA9BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtLQ;AAwNfgE,EAAAA,YAAY;AAAA,gFAAE,mBAAOrE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BACeD,GAAG,CAACsB,IADnB,EACNf,SADM,cACNA,SADM,EACKK,MADL,cACKA,MADL;AAAA;AAAA;AAAA,qBAISpB,MAAM,CAACkB,QAAP,CAAgBH,SAAhB,CAJT;;AAAA;AAINH,cAAAA,MAJM;AAAA;AAAA,qBAKMT,GAAG,CAACe,QAAJ,CAAaN,MAAM,CAACS,GAApB,CALN;;AAAA;AAKNA,cAAAA,GALM;AAMPyD,cAAAA,UANO,GAMMzD,GAAG,CAACC,OAAJ,CAAYmD,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAG,UAAGA,CAAH,MAAS3D,SAAZ;AAAA,eAApB,CANN;AAOXM,cAAAA,GAAG,CAACC,OAAJ,GAAcwD,UAAd;AACAzD,cAAAA,GAAG,CAACkB,IAAJ,GARW,CAUZ;;AACC3B,cAAAA,MAAM,CAAC+D,MAAP,CAAcxB,OAAd;AAAA,oFAAsB,mBAAO4B,EAAP,EAAW1B,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACHnD,KAAK,CAACgB,QAAN,CAAe6D,EAAf,CADG;;AAAA;AACjBpD,0BAAAA,KADiB;AAEjBqD,0BAAAA,cAFiB,GAEArD,KAAK,CAACL,OAAN,CAAcmD,MAAd,CAAqB,UAAAC,CAAC;AAAA,mCAAG,UAAGA,CAAH,MAAU3D,SAAb;AAAA,2BAAtB,CAFA;AAGpBY,0BAAAA,KAAK,CAACL,OAAN,GAAgB0D,cAAhB;AACArD,0BAAAA,KAAK,CAACY,IAAN,GAJoB,CAMrB;AAEA;;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAtB;;AAAA;AAAA;AAAA;AAAA,mBAXW,CAqBZ;;AArBY,oBAuBP3B,MAAM,CAACqE,OAAP,CAAexB,MAAf,KAA0B,CAvBnB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAwBWrD,QAAQ,CAAC8E,UAAT,CAAoB;AAACtE,gBAAAA,MAAM,EAACG;AAAR,eAApB,CAxBX;;AAAA;AAwBNkB,cAAAA,QAxBM;AAyBVrB,cAAAA,MAAM,UAAN;AAzBU;AAAA;;AAAA;AAAA;AAAA,qBA2BYR,QAAQ,CAACM,IAAT,CAAc;AAACE,gBAAAA,MAAM,EAACG;AAAR,eAAd,CA3BZ;;AAAA;AA2BNmC,cAAAA,SA3BM;AA4BTA,cAAAA,SAAS,CAACC,OAAV;AAAA,oFAAkB,mBAAMlB,QAAN;AAAA;AAAA;AAAA;AAAA;AACjBA,0BAAAA,QAAQ,CAACK,SAAT,GAAqB,CAArB;AACAL,0BAAAA,QAAQ,CAACM,IAAT;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB;;AAAA;AAAA;AAAA;AAAA;AAID3B,cAAAA,MAAM,CAAC0B,SAAP,GAAmB,CAAnB;AACA1B,cAAAA,MAAM,CAAC2B,IAAP;;AAjCU;AAAA;AAAA,qBAoCcpC,GAAG,CAACe,QAAJ,CAAaE,MAAb,EAAqBT,QAArB,CAA8B,SAA9B,CApCd;;AAAA;AAoCLgD,cAAAA,UApCK;AAqCXlD,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAAC8C,gBAAAA,UAAU,EAAVA;AAAD,eAAT;AArCW;AAAA;;AAAA;AAAA;AAAA;AAyCZlD,cAAAA,GAAG,CAACI,IAAJ;;AAzCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAxNG,CAAhB;AAsQAsE,MAAM,CAACC,OAAP,GAAiB9E,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let CauHoi = require('../models/cauhoi.model')\r\nlet DeThi = require('../models/dethi.model')\r\nlet Mon = require('../models/mon.model')\r\nlet PhuongAn = require('../models/phuongan.model')\r\nvar shortid = require('shortid');\r\n\r\nconst methods = {\r\n\tindex: async (req, res)=>{\r\n\t\tconst cauhoi = await CauHoi.find().populate('mon')\r\n\t\tres.send(cauhoi)\r\n\t},\r\n\r\n\tdetail : async (req, res)=>{\r\n\t\tconst _idcauhoi = req.params.id\r\n\r\n\t\tconst cauhoi = await CauHoi.findById(_idcauhoi)\r\n\t\tres.send(cauhoi)\r\n\t},\r\n\t// cau hoi cua mon\r\n\tquestionOfSubject : async (req, res)=> {\r\n\t\tconst {_idmon} = req.params\r\n\t\ttry{\r\n\t\t\tlet cauhois = await CauHoi.find({mon:_idmon}).populate('phuongans')\r\n\t\t\tres.send(cauhois)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\r\n\tcauhoiCuaDethi : async (req, res)=>{\r\n\t\tconst {_iddethi} = req.params\r\n\t\ttry{\r\n\t\t\tlet cauhois = []\r\n\t\t\t//const dethi = await DeThi.findById(_iddethi).populate('cauhois').select('cauhois')\r\n\t\t\tconst dethi = await DeThi.findById(_iddethi).populate({\r\n\t\t\t\tpath:'cauhois',\r\n\t\t\t\tmodel:'CauHoi',\r\n\t\t\t\tpopulate:{\r\n\t\t\t\t\tpath:'phuongans',\r\n\t\t\t\t\tmodel:'PhuongAn'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tcauhois.push(dethi)\r\n\t\t\tres.send(cauhois)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\t\t\r\n\t},\r\n\r\n\t// add cau hoi \r\n\tpost: async (req, res)=>{\r\n        let { tieude, noidung, phuongan, loai, mon } = req.body\r\n        \r\n        // let ma = req.body.ma\r\n        // let ten = req.body.ten\r\n\r\n\t\tconst cauhoi = await new Cauhoi({\r\n            ma: shortid.generate(),\r\n            tieude: tieude,\r\n            noidung: noidung,\r\n            loai: loai,\r\n            phuongan:phuongan,\r\n            mon: mon,\r\n            trangthai: 1,\r\n\t\t})\r\n\t\ttry{\r\n\t\t\tcauhoi.save().then(async (respone)=>{\r\n\t\t\t\tlet p_mon = await Mon.findById(mon)\r\n\t\t\t\tp_mon.cauhois.push(respone._id)\r\n\t\t\t\tp_mon.save()\r\n\r\n\t\t\t\tlet result = await CauHoi.find().populate('mon')\r\n\t\t\t\tres.json({\r\n\t\t\t\t\tresult : \"success\",\r\n\t\t\t\t\tdata: result\r\n\t\t\t\t})\r\n\t\t\t})\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.json({\r\n\t\t\t\terror : error \r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// add question\r\n\tthemCauHoi: async (req, res)=>{\r\n\t\tconst {noidung, phuongans, _idmon} = req.body\t\t\r\n\t\ttry {\t\t\t\r\n\t\t\tconst cauhoi = await new CauHoi({\t\t\t\t\r\n\t\t\t\tnoidung: noidung,\t\t\t\t\r\n\t\t\t\tmon:_idmon,\r\n\t\t\t\ttrangthai:1\r\n\t\t\t})\t\t\t\r\n\t\t\t\t\t\r\n\t\t\tcauhoi.save().then(async respone=>{\r\n\t\t\t\tconst mon = await Mon.findById(_idmon)\r\n\t\t\t\t\tmon.cauhois.push(respone._id)\r\n\t\t\t\t\tmon.save()\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tphuongans.forEach(async (pa, idx)=>{\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tlet phuongan = await new PhuongAn({\r\n\t\t\t\t\t\tten: pa.ten,\r\n\t\t\t\t\t\tnoidung: pa.noidung,\r\n\t\t\t\t\t\tdapan: pa.dapan,\r\n\t\t\t\t\t\tcauhoi: respone._id\r\n\t\t\t\t\t})\r\n\t\t\t\t\tphuongan.save().then(async (result_pa)=>{\r\n\t\t\t\t\t\trespone.phuongans.push(result_pa._id)\r\n\t\t\t\t\t\trespone.save()\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif(idx === phuongans.length-1){\r\n\t\t\t\t\t\tlet result_cauhoi = await CauHoi.findById(respone._id).populate('phuongans')\r\n\t\t\t\t\t\tlet result_mon = await Mon.findById(_idmon).populate('cauhois')\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.send({result_cauhoi, result_mon})\r\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t})\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\r\n\t},\r\n\t// import cau hoi {_idmon, cauhois[]}\r\n\timport : async (req, res)=>{\r\n\t\tconst arr =['A', 'B', 'C', 'D']\t\r\n\t\ttry{\r\n\t\t\tconst {_idmon, cauhois} = req.body\r\n\t\t\tif(cauhois.length>0){\t\t\t\t\r\n\t\t\t\tcauhois.forEach(async (item)=>{\t\t\r\n\t\t\t\t\tlet arrPA = []\t\t\t\r\n\t\t\t\t\tconst cauhoi = await new CauHoi({\r\n\t\t\t\t\t\tnoidung: item['Nội dung'],\r\n\t\t\t\t\t\tmon:_idmon,\r\n\t\t\t\t\t\ttrangthai:1\r\n\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tconst mon = await Mon.findById(_idmon)\t\r\n\t\t\t\t\tconst respone = await cauhoi.save()\r\n\t\t\t\t\t\tmon.cauhois.push(respone._id)\r\n\t\t\t\t\t\tmon.save()\r\n\t\t\t\t\tconst phuongana = await new PhuongAn({\r\n\t\t\t\t\t\tten:'A',\r\n\t\t\t\t\t\tnoidung: item['Phương án A'],\r\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'A' ? true : false,\r\n\t\t\t\t\t\tcauhoi:respone._id,\r\n\t\t\t\t\t\ttrangthai:1\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconst phuonganb = await new PhuongAn({\r\n\t\t\t\t\t\tten:'B',\r\n\t\t\t\t\t\tnoidung: item['Phương án B'],\r\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'B' ? true : false,\r\n\t\t\t\t\t\tcauhoi:respone._id,\r\n\t\t\t\t\t\ttrangthai:1\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tconst phuonganc = await new PhuongAn({\r\n\t\t\t\t\t\tten:'C',\r\n\t\t\t\t\t\tnoidung: item['Phương án C'],\r\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'C' ? true : false,\r\n\t\t\t\t\t\tcauhoi:respone._id,\r\n\t\t\t\t\t\ttrangthai:1\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tconst phuongand = await new PhuongAn({\r\n\t\t\t\t\t\tten:'D',\r\n\t\t\t\t\t\tnoidung: item['Phương án D'],\r\n\t\t\t\t\t\tdapan: item['Đáp án'] === 'D' ? true : false,\r\n\t\t\t\t\t\tcauhoi:respone._id,\r\n\t\t\t\t\t\ttrangthai:1\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tconst result_paa = await phuongana.save()\t\t\t\t\t\t\r\n\t\t\t\t\tarrPA.push(result_paa._id)\r\n\t\t\t\t\tconst result_pab = await phuonganb.save()\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tarrPA.push(result_pab._id)\r\n\t\t\t\t\tconst result_pac = await phuonganc.save()\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tarrPA.push(result_pac._id)\r\n\t\t\t\t\tconst result_pad = await phuongand.save()\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tarrPA.push(result_pad._id)\r\n\r\n\t\t\t\t\trespone.phuongans = arrPA\r\n\t\t\t\t\trespone.save()\r\n\t\t\t\t})\t\t\t\t\r\n\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t//res.end()\t\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\t// delete cauhoi (id)\r\n\tdestroy: async (req, res)=>{\t\r\n\t\tlet _idcauhoi = req.params.id\r\n\t\tres.send('ok')\r\n\r\n\t\tconst cauhoi = await CauHoi.findById(_idcauhoi).populate('dethis')\r\n\t\ttry{\t\t\t\r\n\t\t\tconst mon = await Mon.findById(cauhoi.mon)\t\t\t\t\t\t\r\n\t\t\tif(mon.cauhois){\r\n\t\t\t\tlet newCauhoi = mon.cauhois.filter(x=>`${x}`!= _idcauhoi)\r\n\t\t\t\tmon.cauhois = newCauhoi\r\n\t\t\t\tmon.save()\r\n\t\t\t}\t\t\t\r\n\t\t\tif(cauhoi.dethis.length > 0){\r\n\t\t\t\tcauhois.dethi.forEach(async item=>{\r\n\t\t\t\t\tlet dethi = await DeThi.findById(item)\r\n\t\t\t\t\tlet newCauhoi = dethi.filter(x => `${x}`!= _idcauhoi)\r\n\t\t\t\t\tdethi.cauhois = newCauhoi\r\n\t\t\t\t\tdethi.save()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t//res.send(cauhoi.mon)\r\n\t\t\t//cauhoi.delete()\r\n\t\t\tif (cauhoi.bailams.length===0){\r\n\t\t\t\tcauhoi.delete()\r\n\t\t\t} else {\r\n\t\t\t\tcauhoi.trangthai = 0\r\n\t\t\t\tcauhoi.save()\r\n\t\t\t}\r\n\t\t\tres.send('ok')\r\n\t\t}catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t\t//res.send(user)\r\n\t},\r\n\tremoveCauHoi: async (req, res)=>{\r\n\t\tconst {_idcauhoi, _idmon} = req.body\r\n\r\n\t\ttry{\r\n\t\t\tconst cauhoi = await CauHoi.findById(_idcauhoi)\r\n\t\t\tconst mon = await Mon.findById(cauhoi.mon)\r\n\t\t\t\tlet newCauhois = mon.cauhois.filter(x=> `${x}`!==_idcauhoi)\r\n\t\t\t\tmon.cauhois = newCauhois\r\n\t\t\t\tmon.save()\r\n\r\n\t\t\t// de thi\r\n\t\t\t\tcauhoi.dethis.forEach(async (dt, idx)=>{\r\n\t\t\t\t\tlet dethi = await DeThi.findById(dt)\r\n\t\t\t\t\tlet newCauhoiDeThi = dethi.cauhois.filter(x=> `${x}`!== _idcauhoi)\r\n\t\t\t\t\t\tdethi.cauhois = newCauhoiDeThi\r\n\t\t\t\t\t\tdethi.save()\r\n\r\n\t\t\t\t\t// if(idx === cauhoi.dethis.length-1){\r\n\r\n\t\t\t\t\t// }\r\n\t\t\t\t})\r\n\t\t\t// phuong an\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif (cauhoi.baithis.length === 0){\r\n\t\t\t\t\tlet phuongan = await PhuongAn.deleteMany({cauhoi:_idcauhoi})\r\n\t\t\t\t\tcauhoi.delete()\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet phuongans = await PhuongAn.find({cauhoi:_idcauhoi})\r\n\t\t\t\t\t\tphuongans.forEach(async phuongan=>{\r\n\t\t\t\t\t\t\tphuongan.trangthai = 0\r\n\t\t\t\t\t\t\tphuongan.save()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\tcauhoi.trangthai = 0\r\n\t\t\t\t\tcauhoi.save()\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst result_mon = await Mon.findById(_idmon).populate('cauhois') \r\n\t\t\t\tres.send({result_mon})\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903181
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\cauhoi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\cauhoi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\cauhoi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\cauhoi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "cauhoi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  tieude: String,\n  noidung: String,\n  phuongans: [{\n    type: Schema.Types.ObjectId,\n    ref: \"PhuongAn\"\n  }],\n  mon: {\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  },\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  baithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"BaiThi\"\n  }],\n  trangthai: Number // 0 xoa, 1 ton tai...\n\n});\nvar CauHoi = mongoose.model('CauHoi', schema);\nmodule.exports = CauHoi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdWhvaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJ0aWV1ZGUiLCJTdHJpbmciLCJub2lkdW5nIiwicGh1b25nYW5zIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb24iLCJkZXRoaXMiLCJiYWl0aGlzIiwidHJhbmd0aGFpIiwiTnVtYmVyIiwiQ2F1SG9pIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsTUFBTSxFQUFFQyxNQUZZO0FBR3BCQyxFQUFBQSxPQUFPLEVBQUVELE1BSFc7QUFLcEJFLEVBQUFBLFNBQVMsRUFBQyxDQUFDO0FBQ1BDLElBQUFBLElBQUksRUFBQ04sTUFBTSxDQUFDTyxLQUFQLENBQWFDLFFBRFg7QUFFUEMsSUFBQUEsR0FBRyxFQUFDO0FBRkcsR0FBRCxDQUxVO0FBVXRCQyxFQUFBQSxHQUFHLEVBQUM7QUFDSkosSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQSxHQVZrQjtBQWNwQkUsRUFBQUEsTUFBTSxFQUFDLENBQUM7QUFDSkwsSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQSxHQUFELENBZGE7QUFrQnBCRyxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNMTixJQUFBQSxJQUFJLEVBQUNOLE1BQU0sQ0FBQ08sS0FBUCxDQUFhQyxRQURiO0FBRUxDLElBQUFBLEdBQUcsRUFBQztBQUZDLEdBQUQsQ0FsQlk7QUFzQnBCSSxFQUFBQSxTQUFTLEVBQUNDLE1BdEJVLENBc0JGOztBQXRCRSxDQUFYLENBQWI7QUEwQkEsSUFBSUMsTUFBTSxHQUFHakIsUUFBUSxDQUFDa0IsS0FBVCxDQUFlLFFBQWYsRUFBeUJmLE1BQXpCLENBQWI7QUFFQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcclxuXHJcbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcclxuXHJcbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgICAgICBcclxuICAgIHRpZXVkZTogU3RyaW5nLFxyXG4gICAgbm9pZHVuZzogU3RyaW5nLCAgICBcclxuICAgIFxyXG4gICAgcGh1b25nYW5zOlt7XHJcbiAgICAgICAgdHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgcmVmOlwiUGh1b25nQW5cIlxyXG4gICAgfV0sXHJcblxyXG4gXHRtb246e1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJNb25cIlxyXG5cdH0sXHJcbiAgICBkZXRoaXM6W3tcclxuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICByZWY6XCJEZVRoaVwiXHJcbiAgICB9XSxcclxuICAgIGJhaXRoaXM6W3tcclxuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICByZWY6XCJCYWlUaGlcIlxyXG4gICAgfV0sXHJcbiAgICB0cmFuZ3RoYWk6TnVtYmVyLCAvLyAwIHhvYSwgMSB0b24gdGFpLi4uXHJcblxyXG59KVxyXG5cclxudmFyIENhdUhvaSA9IG1vbmdvb3NlLm1vZGVsKCdDYXVIb2knLCBzY2hlbWEpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENhdUhvaSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "cauhoi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "tieude",
        "String",
        "noidung",
        "phuongans",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "mon",
        "dethis",
        "baithis",
        "trangthai",
        "Number",
        "CauHoi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,MAAM,EAAEC,MAFY;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAKpBE,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CALU;AAUtBC,EAAAA,GAAG,EAAC;AACJJ,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAVkB;AAcpBE,EAAAA,MAAM,EAAC,CAAC;AACJL,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD,CAda;AAkBpBG,EAAAA,OAAO,EAAC,CAAC;AACLN,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD,CAlBY;AAsBpBI,EAAAA,SAAS,EAACC,MAtBU,CAsBF;;AAtBE,CAAX,CAAb;AA0BA,IAAIC,MAAM,GAAGjB,QAAQ,CAACkB,KAAT,CAAe,QAAf,EAAyBf,MAAzB,CAAb;AAEAgB,MAAM,CAACC,OAAP,GAAiBH,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n        \r\n    tieude: String,\r\n    noidung: String,    \r\n    \r\n    phuongans:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"PhuongAn\"\r\n    }],\r\n\r\n \tmon:{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"Mon\"\r\n\t},\r\n    dethis:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"DeThi\"\r\n    }],\r\n    baithis:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"BaiThi\"\r\n    }],\r\n    trangthai:Number, // 0 xoa, 1 ton tai...\r\n\r\n})\r\n\r\nvar CauHoi = mongoose.model('CauHoi', schema)\r\n\r\nmodule.exports = CauHoi"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903196
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\dethi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\dethi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\dethi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\dethi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "dethi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  tieude: String,\n  thoigian: Number,\n  namhoc: String,\n  ghichu: String,\n  trangthai: Number,\n  cauhois: [{\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  }],\n  mon: {\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  },\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }]\n});\nvar DeThi = mongoose.model('DeThi', schema);\nmodule.exports = DeThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGhpLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsIm1hIiwiU3RyaW5nIiwidGlldWRlIiwidGhvaWdpYW4iLCJOdW1iZXIiLCJuYW1ob2MiLCJnaGljaHUiLCJ0cmFuZ3RoYWkiLCJjYXVob2lzIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb24iLCJraXRoaXMiLCJEZVRoaSIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF0QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFFcEJFLEVBQUFBLEVBQUUsRUFBRUMsTUFGZ0I7QUFHcEJDLEVBQUFBLE1BQU0sRUFBQ0QsTUFIYTtBQUlwQkUsRUFBQUEsUUFBUSxFQUFFQyxNQUpVO0FBS3BCQyxFQUFBQSxNQUFNLEVBQUVKLE1BTFk7QUFNcEJLLEVBQUFBLE1BQU0sRUFBRUwsTUFOWTtBQU9wQk0sRUFBQUEsU0FBUyxFQUFFSCxNQVBTO0FBU3RCSSxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNUQyxJQUFBQSxJQUFJLEVBQUNYLE1BQU0sQ0FBQ1ksS0FBUCxDQUFhQyxRQURUO0FBRVRDLElBQUFBLEdBQUcsRUFBQztBQUZLLEdBQUQsQ0FUYztBQWN2QkMsRUFBQUEsR0FBRyxFQUFDO0FBQ0hKLElBQUFBLElBQUksRUFBQ1gsTUFBTSxDQUFDWSxLQUFQLENBQWFDLFFBRGY7QUFFSEMsSUFBQUEsR0FBRyxFQUFDO0FBRkQsR0FkbUI7QUFtQnZCRSxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNQTCxJQUFBQSxJQUFJLEVBQUNYLE1BQU0sQ0FBQ1ksS0FBUCxDQUFhQyxRQURYO0FBRVBDLElBQUFBLEdBQUcsRUFBQztBQUZHLEdBQUQ7QUFuQmdCLENBQVgsQ0FBYjtBQXlCQSxJQUFJRyxLQUFLLEdBQUduQixRQUFRLENBQUNvQixLQUFULENBQWUsT0FBZixFQUF3QmpCLE1BQXhCLENBQVo7QUFFQWtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsS0FBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcclxuXHJcbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcclxuXHJcbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuXHJcbiAgICBtYTogU3RyaW5nLFxyXG4gICAgdGlldWRlOlN0cmluZyxcclxuICAgIHRob2lnaWFuOiBOdW1iZXIsICAgIFxyXG4gICAgbmFtaG9jOiBTdHJpbmcsXHJcbiAgICBnaGljaHU6IFN0cmluZyxcclxuICAgIHRyYW5ndGhhaTogTnVtYmVyLFxyXG4gXHRcclxuIFx0Y2F1aG9pczpbe1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJDYXVIb2lcIlxyXG5cdH1dLFxyXG5cclxuXHRtb246e1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJNb25cIlxyXG5cdH0sXHJcblxyXG5cdGtpdGhpczpbe1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJLaVRoaVwiXHJcblx0fV1cdFxyXG59KVxyXG5cclxudmFyIERlVGhpID0gbW9uZ29vc2UubW9kZWwoJ0RlVGhpJywgc2NoZW1hKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBEZVRoaSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dethi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "tieude",
        "thoigian",
        "Number",
        "namhoc",
        "ghichu",
        "trangthai",
        "cauhois",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "mon",
        "kithis",
        "DeThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,MAAM,EAACD,MAHa;AAIpBE,EAAAA,QAAQ,EAAEC,MAJU;AAKpBC,EAAAA,MAAM,EAAEJ,MALY;AAMpBK,EAAAA,MAAM,EAAEL,MANY;AAOpBM,EAAAA,SAAS,EAAEH,MAPS;AAStBI,EAAAA,OAAO,EAAC,CAAC;AACTC,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GAAD,CATc;AAcvBC,EAAAA,GAAG,EAAC;AACHJ,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADf;AAEHC,IAAAA,GAAG,EAAC;AAFD,GAdmB;AAmBvBE,EAAAA,MAAM,EAAC,CAAC;AACPL,IAAAA,IAAI,EAACX,MAAM,CAACY,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD;AAnBgB,CAAX,CAAb;AAyBA,IAAIG,KAAK,GAAGnB,QAAQ,CAACoB,KAAT,CAAe,OAAf,EAAwBjB,MAAxB,CAAZ;AAEAkB,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ma: String,\r\n    tieude:String,\r\n    thoigian: Number,    \r\n    namhoc: String,\r\n    ghichu: String,\r\n    trangthai: Number,\r\n \t\r\n \tcauhois:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"CauHoi\"\r\n\t}],\r\n\r\n\tmon:{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"Mon\"\r\n\t},\r\n\r\n\tkithis:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"KiThi\"\r\n\t}]\t\r\n})\r\n\r\nvar DeThi = mongoose.model('DeThi', schema)\r\n\r\nmodule.exports = DeThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903197
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\mon.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\mon.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\mon.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\mon.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "mon.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  ten: String,\n  cauhois: [{\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  }],\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }]\n});\nvar Mon = mongoose.model('Mon', schema);\nmodule.exports = Mon;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbi5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJtYSIsIlN0cmluZyIsInRlbiIsImNhdWhvaXMiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImRldGhpcyIsIk1vbiIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF0QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFFcEJFLEVBQUFBLEVBQUUsRUFBRUMsTUFGZ0I7QUFHcEJDLEVBQUFBLEdBQUcsRUFBRUQsTUFIZTtBQUt2QkUsRUFBQUEsT0FBTyxFQUFDLENBQUM7QUFDUkMsSUFBQUEsSUFBSSxFQUFDTixNQUFNLENBQUNPLEtBQVAsQ0FBYUMsUUFEVjtBQUVSQyxJQUFBQSxHQUFHLEVBQUM7QUFGSSxHQUFELENBTGU7QUFTdkJDLEVBQUFBLE1BQU0sRUFBQyxDQUFDO0FBQ1BKLElBQUFBLElBQUksRUFBQ04sTUFBTSxDQUFDTyxLQUFQLENBQWFDLFFBRFg7QUFFUEMsSUFBQUEsR0FBRyxFQUFDO0FBRkcsR0FBRDtBQVRnQixDQUFYLENBQWI7QUFnQkEsSUFBSUUsR0FBRyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxLQUFmLEVBQXNCWCxNQUF0QixDQUFWO0FBRUFZLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsR0FBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcclxuXHJcbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcclxuXHJcbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuXHJcbiAgICBtYTogU3RyaW5nLFxyXG4gICAgdGVuOiBTdHJpbmcsXHJcbiAgICBcclxuXHRjYXVob2lzOlt7XHJcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIkNhdUhvaVwiXHJcblx0fV0sXHJcblx0ZGV0aGlzOlt7XHJcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIkRlVGhpXCJcclxuXHR9XSxcclxuICAgIFxyXG59KVxyXG5cclxudmFyIE1vbiA9IG1vbmdvb3NlLm1vZGVsKCdNb24nLCBzY2hlbWEpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE1vbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mon.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "ten",
        "cauhois",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "dethis",
        "Mon",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,GAAG,EAAED,MAHe;AAKvBE,EAAAA,OAAO,EAAC,CAAC;AACRC,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADV;AAERC,IAAAA,GAAG,EAAC;AAFI,GAAD,CALe;AASvBC,EAAAA,MAAM,EAAC,CAAC;AACPJ,IAAAA,IAAI,EAACN,MAAM,CAACO,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD;AATgB,CAAX,CAAb;AAgBA,IAAIE,GAAG,GAAGb,QAAQ,CAACc,KAAT,CAAe,KAAf,EAAsBX,MAAtB,CAAV;AAEAY,MAAM,CAACC,OAAP,GAAiBH,GAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ma: String,\r\n    ten: String,\r\n    \r\n\tcauhois:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"CauHoi\"\r\n\t}],\r\n\tdethis:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"DeThi\"\r\n\t}],\r\n    \r\n})\r\n\r\nvar Mon = mongoose.model('Mon', schema)\r\n\r\nmodule.exports = Mon"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903198
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\phuongan.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\phuongan.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\phuongan.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\phuongan.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "phuongan.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ten: String,\n  noidung: String,\n  dapan: Boolean,\n  cauhoi: {\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  },\n  trangthai: Number // 0 cau hoi bi xoa\n\n});\nvar PhuongAn = mongoose.model('PhuongAn', schema);\nmodule.exports = PhuongAn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsInRlbiIsIlN0cmluZyIsIm5vaWR1bmciLCJkYXBhbiIsIkJvb2xlYW4iLCJjYXVob2kiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInRyYW5ndGhhaSIsIk51bWJlciIsIlBodW9uZ0FuIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsR0FBRyxFQUFFQyxNQUZlO0FBR3BCQyxFQUFBQSxPQUFPLEVBQUVELE1BSFc7QUFJcEJFLEVBQUFBLEtBQUssRUFBRUMsT0FKYTtBQU1wQkMsRUFBQUEsTUFBTSxFQUFDO0FBQ1RDLElBQUFBLElBQUksRUFBQ1IsTUFBTSxDQUFDUyxLQUFQLENBQWFDLFFBRFQ7QUFFVEMsSUFBQUEsR0FBRyxFQUFDO0FBRkssR0FOYTtBQVd2QkMsRUFBQUEsU0FBUyxFQUFFQyxNQVhZLENBV0o7O0FBWEksQ0FBWCxDQUFiO0FBY0EsSUFBSUMsUUFBUSxHQUFHaEIsUUFBUSxDQUFDaUIsS0FBVCxDQUFlLFVBQWYsRUFBMkJkLE1BQTNCLENBQWY7QUFFQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxRQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxyXG5cclxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxyXG5cclxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG5cclxuICAgIHRlbjogU3RyaW5nLCAgICBcclxuICAgIG5vaWR1bmc6IFN0cmluZyxcclxuICAgIGRhcGFuOiBCb29sZWFuLFxyXG5cclxuICAgIGNhdWhvaTp7XHJcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIkNhdUhvaVwiXHJcblx0fSxcclxuXHRcclxuXHR0cmFuZ3RoYWk6IE51bWJlciwgLy8gMCBjYXUgaG9pIGJpIHhvYVxyXG59KVxyXG5cclxudmFyIFBodW9uZ0FuID0gbW9uZ29vc2UubW9kZWwoJ1BodW9uZ0FuJywgc2NoZW1hKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQaHVvbmdBbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phuongan.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ten",
        "String",
        "noidung",
        "dapan",
        "Boolean",
        "cauhoi",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "trangthai",
        "Number",
        "PhuongAn",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,GAAG,EAAEC,MAFe;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,KAAK,EAAEC,OAJa;AAMpBC,EAAAA,MAAM,EAAC;AACTC,IAAAA,IAAI,EAACR,MAAM,CAACS,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GANa;AAWvBC,EAAAA,SAAS,EAAEC,MAXY,CAWJ;;AAXI,CAAX,CAAb;AAcA,IAAIC,QAAQ,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,UAAf,EAA2Bd,MAA3B,CAAf;AAEAe,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ten: String,    \r\n    noidung: String,\r\n    dapan: Boolean,\r\n\r\n    cauhoi:{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"CauHoi\"\r\n\t},\r\n\t\r\n\ttrangthai: Number, // 0 cau hoi bi xoa\r\n})\r\n\r\nvar PhuongAn = mongoose.model('PhuongAn', schema)\r\n\r\nmodule.exports = PhuongAn"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903198
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\phuongan.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\phuongan.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\phuongan.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\phuongan.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "phuongan.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _phuongan = _interopRequireDefault(require(\"../controllers/phuongan.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _phuongan[\"default\"].index); // add loai cau hoi\n\nrouter.post('/', _phuongan[\"default\"].post); // delete loai cau  hoi\n\nrouter[\"delete\"]('/:id', _phuongan[\"default\"].destroy);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsInBvc3QiLCJkZXN0cm95IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxxQkFBWUMsS0FBNUIsRSxDQUVBOztBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxHQUFaLEVBQWlCRixxQkFBWUUsSUFBN0IsRSxDQUNBOztBQUNBTCxNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXNCRyxxQkFBWUcsT0FBbEM7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXHJcblxyXG5pbXBvcnQgY29udHJvbGxlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvcGh1b25nYW4uY29udHJvbGxlcidcclxuXHJcbnJvdXRlci5nZXQoJy8nLCBjb250cm9sbGVycy5pbmRleClcclxuXHJcbi8vIGFkZCBsb2FpIGNhdSBob2lcclxucm91dGVyLnBvc3QoJy8nLCBjb250cm9sbGVycy5wb3N0KVxyXG4vLyBkZWxldGUgbG9haSBjYXUgIGhvaVxyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgY29udHJvbGxlcnMuZGVzdHJveSlcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phuongan.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "post",
        "destroy",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,qBAAYC,KAA5B,E,CAEA;;AACAJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiBF,qBAAYE,IAA7B,E,CACA;;AACAL,MAAM,UAAN,CAAc,MAAd,EAAsBG,qBAAYG,OAAlC;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nimport controllers from '../controllers/phuongan.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\n// add loai cau hoi\r\nrouter.post('/', controllers.post)\r\n// delete loai cau  hoi\r\nrouter.delete('/:id', controllers.destroy)\r\n\r\n\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1600519987767
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\phuongan.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\phuongan.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\phuongan.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\phuongan.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "phuongan.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Phuongan = require('../models/phuongan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var phuongan;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Phuongan.find();\n\n            case 2:\n              phuongan = _context.sent;\n              res.send(phuongan);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  // add cau hoi \n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, ma, ten, noidung, phuongan, savePhuongan;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$body = req.body, ma = _req$body.ma, ten = _req$body.ten, noidung = _req$body.noidung; // let ma = req.body.ma\n              // let ten = req.body.ten\n\n              phuongan = new Phuongan({\n                ma: ma,\n                ten: ten,\n                noidung: noidung\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return phuongan.save();\n\n            case 5:\n              savePhuongan = _context2.sent;\n              res.json({\n                result: \"success\"\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              res.json({\n                error: error\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    function post(_x3, _x4) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete cauhoi (id)\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var id, phuongan;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = req.params.id; //let user = await User.findById(id)\n\n              _context3.next = 3;\n              return Phuongan.deleteOne({\n                _id: id\n              }).then(function () {\n                res.json({\n                  result: \"delete sucessfully\"\n                });\n              })[\"catch\"](function (err) {\n                return res.json({\n                  error: err\n                });\n              });\n\n            case 3:\n              phuongan = _context3.sent;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function destroy(_x5, _x6) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBodW9uZ2FuLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUGh1b25nYW4iLCJyZXF1aXJlIiwic2hvcnRpZCIsIm1ldGhvZHMiLCJpbmRleCIsInJlcSIsInJlcyIsImZpbmQiLCJwaHVvbmdhbiIsInNlbmQiLCJwb3N0IiwiYm9keSIsIm1hIiwidGVuIiwibm9pZHVuZyIsInNhdmUiLCJzYXZlUGh1b25nYW4iLCJqc29uIiwicmVzdWx0IiwiZXJyb3IiLCJkZXN0cm95IiwiaWQiLCJwYXJhbXMiLCJkZWxldGVPbmUiLCJfaWQiLCJ0aGVuIiwiZXJyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsMEJBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQSxJQUFNRSxPQUFPLEdBQUc7QUFDZkMsRUFBQUEsS0FBSztBQUFBLHlFQUFFLGlCQUFNQyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFDaUJOLFFBQVEsQ0FBQ08sSUFBVCxFQURqQjs7QUFBQTtBQUNBQyxjQUFBQSxRQURBO0FBRU5GLGNBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxRQUFUOztBQUZNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsS0FEVTtBQUtmO0FBQ0FFLEVBQUFBLElBQUk7QUFBQSx3RUFBRSxrQkFBTUwsR0FBTixFQUFXQyxHQUFYO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFDMkJELEdBQUcsQ0FBQ00sSUFEL0IsRUFDT0MsRUFEUCxhQUNPQSxFQURQLEVBQ1dDLEdBRFgsYUFDV0EsR0FEWCxFQUNnQkMsT0FEaEIsYUFDZ0JBLE9BRGhCLEVBR0M7QUFDQTs7QUFFQU4sY0FBQUEsUUFORCxHQU1ZLElBQUlSLFFBQUosQ0FBYTtBQUNwQlksZ0JBQUFBLEVBQUUsRUFBRUEsRUFEZ0I7QUFFcEJDLGdCQUFBQSxHQUFHLEVBQUVBLEdBRmU7QUFHcEJDLGdCQUFBQSxPQUFPLEVBQUVBO0FBSFcsZUFBYixDQU5aO0FBQUE7QUFBQTtBQUFBLHFCQWF1Qk4sUUFBUSxDQUFDTyxJQUFULEVBYnZCOztBQUFBO0FBYUVDLGNBQUFBLFlBYkY7QUFjSlYsY0FBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFDUkMsZ0JBQUFBLE1BQU0sRUFBRztBQURELGVBQVQ7QUFkSTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWtCSlosY0FBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFDUkUsZ0JBQUFBLEtBQUssRUFBR0E7QUFEQSxlQUFUOztBQWxCSTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLEtBTlc7QUE2QmY7QUFDQUMsRUFBQUEsT0FBTztBQUFBLDJFQUFFLGtCQUFNZixHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0plLGNBQUFBLEVBREksR0FDQ2hCLEdBQUcsQ0FBQ2lCLE1BQUosQ0FBV0QsRUFEWixFQUVSOztBQUZRO0FBQUEscUJBR2FyQixRQUFRLENBQUN1QixTQUFULENBQW1CO0FBQUNDLGdCQUFBQSxHQUFHLEVBQUVIO0FBQU4sZUFBbkIsRUFBOEJJLElBQTlCLENBQW1DLFlBQUk7QUFDM0RuQixnQkFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFDUkMsa0JBQUFBLE1BQU0sRUFBRTtBQURBLGlCQUFUO0FBR0EsZUFKb0IsV0FJWixVQUFBUSxHQUFHO0FBQUEsdUJBQUlwQixHQUFHLENBQUNXLElBQUosQ0FBUztBQUN4QkUsa0JBQUFBLEtBQUssRUFBRU87QUFEaUIsaUJBQVQsQ0FBSjtBQUFBLGVBSlMsQ0FIYjs7QUFBQTtBQUdKbEIsY0FBQUEsUUFISTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBOUJRLENBQWhCO0FBNENBbUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIsT0FBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxjb250cm9sbGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsibGV0IFBodW9uZ2FuID0gcmVxdWlyZSgnLi4vbW9kZWxzL3BodW9uZ2FuLm1vZGVsJylcclxudmFyIHNob3J0aWQgPSByZXF1aXJlKCdzaG9ydGlkJyk7XHJcblxyXG5jb25zdCBtZXRob2RzID0ge1xyXG5cdGluZGV4OiBhc3luYyhyZXEsIHJlcyk9PntcclxuXHRcdGNvbnN0IHBodW9uZ2FuID0gYXdhaXQgUGh1b25nYW4uZmluZCgpXHJcblx0XHRyZXMuc2VuZChwaHVvbmdhbilcclxuXHR9LFxyXG5cdC8vIGFkZCBjYXUgaG9pIFxyXG5cdHBvc3Q6IGFzeW5jKHJlcSwgcmVzKT0+e1xyXG4gICAgICAgIGxldCB7IG1hLCB0ZW4sIG5vaWR1bmd9ID0gcmVxLmJvZHlcclxuICAgICAgICBcclxuICAgICAgICAvLyBsZXQgbWEgPSByZXEuYm9keS5tYVxyXG4gICAgICAgIC8vIGxldCB0ZW4gPSByZXEuYm9keS50ZW5cclxuXHJcblx0XHRjb25zdCBwaHVvbmdhbiA9IG5ldyBQaHVvbmdhbih7XHJcbiAgICAgICAgICAgIG1hOiBtYSxcclxuICAgICAgICAgICAgdGVuOiB0ZW4sXHJcbiAgICAgICAgICAgIG5vaWR1bmc6IG5vaWR1bmdcclxuICAgICAgICBcclxuXHRcdH0pXHJcblx0XHR0cnl7XHJcblx0XHRcdGNvbnN0IHNhdmVQaHVvbmdhbiA9IGF3YWl0IHBodW9uZ2FuLnNhdmUoKVxyXG5cdFx0XHRyZXMuanNvbih7XHJcblx0XHRcdFx0cmVzdWx0IDogXCJzdWNjZXNzXCIgXHJcblx0XHRcdH0pXHJcblx0XHR9IGNhdGNoKGVycil7XHJcblx0XHRcdHJlcy5qc29uKHtcclxuXHRcdFx0XHRlcnJvciA6IGVycm9yIFxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0sXHJcblx0Ly8gZGVsZXRlIGNhdWhvaSAoaWQpXHJcblx0ZGVzdHJveTogYXN5bmMocmVxLCByZXMpPT57XHJcblx0XHRsZXQgaWQgPSByZXEucGFyYW1zLmlkXHJcblx0XHQvL2xldCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChpZClcclxuXHRcdGxldCBwaHVvbmdhbiA9IGF3YWl0IFBodW9uZ2FuLmRlbGV0ZU9uZSh7X2lkOiBpZH0pLnRoZW4oKCk9PntcclxuXHRcdFx0cmVzLmpzb24oe1xyXG5cdFx0XHRcdHJlc3VsdDogXCJkZWxldGUgc3VjZXNzZnVsbHlcIlxyXG5cdFx0XHR9KVxyXG5cdFx0fSkuY2F0Y2goZXJyID0+IHJlcy5qc29uKHtcclxuXHRcdFx0ZXJyb3I6IGVyclxyXG5cdFx0fSkpXHJcblx0XHQvL3Jlcy5zZW5kKHVzZXIpXHJcblx0fVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1ldGhvZHMiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phuongan.controller.js"
      ],
      "names": [
        "Phuongan",
        "require",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "phuongan",
        "send",
        "post",
        "body",
        "ma",
        "ten",
        "noidung",
        "save",
        "savePhuongan",
        "json",
        "result",
        "error",
        "destroy",
        "id",
        "params",
        "deleteOne",
        "_id",
        "then",
        "err",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAME,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBN,QAAQ,CAACO,IAAT,EADjB;;AAAA;AACAC,cAAAA,QADA;AAENF,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKf;AACAE,EAAAA,IAAI;AAAA,wEAAE,kBAAML,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BAC2BD,GAAG,CAACM,IAD/B,EACOC,EADP,aACOA,EADP,EACWC,GADX,aACWA,GADX,EACgBC,OADhB,aACgBA,OADhB,EAGC;AACA;;AAEAN,cAAAA,QAND,GAMY,IAAIR,QAAJ,CAAa;AACpBY,gBAAAA,EAAE,EAAEA,EADgB;AAEpBC,gBAAAA,GAAG,EAAEA,GAFe;AAGpBC,gBAAAA,OAAO,EAAEA;AAHW,eAAb,CANZ;AAAA;AAAA;AAAA,qBAauBN,QAAQ,CAACO,IAAT,EAbvB;;AAAA;AAaEC,cAAAA,YAbF;AAcJV,cAAAA,GAAG,CAACW,IAAJ,CAAS;AACRC,gBAAAA,MAAM,EAAG;AADD,eAAT;AAdI;AAAA;;AAAA;AAAA;AAAA;AAkBJZ,cAAAA,GAAG,CAACW,IAAJ,CAAS;AACRE,gBAAAA,KAAK,EAAGA;AADA,eAAT;;AAlBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANW;AA6Bf;AACAC,EAAAA,OAAO;AAAA,2EAAE,kBAAMf,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACJe,cAAAA,EADI,GACChB,GAAG,CAACiB,MAAJ,CAAWD,EADZ,EAER;;AAFQ;AAAA,qBAGarB,QAAQ,CAACuB,SAAT,CAAmB;AAACC,gBAAAA,GAAG,EAAEH;AAAN,eAAnB,EAA8BI,IAA9B,CAAmC,YAAI;AAC3DnB,gBAAAA,GAAG,CAACW,IAAJ,CAAS;AACRC,kBAAAA,MAAM,EAAE;AADA,iBAAT;AAGA,eAJoB,WAIZ,UAAAQ,GAAG;AAAA,uBAAIpB,GAAG,CAACW,IAAJ,CAAS;AACxBE,kBAAAA,KAAK,EAAEO;AADiB,iBAAT,CAAJ;AAAA,eAJS,CAHb;;AAAA;AAGJlB,cAAAA,QAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA9BQ,CAAhB;AA4CAmB,MAAM,CAACC,OAAP,GAAiBzB,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let Phuongan = require('../models/phuongan.model')\r\nvar shortid = require('shortid');\r\n\r\nconst methods = {\r\n\tindex: async(req, res)=>{\r\n\t\tconst phuongan = await Phuongan.find()\r\n\t\tres.send(phuongan)\r\n\t},\r\n\t// add cau hoi \r\n\tpost: async(req, res)=>{\r\n        let { ma, ten, noidung} = req.body\r\n        \r\n        // let ma = req.body.ma\r\n        // let ten = req.body.ten\r\n\r\n\t\tconst phuongan = new Phuongan({\r\n            ma: ma,\r\n            ten: ten,\r\n            noidung: noidung\r\n        \r\n\t\t})\r\n\t\ttry{\r\n\t\t\tconst savePhuongan = await phuongan.save()\r\n\t\t\tres.json({\r\n\t\t\t\tresult : \"success\" \r\n\t\t\t})\r\n\t\t} catch(err){\r\n\t\t\tres.json({\r\n\t\t\t\terror : error \r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// delete cauhoi (id)\r\n\tdestroy: async(req, res)=>{\r\n\t\tlet id = req.params.id\r\n\t\t//let user = await User.findById(id)\r\n\t\tlet phuongan = await Phuongan.deleteOne({_id: id}).then(()=>{\r\n\t\t\tres.json({\r\n\t\t\t\tresult: \"delete sucessfully\"\r\n\t\t\t})\r\n\t\t}).catch(err => res.json({\r\n\t\t\terror: err\r\n\t\t}))\r\n\t\t//res.send(user)\r\n\t}\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1601520022299
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\mon.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\mon.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\mon.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\mon.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "mon.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mon = _interopRequireDefault(require(\"../controllers/mon.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _mon[\"default\"].index); // add loai cau hoi\n\nrouter.post('/', _mon[\"default\"].post); // delete loai cau  hoi\n\nrouter.get('/remove/:_idmon', _mon[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbi5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJwb3N0IiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxnQkFBWUMsS0FBNUIsRSxDQUVBOztBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxHQUFaLEVBQWlCRixnQkFBWUUsSUFBN0IsRSxDQUNBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxpQkFBWCxFQUE4QkMsZ0JBQVlHLE1BQTFDO0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxyXG5cclxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL21vbi5jb250cm9sbGVyJ1xyXG5cclxucm91dGVyLmdldCgnLycsIGNvbnRyb2xsZXJzLmluZGV4KVxyXG5cclxuLy8gYWRkIGxvYWkgY2F1IGhvaVxyXG5yb3V0ZXIucG9zdCgnLycsIGNvbnRyb2xsZXJzLnBvc3QpXHJcbi8vIGRlbGV0ZSBsb2FpIGNhdSAgaG9pXHJcbnJvdXRlci5nZXQoJy9yZW1vdmUvOl9pZG1vbicsIGNvbnRyb2xsZXJzLnJlbW92ZSlcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mon.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "post",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,gBAAYC,KAA5B,E,CAEA;;AACAJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiBF,gBAAYE,IAA7B,E,CACA;;AACAL,MAAM,CAACE,GAAP,CAAW,iBAAX,EAA8BC,gBAAYG,MAA1C;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nimport controllers from '../controllers/mon.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\n// add loai cau hoi\r\nrouter.post('/', controllers.post)\r\n// delete loai cau  hoi\r\nrouter.get('/remove/:_idmon', controllers.remove)\r\n\r\n\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904080
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\mon.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\mon.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\mon.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\mon.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "mon.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Mon = require('../models/mon.model');\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar DeThi = require('../models/dethi.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var mon;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Mon.find().populate('cauhois');\n\n            case 2:\n              mon = _context.sent;\n              res.send(mon);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  // add mon\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, ma, ten, mon;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                _req$body = req.body, ma = _req$body.ma, ten = _req$body.ten;\n                mon = new Mon({\n                  ma: ma,\n                  ten: ten\n                });\n                mon.save().then(function (respone) {\n                  res.send(respone);\n                });\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function post(_x3, _x4) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete loaicauhoi (id)\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idmon, mon, cauhoi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _idmon = req.params._idmon;\n              _context3.next = 4;\n              return Mon.findById(_idmon);\n\n            case 4:\n              mon = _context3.sent;\n              mon[\"delete\"](); //delete all cau hoi cua mon\n\n              _context3.next = 8;\n              return CauHoi.deleteMany({\n                'mon': _idmon\n              });\n\n            case 8:\n              cauhoi = _context3.sent;\n              _context3.next = 11;\n              return DeThi.deleteMany({\n                'mon': _idmon\n              });\n\n            case 11:\n              dethi = _context3.sent;\n              res.end();\n              _context3.next = 18;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 15]]);\n    }));\n\n    function remove(_x5, _x6) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbi5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIk1vbiIsInJlcXVpcmUiLCJDYXVIb2kiLCJEZVRoaSIsInNob3J0aWQiLCJtZXRob2RzIiwiaW5kZXgiLCJyZXEiLCJyZXMiLCJmaW5kIiwicG9wdWxhdGUiLCJtb24iLCJzZW5kIiwicG9zdCIsImJvZHkiLCJtYSIsInRlbiIsInNhdmUiLCJ0aGVuIiwicmVzcG9uZSIsImVyciIsInJlbW92ZSIsIl9pZG1vbiIsInBhcmFtcyIsImZpbmRCeUlkIiwiZGVsZXRlTWFueSIsImNhdWhvaSIsImRldGhpIiwiZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsR0FBRyxHQUFHQyxPQUFPLENBQUMscUJBQUQsQ0FBakI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBcEI7O0FBQ0EsSUFBSUUsS0FBSyxHQUFHRixPQUFPLENBQUMsdUJBQUQsQ0FBbkI7O0FBQ0EsSUFBSUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQSxJQUFNSSxPQUFPLEdBQUc7QUFDZkMsRUFBQUEsS0FBSztBQUFBLHlFQUFFLGlCQUFNQyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFDWVIsR0FBRyxDQUFDUyxJQUFKLEdBQVdDLFFBQVgsQ0FBb0IsU0FBcEIsQ0FEWjs7QUFBQTtBQUNBQyxjQUFBQSxHQURBO0FBRU5ILGNBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxHQUFUOztBQUZNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsS0FEVTtBQUtmO0FBQ0FFLEVBQUFBLElBQUk7QUFBQSx3RUFBRSxrQkFBT04sR0FBUCxFQUFZQyxHQUFaO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTCxrQkFBRztBQUFBLDRCQUNnQkQsR0FBRyxDQUFDTyxJQURwQixFQUNJQyxFQURKLGFBQ0lBLEVBREosRUFDUUMsR0FEUixhQUNRQSxHQURSO0FBRUlMLGdCQUFBQSxHQUZKLEdBRVUsSUFBSVgsR0FBSixDQUFRO0FBQ1ZlLGtCQUFBQSxFQUFFLEVBQUVBLEVBRE07QUFFVkMsa0JBQUFBLEdBQUcsRUFBRUE7QUFGSyxpQkFBUixDQUZWO0FBTUZMLGdCQUFBQSxHQUFHLENBQUNNLElBQUosR0FBV0MsSUFBWCxDQUFnQixVQUFBQyxPQUFPLEVBQUc7QUFDekJYLGtCQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU08sT0FBVDtBQUNBLGlCQUZEO0FBR0EsZUFURCxDQVNFLE9BQU1DLEdBQU4sRUFBVTtBQUNYWixnQkFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVNRLEdBQVQ7QUFDQTs7QUFaSTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLEtBTlc7QUFxQmY7QUFDQUMsRUFBQUEsTUFBTTtBQUFBLDBFQUFFLGtCQUFPZCxHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUNjLGNBQUFBLE1BRkQsR0FFV2YsR0FBRyxDQUFDZ0IsTUFGZixDQUVDRCxNQUZEO0FBQUE7QUFBQSxxQkFHWXRCLEdBQUcsQ0FBQ3dCLFFBQUosQ0FBYUYsTUFBYixDQUhaOztBQUFBO0FBR0FYLGNBQUFBLEdBSEE7QUFJTEEsY0FBQUEsR0FBRyxVQUFILEdBSkssQ0FLTjs7QUFMTTtBQUFBLHFCQU1lVCxNQUFNLENBQUN1QixVQUFQLENBQWtCO0FBQUMsdUJBQU1IO0FBQVAsZUFBbEIsQ0FOZjs7QUFBQTtBQU1BSSxjQUFBQSxNQU5BO0FBQUE7QUFBQSxxQkFRY3ZCLEtBQUssQ0FBQ3NCLFVBQU4sQ0FBaUI7QUFBQyx1QkFBTUg7QUFBUCxlQUFqQixDQVJkOztBQUFBO0FBUUFLLGNBQUFBLEtBUkE7QUFTTm5CLGNBQUFBLEdBQUcsQ0FBQ29CLEdBQUo7QUFUTTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQVdOcEIsY0FBQUEsR0FBRyxDQUFDSSxJQUFKOztBQVhNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUF0QlMsQ0FBaEI7QUFzQ0FpQixNQUFNLENBQUNDLE9BQVAsR0FBaUJ6QixPQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXGNvbnRyb2xsZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgTW9uID0gcmVxdWlyZSgnLi4vbW9kZWxzL21vbi5tb2RlbCcpXHJcbmxldCBDYXVIb2kgPSByZXF1aXJlKCcuLi9tb2RlbHMvY2F1aG9pLm1vZGVsJylcclxubGV0IERlVGhpID0gcmVxdWlyZSgnLi4vbW9kZWxzL2RldGhpLm1vZGVsJylcclxudmFyIHNob3J0aWQgPSByZXF1aXJlKCdzaG9ydGlkJyk7XHJcblxyXG5jb25zdCBtZXRob2RzID0ge1xyXG5cdGluZGV4OiBhc3luYyhyZXEsIHJlcyk9PntcdFx0XHJcblx0XHRjb25zdCBtb24gPSBhd2FpdCBNb24uZmluZCgpLnBvcHVsYXRlKCdjYXVob2lzJylcclxuXHRcdHJlcy5zZW5kKG1vbilcclxuXHR9LFxyXG5cdC8vIGFkZCBtb25cclxuXHRwb3N0OiBhc3luYyAocmVxLCByZXMpPT57ICAgICAgICBcclxuXHRcdHRyeXtcdFxyXG5cdFx0XHRsZXQgeyBtYSwgdGVuIH0gPSByZXEuYm9keSAgICAgICAgXHQgICAgICAgIFxyXG5cdFx0XHRjb25zdCBtb24gPSBuZXcgTW9uKHtcclxuXHQgICAgICAgICAgICBtYTogbWEsXHJcblx0ICAgICAgICAgICAgdGVuOiB0ZW4sICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuXHRcdFx0fSlcdFx0XHJcblx0XHRcdG1vbi5zYXZlKCkudGhlbihyZXNwb25lID0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKHJlc3BvbmUpXHJcblx0XHRcdH0pXHRcdFx0XHJcblx0XHR9IGNhdGNoKGVycil7XHJcblx0XHRcdHJlcy5zZW5kKGVycilcclxuXHRcdH1cclxuXHJcblx0fSxcdFxyXG5cdC8vIGRlbGV0ZSBsb2FpY2F1aG9pIChpZClcclxuXHRyZW1vdmU6IGFzeW5jIChyZXEsIHJlcyk9PntcclxuXHRcdHRyeXtcclxuXHRcdFx0Y29uc3Qge19pZG1vbn0gPSByZXEucGFyYW1zXHRcdFx0XHJcblx0XHRcdGNvbnN0IG1vbiA9IGF3YWl0IE1vbi5maW5kQnlJZChfaWRtb24pXHJcblx0XHRcdFx0bW9uLmRlbGV0ZSgpXHRcdFx0XHRcclxuXHRcdFx0Ly9kZWxldGUgYWxsIGNhdSBob2kgY3VhIG1vblxyXG5cdFx0XHRjb25zdCBjYXVob2kgPSBhd2FpdCBDYXVIb2kuZGVsZXRlTWFueSh7J21vbic6X2lkbW9ufSlcclxuXHRcdFx0Ly8gZGVsZXRlIG1vbiB0cm9uZyBkZSB0aGlcclxuXHRcdFx0Y29uc3QgZGV0aGkgPSBhd2FpdCBEZVRoaS5kZWxldGVNYW55KHsnbW9uJzpfaWRtb259KVx0XHRcdFxyXG5cdFx0XHRyZXMuZW5kKClcclxuXHRcdH0gY2F0Y2goZXJyKXtcclxuXHRcdFx0cmVzLnNlbmQoZXJyKVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtZXRob2RzIl19",
    "map": {
      "version": 3,
      "sources": [
        "mon.controller.js"
      ],
      "names": [
        "Mon",
        "require",
        "CauHoi",
        "DeThi",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "mon",
        "send",
        "post",
        "body",
        "ma",
        "ten",
        "save",
        "then",
        "respone",
        "err",
        "remove",
        "_idmon",
        "params",
        "findById",
        "deleteMany",
        "cauhoi",
        "dethi",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMI,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYR,GAAG,CAACS,IAAJ,GAAWC,QAAX,CAAoB,SAApB,CADZ;;AAAA;AACAC,cAAAA,GADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAASD,GAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKf;AACAE,EAAAA,IAAI;AAAA,wEAAE,kBAAON,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACL,kBAAG;AAAA,4BACgBD,GAAG,CAACO,IADpB,EACIC,EADJ,aACIA,EADJ,EACQC,GADR,aACQA,GADR;AAEIL,gBAAAA,GAFJ,GAEU,IAAIX,GAAJ,CAAQ;AACVe,kBAAAA,EAAE,EAAEA,EADM;AAEVC,kBAAAA,GAAG,EAAEA;AAFK,iBAAR,CAFV;AAMFL,gBAAAA,GAAG,CAACM,IAAJ,GAAWC,IAAX,CAAgB,UAAAC,OAAO,EAAG;AACzBX,kBAAAA,GAAG,CAACI,IAAJ,CAASO,OAAT;AACA,iBAFD;AAGA,eATD,CASE,OAAMC,GAAN,EAAU;AACXZ,gBAAAA,GAAG,CAACI,IAAJ,CAASQ,GAAT;AACA;;AAZI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANW;AAqBf;AACAC,EAAAA,MAAM;AAAA,0EAAE,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAECc,cAAAA,MAFD,GAEWf,GAAG,CAACgB,MAFf,CAECD,MAFD;AAAA;AAAA,qBAGYtB,GAAG,CAACwB,QAAJ,CAAaF,MAAb,CAHZ;;AAAA;AAGAX,cAAAA,GAHA;AAILA,cAAAA,GAAG,UAAH,GAJK,CAKN;;AALM;AAAA,qBAMeT,MAAM,CAACuB,UAAP,CAAkB;AAAC,uBAAMH;AAAP,eAAlB,CANf;;AAAA;AAMAI,cAAAA,MANA;AAAA;AAAA,qBAQcvB,KAAK,CAACsB,UAAN,CAAiB;AAAC,uBAAMH;AAAP,eAAjB,CARd;;AAAA;AAQAK,cAAAA,KARA;AASNnB,cAAAA,GAAG,CAACoB,GAAJ;AATM;AAAA;;AAAA;AAAA;AAAA;AAWNpB,cAAAA,GAAG,CAACI,IAAJ;;AAXM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtBS,CAAhB;AAsCAiB,MAAM,CAACC,OAAP,GAAiBzB,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let Mon = require('../models/mon.model')\r\nlet CauHoi = require('../models/cauhoi.model')\r\nlet DeThi = require('../models/dethi.model')\r\nvar shortid = require('shortid');\r\n\r\nconst methods = {\r\n\tindex: async(req, res)=>{\t\t\r\n\t\tconst mon = await Mon.find().populate('cauhois')\r\n\t\tres.send(mon)\r\n\t},\r\n\t// add mon\r\n\tpost: async (req, res)=>{        \r\n\t\ttry{\t\r\n\t\t\tlet { ma, ten } = req.body        \t        \r\n\t\t\tconst mon = new Mon({\r\n\t            ma: ma,\r\n\t            ten: ten,                             \r\n\t\t\t})\t\t\r\n\t\t\tmon.save().then(respone =>{\r\n\t\t\t\tres.send(respone)\r\n\t\t\t})\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\r\n\t},\t\r\n\t// delete loaicauhoi (id)\r\n\tremove: async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idmon} = req.params\t\t\t\r\n\t\t\tconst mon = await Mon.findById(_idmon)\r\n\t\t\t\tmon.delete()\t\t\t\t\r\n\t\t\t//delete all cau hoi cua mon\r\n\t\t\tconst cauhoi = await CauHoi.deleteMany({'mon':_idmon})\r\n\t\t\t// delete mon trong de thi\r\n\t\t\tconst dethi = await DeThi.deleteMany({'mon':_idmon})\t\t\t\r\n\t\t\tres.end()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903190
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\dethi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\dethi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\dethi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\dethi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "dethi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dethi = _interopRequireDefault(require(\"../controllers/dethi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _dethi[\"default\"].index);\nrouter.get('/detail/:_iddethi', _dethi[\"default\"].detail); // de thi cua mon\n\nrouter.get('/mon/:_idmon', _dethi[\"default\"].testOfSubject); // edit // add question to exam\n// router.post('/add-question/:id', controllers.addQuestion)\n\nrouter.post('/add-question', _dethi[\"default\"].addQuestion); //delete\n\nrouter.post('/remove-cauhoi', _dethi[\"default\"].removeCauhoi); // add cau hoi\n\nrouter.post('/them', _dethi[\"default\"].post); // delete cau  hoi\n\nrouter.get('/remove/:_iddethi', _dethi[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGhpLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsImRldGFpbCIsInRlc3RPZlN1YmplY3QiLCJwb3N0IiwiYWRkUXVlc3Rpb24iLCJyZW1vdmVDYXVob2kiLCJyZW1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0FBSEEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBSUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGtCQUFZQyxLQUE1QjtBQUVBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxtQkFBWCxFQUFnQ0Msa0JBQVlFLE1BQTVDLEUsQ0FFQTs7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsY0FBWCxFQUEwQkMsa0JBQVlHLGFBQXRDLEUsQ0FDQTtBQUNBOztBQUNBTixNQUFNLENBQUNPLElBQVAsQ0FBWSxlQUFaLEVBQTZCSixrQkFBWUssV0FBekMsRSxDQUNBOztBQUNBUixNQUFNLENBQUNPLElBQVAsQ0FBWSxnQkFBWixFQUE4Qkosa0JBQVlNLFlBQTFDLEUsQ0FDQTs7QUFDQVQsTUFBTSxDQUFDTyxJQUFQLENBQVksT0FBWixFQUFxQkosa0JBQVlJLElBQWpDLEUsQ0FDQTs7QUFDQVAsTUFBTSxDQUFDRSxHQUFQLENBQVcsbUJBQVgsRUFBZ0NDLGtCQUFZTyxNQUE1QztBQUdBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxzZXJ2ZXJfZFxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcclxuXHJcbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy9kZXRoaS5jb250cm9sbGVyJ1xyXG5cclxucm91dGVyLmdldCgnLycsIGNvbnRyb2xsZXJzLmluZGV4KVxyXG5cclxucm91dGVyLmdldCgnL2RldGFpbC86X2lkZGV0aGknLCBjb250cm9sbGVycy5kZXRhaWwpXHJcblxyXG4vLyBkZSB0aGkgY3VhIG1vblxyXG5yb3V0ZXIuZ2V0KCcvbW9uLzpfaWRtb24nLGNvbnRyb2xsZXJzLnRlc3RPZlN1YmplY3QpXHJcbi8vIGVkaXQgLy8gYWRkIHF1ZXN0aW9uIHRvIGV4YW1cclxuLy8gcm91dGVyLnBvc3QoJy9hZGQtcXVlc3Rpb24vOmlkJywgY29udHJvbGxlcnMuYWRkUXVlc3Rpb24pXHJcbnJvdXRlci5wb3N0KCcvYWRkLXF1ZXN0aW9uJywgY29udHJvbGxlcnMuYWRkUXVlc3Rpb24pXHJcbi8vZGVsZXRlXHJcbnJvdXRlci5wb3N0KCcvcmVtb3ZlLWNhdWhvaScsIGNvbnRyb2xsZXJzLnJlbW92ZUNhdWhvaSlcclxuLy8gYWRkIGNhdSBob2lcclxucm91dGVyLnBvc3QoJy90aGVtJywgY29udHJvbGxlcnMucG9zdClcclxuLy8gZGVsZXRlIGNhdSAgaG9pXHJcbnJvdXRlci5nZXQoJy9yZW1vdmUvOl9pZGRldGhpJywgY29udHJvbGxlcnMucmVtb3ZlKVxyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "dethi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "detail",
        "testOfSubject",
        "post",
        "addQuestion",
        "removeCauhoi",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,kBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYE,MAA5C,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,cAAX,EAA0BC,kBAAYG,aAAtC,E,CACA;AACA;;AACAN,MAAM,CAACO,IAAP,CAAY,eAAZ,EAA6BJ,kBAAYK,WAAzC,E,CACA;;AACAR,MAAM,CAACO,IAAP,CAAY,gBAAZ,EAA8BJ,kBAAYM,YAA1C,E,CACA;;AACAT,MAAM,CAACO,IAAP,CAAY,OAAZ,EAAqBJ,kBAAYI,IAAjC,E,CACA;;AACAP,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYO,MAA5C;AAGAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nimport controllers from '../controllers/dethi.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\nrouter.get('/detail/:_iddethi', controllers.detail)\r\n\r\n// de thi cua mon\r\nrouter.get('/mon/:_idmon',controllers.testOfSubject)\r\n// edit // add question to exam\r\n// router.post('/add-question/:id', controllers.addQuestion)\r\nrouter.post('/add-question', controllers.addQuestion)\r\n//delete\r\nrouter.post('/remove-cauhoi', controllers.removeCauhoi)\r\n// add cau hoi\r\nrouter.post('/them', controllers.post)\r\n// delete cau  hoi\r\nrouter.get('/remove/:_iddethi', controllers.remove)\r\n\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904079
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\dethi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\dethi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\dethi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\dethi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "dethi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar DeThi = require('../models/dethi.model');\n\nvar Mon = require('../models/mon.model');\n\nvar CauHoi = require('../models/cauhoi.model');\n\nvar KiThi = require('../models/kithi.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var dethi;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return DeThi.find().populate('mon');\n\n            case 2:\n              dethi = _context.sent;\n              res.send(dethi);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _iddethi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _iddethi = req.params._iddethi;\n              _context2.next = 4;\n              return DeThi.findById(_iddethi).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 4:\n              dethi = _context2.sent;\n              res.send(dethi);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function detail(_x3, _x4) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  // de thi cua mon\n  testOfSubject: function () {\n    var _testOfSubject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idmon, dethis;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _idmon = req.params._idmon;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return DeThi.find({\n                mon: _idmon\n              });\n\n            case 4:\n              dethis = _context3.sent;\n              //console.log('dethi',dethis)\n              res.send(dethis);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    function testOfSubject(_x5, _x6) {\n      return _testOfSubject.apply(this, arguments);\n    }\n\n    return testOfSubject;\n  }(),\n  addQuestion: function () {\n    var _addQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _req$body, cauhois, _iddethi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _req$body = req.body, cauhois = _req$body.cauhois, _iddethi = _req$body._iddethi;\n              _context5.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context5.sent;\n\n              if (cauhois) {\n                cauhois.forEach( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(item, idx) {\n                    var cauhoi, result_dethi;\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            dethi.cauhois.push(item);\n                            dethi.save();\n                            _context4.next = 4;\n                            return CauHoi.findById(item);\n\n                          case 4:\n                            cauhoi = _context4.sent;\n                            cauhoi.dethis.push(_iddethi);\n                            cauhoi.save();\n\n                            if (!(idx === cauhois.length - 1)) {\n                              _context4.next = 12;\n                              break;\n                            }\n\n                            _context4.next = 10;\n                            return DeThi.findById(_iddethi).populate('mon');\n\n                          case 10:\n                            result_dethi = _context4.sent;\n                            res.send({\n                              result_dethi: result_dethi\n                            });\n\n                          case 12:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x9, _x10) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } // res.send(dethi)\n\n\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              res.send(_context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n\n    function addQuestion(_x7, _x8) {\n      return _addQuestion.apply(this, arguments);\n    }\n\n    return addQuestion;\n  }(),\n  // remove cau hoi cua de\n  removeCauhoi: function () {\n    var _removeCauhoi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body2, _idcauhoi, _iddethi, dethi, newCauhois, cauhoi, newDethis;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _req$body2 = req.body, _idcauhoi = _req$body2._idcauhoi, _iddethi = _req$body2._iddethi;\n              _context6.next = 4;\n              return DeThi.findById(_iddethi).populate('mon');\n\n            case 4:\n              dethi = _context6.sent;\n              // update de thi cua cau hoi\n              newCauhois = dethi.cauhois.filter(function (x) {\n                return \"\".concat(x) != _idcauhoi;\n              });\n              dethi.cauhois = newCauhois;\n              dethi.save();\n              _context6.next = 10;\n              return CauHoi.findById(_idcauhoi);\n\n            case 10:\n              cauhoi = _context6.sent;\n              newDethis = cauhoi.dethis.filter(function (x) {\n                return \"\".concat(x) != _iddethi;\n              });\n              cauhoi.dethis = newDethis;\n              cauhoi.save();\n              res.send({\n                result_dethi: dethi\n              }); // dethi.cauhois.forEach(async (cauhoi,idx)=>{\n              // \tlet each_cauhoi = await CauHoi.findById(cauhoi)\n              // \tlet newDethis = each_cauhoi.dethis.filter(x=> `${x}`!= _iddethi)\n              // \t\teach_cauhoi.dethis = newDethis\n              // \t\teach_cauhoi.save()\n              // \tif (idx===dethi.cauhois.length-1){\n              // \t\t\t// update cau hoi cua de thi\t\n              // \t\tlet newCauhoi = dethi.cauhois.filter(x=> `${x}` != _idcauhoi)\n              // \t\t\tdethi.cauhois = newCauhoi\n              // \t\t\tdethi.save().then(()=>{\n              // \t\t\t\tres.send({result_dethi:dethi})\n              // \t\t\t})\n              // \t\t//const result_dethi = await DeThi.findById(_iddethi).populate('mon')\t\t\t\t\t\t\n              // \t}\t\t\t\t\t\n              // })\t\t\t\t\t\t\n\n              _context6.next = 20;\n              break;\n\n            case 17:\n              _context6.prev = 17;\n              _context6.t0 = _context6[\"catch\"](0);\n              res.send(_context6.t0);\n\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 17]]);\n    }));\n\n    function removeCauhoi(_x11, _x12) {\n      return _removeCauhoi.apply(this, arguments);\n    }\n\n    return removeCauhoi;\n  }(),\n  // create De Thi\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n      var _req$body3, ma, thoigian, namhoc, tieude, ghichu, mon, dethi;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _req$body3 = req.body, ma = _req$body3.ma, thoigian = _req$body3.thoigian, namhoc = _req$body3.namhoc, tieude = _req$body3.tieude, ghichu = _req$body3.ghichu, mon = _req$body3.mon;\n              dethi = new DeThi({\n                ma: ma,\n                tieude: tieude,\n                thoigian: thoigian,\n                namhoc: namhoc,\n                ghichu: ghichu,\n                mon: mon,\n                trangthai: 0\n              });\n\n              try {\n                dethi.save().then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(respone) {\n                    var p_mon, dethi_result;\n                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return Mon.findById(mon);\n\n                          case 2:\n                            p_mon = _context7.sent;\n                            p_mon.dethis.push(respone._id);\n                            p_mon.save();\n                            _context7.next = 7;\n                            return DeThi.findById(respone._id).populate('mon');\n\n                          case 7:\n                            dethi_result = _context7.sent;\n                            res.send(dethi_result);\n\n                          case 9:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }));\n\n                  return function (_x15) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              } catch (err) {\n                res.json({\n                  error: error\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function post(_x13, _x14) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete loaicauhoi (id)\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n      var _iddethi, dethi, mon, newDethis_mon;\n\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _iddethi = req.params._iddethi;\n              _context11.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context11.sent;\n\n              if (dethi.cauhois.length > 0) {\n                dethi.cauhois.forEach( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(cauhoi) {\n                    var each_cauhoi, newDethis;\n                    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            _context9.next = 2;\n                            return CauHoi.findById(cauhoi);\n\n                          case 2:\n                            each_cauhoi = _context9.sent;\n                            newDethis = each_cauhoi.dethis.filter(function (x) {\n                              return \"\".concat(x) != _iddethi;\n                            });\n                            each_cauhoi.dethis = newDethis;\n                            each_cauhoi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee9);\n                  }));\n\n                  return function (_x18) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }\n\n              if (dethi.kithis.length > 0) {\n                dethi.kithis.forEach( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(kithi) {\n                    var each_kithi, newKithis;\n                    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                      while (1) {\n                        switch (_context10.prev = _context10.next) {\n                          case 0:\n                            _context10.next = 2;\n                            return KiThi.findById(kithi);\n\n                          case 2:\n                            each_kithi = _context10.sent;\n                            newKithis = each_kithi.dethis.filter(function (x) {\n                              return \"\".concat(x) != _iddethi;\n                            });\n                            each_kithi.dethis = newKithis;\n                            each_kithi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context10.stop();\n                        }\n                      }\n                    }, _callee10);\n                  }));\n\n                  return function (_x19) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n              }\n\n              _context11.next = 9;\n              return Mon.findById(dethi.mon);\n\n            case 9:\n              mon = _context11.sent;\n              newDethis_mon = mon.dethis.filter(function (x) {\n                return \"\".concat(x) != _iddethi;\n              });\n              mon.dethis = newDethis_mon;\n              mon.save();\n              dethi[\"delete\"]();\n              res.end();\n              _context11.next = 20;\n              break;\n\n            case 17:\n              _context11.prev = 17;\n              _context11.t0 = _context11[\"catch\"](0);\n              res.send(_context11.t0);\n\n            case 20:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 17]]);\n    }));\n\n    function remove(_x16, _x17) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dethi.controller.js"
      ],
      "names": [
        "DeThi",
        "require",
        "Mon",
        "CauHoi",
        "KiThi",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "dethi",
        "send",
        "detail",
        "_iddethi",
        "params",
        "findById",
        "path",
        "model",
        "testOfSubject",
        "_idmon",
        "mon",
        "dethis",
        "addQuestion",
        "body",
        "cauhois",
        "forEach",
        "item",
        "idx",
        "push",
        "save",
        "cauhoi",
        "length",
        "result_dethi",
        "removeCauhoi",
        "_idcauhoi",
        "newCauhois",
        "filter",
        "x",
        "newDethis",
        "post",
        "ma",
        "thoigian",
        "namhoc",
        "tieude",
        "ghichu",
        "trangthai",
        "then",
        "respone",
        "p_mon",
        "_id",
        "dethi_result",
        "err",
        "json",
        "error",
        "remove",
        "each_cauhoi",
        "kithis",
        "kithi",
        "each_kithi",
        "newKithis",
        "newDethis_mon",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMK,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcT,KAAK,CAACU,IAAN,GAAaC,QAAb,CAAsB,KAAtB,CADd;;AAAA;AACAC,cAAAA,KADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKfE,EAAAA,MAAM;AAAA,0EAAE,kBAAMN,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAECM,cAAAA,QAFD,GAEaP,GAAG,CAACQ,MAFjB,CAECD,QAFD;AAAA;AAAA,qBAGcf,KAAK,CAACiB,QAAN,CAAeF,QAAf,EAAyBJ,QAAzB,CAAkC;AACrDO,gBAAAA,IAAI,EAAC,SADgD;AAErDC,gBAAAA,KAAK,EAAC,QAF+C;AAGrDR,gBAAAA,QAAQ,EAAC;AACRO,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAE;AAFC;AAH4C,eAAlC,CAHd;;AAAA;AAGAP,cAAAA,KAHA;AAWNH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AAXM;AAAA;;AAAA;AAAA;AAAA;AAaNH,cAAAA,GAAG,CAACI,IAAJ;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALS;AAqBf;AACAO,EAAAA,aAAa;AAAA,iFAAG,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRY,cAAAA,MADQ,GACEb,GAAG,CAACQ,MADN,CACRK,MADQ;AAAA;AAAA;AAAA,qBAGOrB,KAAK,CAACU,IAAN,CAAW;AAACY,gBAAAA,GAAG,EAACD;AAAL,eAAX,CAHP;;AAAA;AAGRE,cAAAA,MAHQ;AAId;AACAd,cAAAA,GAAG,CAACI,IAAJ,CAASU,MAAT;AALc;AAAA;;AAAA;AAAA;AAAA;AAOdd,cAAAA,GAAG,CAACI,IAAJ;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtBE;AAgCfW,EAAAA,WAAW;AAAA,+EAAE,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEiBD,GAAG,CAACiB,IAFrB,EAEJC,OAFI,aAEJA,OAFI,EAEKX,QAFL,aAEKA,QAFL;AAAA;AAAA,qBAGOf,KAAK,CAACiB,QAAN,CAAeF,QAAf,CAHP;;AAAA;AAGPH,cAAAA,KAHO;;AAIX,kBAAIc,OAAJ,EAAY;AACXA,gBAAAA,OAAO,CAACC,OAAR;AAAA,qFAAiB,kBAAOC,IAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBjB,4BAAAA,KAAK,CAACc,OAAN,CAAcI,IAAd,CAAmBF,IAAnB;AACAhB,4BAAAA,KAAK,CAACmB,IAAN;AAFgB;AAAA,mCAIG5B,MAAM,CAACc,QAAP,CAAgBW,IAAhB,CAJH;;AAAA;AAIZI,4BAAAA,MAJY;AAKfA,4BAAAA,MAAM,CAACT,MAAP,CAAcO,IAAd,CAAmBf,QAAnB;AACAiB,4BAAAA,MAAM,CAACD,IAAP;;AANe,kCAQZF,GAAG,KAAKH,OAAO,CAACO,MAAR,GAAe,CARX;AAAA;AAAA;AAAA;;AAAA;AAAA,mCASYjC,KAAK,CAACiB,QAAN,CAAeF,QAAf,EAAyBJ,QAAzB,CAAkC,KAAlC,CATZ;;AAAA;AASTuB,4BAAAA,YATS;AAUfzB,4BAAAA,GAAG,CAACI,IAAJ,CAAS;AAACqB,8BAAAA,YAAY,EAAZA;AAAD,6BAAT;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjB;;AAAA;AAAA;AAAA;AAAA;AAaA,eAlBU,CAmBX;;;AAnBW;AAAA;;AAAA;AAAA;AAAA;AAqBXzB,cAAAA,GAAG,CAACI,IAAJ;;AArBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhCI;AAwDf;AACAsB,EAAAA,YAAY;AAAA,gFAAE,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEkBD,GAAG,CAACiB,IAFtB,EAELW,SAFK,cAELA,SAFK,EAEMrB,QAFN,cAEMA,QAFN;AAAA;AAAA,qBAGMf,KAAK,CAACiB,QAAN,CAAeF,QAAf,EAAyBJ,QAAzB,CAAkC,KAAlC,CAHN;;AAAA;AAGRC,cAAAA,KAHQ;AAIX;AACMyB,cAAAA,UALK,GAKQzB,KAAK,CAACc,OAAN,CAAcY,MAAd,CAAqB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAASH,SAAb;AAAA,eAAtB,CALR;AAMVxB,cAAAA,KAAK,CAACc,OAAN,GAAgBW,UAAhB;AACAzB,cAAAA,KAAK,CAACmB,IAAN;AAPU;AAAA,qBAQU5B,MAAM,CAACc,QAAP,CAAgBmB,SAAhB,CARV;;AAAA;AAQLJ,cAAAA,MARK;AASJQ,cAAAA,SATI,GASQR,MAAM,CAACT,MAAP,CAAce,MAAd,CAAqB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAAUxB,QAAd;AAAA,eAAtB,CATR;AAUViB,cAAAA,MAAM,CAACT,MAAP,GAAgBiB,SAAhB;AACAR,cAAAA,MAAM,CAACD,IAAP;AACDtB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAACqB,gBAAAA,YAAY,EAACtB;AAAd,eAAT,EAZW,CAcX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BW;AAAA;;AAAA;AAAA;AAAA;AA+BZH,cAAAA,GAAG,CAACI,IAAJ;;AA/BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzDG;AA2Ff;AACA4B,EAAAA,IAAI;AAAA,wEAAE,kBAAMjC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BACoDD,GAAG,CAACiB,IADxD,EACOiB,EADP,cACOA,EADP,EACWC,QADX,cACWA,QADX,EACqBC,MADrB,cACqBA,MADrB,EAC6BC,MAD7B,cAC6BA,MAD7B,EACqCC,MADrC,cACqCA,MADrC,EAC6CxB,GAD7C,cAC6CA,GAD7C;AAECV,cAAAA,KAFD,GAES,IAAIZ,KAAJ,CAAU;AACvB0C,gBAAAA,EAAE,EAAEA,EADmB;AAEvBG,gBAAAA,MAAM,EAACA,MAFgB;AAGvBF,gBAAAA,QAAQ,EAAEA,QAHa;AAIvBC,gBAAAA,MAAM,EAAEA,MAJe;AAKvBE,gBAAAA,MAAM,EAAEA,MALe;AAMvBxB,gBAAAA,GAAG,EAACA,GANmB;AAOvByB,gBAAAA,SAAS,EAAE;AAPY,eAAV,CAFT;;AAWL,kBAAG;AACFnC,gBAAAA,KAAK,CAACmB,IAAN,GAAaiB,IAAb;AAAA,sFAAmB,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEA/C,GAAG,CAACe,QAAJ,CAAaK,GAAb,CAFA;;AAAA;AAEd4B,4BAAAA,KAFc;AAGjBA,4BAAAA,KAAK,CAAC3B,MAAN,CAAaO,IAAb,CAAkBmB,OAAO,CAACE,GAA1B;AACAD,4BAAAA,KAAK,CAACnB,IAAN;AAJiB;AAAA,mCAKS/B,KAAK,CAACiB,QAAN,CAAegC,OAAO,CAACE,GAAvB,EAA4BxC,QAA5B,CAAqC,KAArC,CALT;;AAAA;AAKZyC,4BAAAA,YALY;AAMlB3C,4BAAAA,GAAG,CAACI,IAAJ,CAASuC,YAAT;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;;AAAA;AAAA;AAAA;AAAA;AASA,eAVD,CAUE,OAAMC,GAAN,EAAU;AACX5C,gBAAAA,GAAG,CAAC6C,IAAJ,CAAS;AACRC,kBAAAA,KAAK,EAAGA;AADA,iBAAT;AAGA;;AAzBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA5FW;AAuHf;AACAC,EAAAA,MAAM;AAAA,0EAAE,mBAAOhD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGCM,cAAAA,QAHD,GAGaP,GAAG,CAACQ,MAHjB,CAGCD,QAHD;AAAA;AAAA,qBAIcf,KAAK,CAACiB,QAAN,CAAeF,QAAf,CAJd;;AAAA;AAIAH,cAAAA,KAJA;;AAMN,kBAAIA,KAAK,CAACc,OAAN,CAAcO,MAAd,GAAqB,CAAzB,EAA2B;AAC1BrB,gBAAAA,KAAK,CAACc,OAAN,CAAcC,OAAd;AAAA,sFAAsB,kBAAMK,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACG7B,MAAM,CAACc,QAAP,CAAgBe,MAAhB,CADH;;AAAA;AACjByB,4BAAAA,WADiB;AAEjBjB,4BAAAA,SAFiB,GAELiB,WAAW,CAAClC,MAAZ,CAAmBe,MAAnB,CAA0B,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAAUxB,QAAb;AAAA,6BAA3B,CAFK;AAGpB0C,4BAAAA,WAAW,CAAClC,MAAZ,GAAqBiB,SAArB;AACAiB,4BAAAA,WAAW,CAAC1B,IAAZ;;AAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AACD,kBAAInB,KAAK,CAAC8C,MAAN,CAAazB,MAAb,GAAoB,CAAxB,EAA0B;AACzBrB,gBAAAA,KAAK,CAAC8C,MAAN,CAAa/B,OAAb;AAAA,sFAAqB,mBAAMgC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACGvD,KAAK,CAACa,QAAN,CAAe0C,KAAf,CADH;;AAAA;AAChBC,4BAAAA,UADgB;AAEhBC,4BAAAA,SAFgB,GAEJD,UAAU,CAACrC,MAAX,CAAkBe,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAAUxB,QAAb;AAAA,6BAA1B,CAFI;AAGnB6C,4BAAAA,UAAU,CAACrC,MAAX,GAAoBsC,SAApB;AACAD,4BAAAA,UAAU,CAAC7B,IAAX;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AArBK;AAAA,qBAsBY7B,GAAG,CAACe,QAAJ,CAAaL,KAAK,CAACU,GAAnB,CAtBZ;;AAAA;AAsBAA,cAAAA,GAtBA;AAuBDwC,cAAAA,aAvBC,GAuBexC,GAAG,CAACC,MAAJ,CAAWe,MAAX,CAAkB,UAAAC,CAAC;AAAA,uBAAG,UAAGA,CAAH,KAAUxB,QAAb;AAAA,eAAnB,CAvBf;AAwBJO,cAAAA,GAAG,CAACC,MAAJ,GAAauC,aAAb;AACAxC,cAAAA,GAAG,CAACS,IAAJ;AACFnB,cAAAA,KAAK,UAAL;AACAH,cAAAA,GAAG,CAACsD,GAAJ;AA3BM;AAAA;;AAAA;AAAA;AAAA;AA6BNtD,cAAAA,GAAG,CAACI,IAAJ;;AA7BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAxHS,CAAhB;AA2JAmD,MAAM,CAACC,OAAP,GAAiB3D,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let DeThi = require('../models/dethi.model')\r\nlet Mon = require('../models/mon.model')\r\nlet CauHoi = require('../models/cauhoi.model')\r\nlet KiThi = require('../models/kithi.model')\r\nvar shortid = require('shortid');\r\n\r\nconst methods = {\r\n\tindex: async(req, res)=>{\r\n\t\tconst dethi = await DeThi.find().populate('mon')\r\n\t\tres.send(dethi)\r\n\t},\r\n\tdetail: async(req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_iddethi} = req.params\r\n\t\t\tconst dethi = await DeThi.findById(_iddethi).populate({\r\n\t\t\t\tpath:'cauhois',\r\n\t\t\t\tmodel:'CauHoi',\r\n\t\t\t\tpopulate:{\r\n\t\t\t\t\tpath:'phuongans',\r\n\t\t\t\t\tmodel: 'PhuongAn'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tres.send(dethi)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\t// de thi cua mon\r\n\ttestOfSubject : async (req, res) => {\r\n\t\tconst {_idmon} = req.params\t\t\t\t\r\n\t\ttry{\t\t\t\r\n\t\t\tconst dethis = await DeThi.find({mon:_idmon})\r\n\t\t\t//console.log('dethi',dethis)\r\n\t\t\tres.send(dethis)\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\taddQuestion: async (req, res)=>{\t\t\t\r\n\t\ttry{\t\t\t\r\n\t\t\tconst {cauhois, _iddethi} = req.body\r\n\t\t\tlet dethi = await DeThi.findById(_iddethi)\r\n\t\t\tif (cauhois){\r\n\t\t\t\tcauhois.forEach( async (item,idx)=>{\r\n\t\t\t\t\tdethi.cauhois.push(item)\r\n\t\t\t\t\tdethi.save()\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet cauhoi = await CauHoi.findById(item)\t\t\t\t\t\r\n\t\t\t\t\t\tcauhoi.dethis.push(_iddethi)\r\n\t\t\t\t\t\tcauhoi.save()\t\r\n\r\n\t\t\t\t\tif (idx === cauhois.length-1){\r\n\t\t\t\t\t\tconst result_dethi = await DeThi.findById(_iddethi).populate('mon')\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.send({result_dethi})\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t}\t\t\t\r\n\t\t\t// res.send(dethi)\r\n\t\t}catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\t\t\t\r\n\t},\r\n\t// remove cau hoi cua de\r\n\tremoveCauhoi: async (req, res)=>{\t\t\t\r\n\t\ttry{\t\t\r\n\t\t\tconst {_idcauhoi, _iddethi} = req.body\t\t\r\n\t\t\tlet dethi = await DeThi.findById(_iddethi).populate('mon')\r\n\t\t\t\t// update de thi cua cau hoi\r\n\t\t\t\tconst newCauhois = dethi.cauhois.filter(x => `${x}`!= _idcauhoi)\r\n\t\t\t\t\tdethi.cauhois = newCauhois\r\n\t\t\t\t\tdethi.save()\r\n\t\t\t\tconst cauhoi = await CauHoi.findById(_idcauhoi)\r\n\t\t\t\t\tconst newDethis = cauhoi.dethis.filter(x => `${x}` != _iddethi)\r\n\t\t\t\t\tcauhoi.dethis = newDethis\r\n\t\t\t\t\tcauhoi.save()\r\n\t\t\t\tres.send({result_dethi:dethi})\r\n\r\n\t\t\t\t// dethi.cauhois.forEach(async (cauhoi,idx)=>{\r\n\t\t\t\t// \tlet each_cauhoi = await CauHoi.findById(cauhoi)\r\n\t\t\t\t// \tlet newDethis = each_cauhoi.dethis.filter(x=> `${x}`!= _iddethi)\r\n\t\t\t\t// \t\teach_cauhoi.dethis = newDethis\r\n\t\t\t\t// \t\teach_cauhoi.save()\r\n\t\t\t\t// \tif (idx===dethi.cauhois.length-1){\r\n\t\t\t\t// \t\t\t// update cau hoi cua de thi\t\r\n\t\t\t\t// \t\tlet newCauhoi = dethi.cauhois.filter(x=> `${x}` != _idcauhoi)\r\n\t\t\t\t// \t\t\tdethi.cauhois = newCauhoi\r\n\t\t\t\t// \t\t\tdethi.save().then(()=>{\r\n\t\t\t\t// \t\t\t\tres.send({result_dethi:dethi})\r\n\t\t\t\t// \t\t\t})\r\n\t\t\t\t// \t\t//const result_dethi = await DeThi.findById(_iddethi).populate('mon')\t\t\t\t\t\t\r\n\t\t\t\t// \t}\t\t\t\t\t\r\n\t\t\t\t// })\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t}catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\t\t\t\r\n\t},\r\n\t// create De Thi\r\n\tpost: async(req, res)=>{        \t\t\r\n        let { ma, thoigian, namhoc, tieude, ghichu, mon} = req.body               \r\n\t\tconst dethi = new DeThi({\r\n\t\t\tma: ma,\r\n\t\t\ttieude:tieude,\r\n\t\t\tthoigian: thoigian,\r\n\t\t\tnamhoc: namhoc,\r\n\t\t\tghichu: ghichu,\r\n\t\t\tmon:mon,\r\n\t\t\ttrangthai: 0,\r\n\t\t})\r\n\t\ttry{\t\t\t\t\t\r\n\t\t\tdethi.save().then( async (respone)=>{\r\n\t\t\t\t// dethi->mon\r\n\t\t\t\tlet p_mon = await Mon.findById(mon)\r\n\t\t\t\t\tp_mon.dethis.push(respone._id)\r\n\t\t\t\t\tp_mon.save()\r\n\t\t\t\tconst dethi_result = await DeThi.findById(respone._id).populate('mon')\r\n\t\t\t\tres.send(dethi_result)\r\n\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.json({\r\n\t\t\t\terror : error \r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// delete loaicauhoi (id)\r\n\tremove: async (req, res)=>{\t\t\r\n\t//mon, kithis, cauhois\t\t\r\n\t\ttry{\r\n\t\t\tconst {_iddethi} = req.params\r\n\t\t\tconst dethi = await DeThi.findById(_iddethi)\r\n\t\t\t\t\r\n\t\t\tif (dethi.cauhois.length>0){\r\n\t\t\t\tdethi.cauhois.forEach(async cauhoi=>{\r\n\t\t\t\t\tlet each_cauhoi = await CauHoi.findById(cauhoi)\r\n\t\t\t\t\tlet newDethis = each_cauhoi.dethis.filter(x=> `${x}` != _iddethi)\r\n\t\t\t\t\t\teach_cauhoi.dethis = newDethis\r\n\t\t\t\t\t\teach_cauhoi.save()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (dethi.kithis.length>0){\r\n\t\t\t\tdethi.kithis.forEach(async kithi=>{\r\n\t\t\t\t\tlet each_kithi = await KiThi.findById(kithi)\r\n\t\t\t\t\tlet newKithis = each_kithi.dethis.filter(x=> `${x}` != _iddethi)\r\n\t\t\t\t\t\teach_kithi.dethis = newKithis\r\n\t\t\t\t\t\teach_kithi.save()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tconst mon = await Mon.findById(dethi.mon)\r\n\t\t\t\tlet newDethis_mon = mon.dethis.filter(x=> `${x}` != _iddethi)\r\n\t\t\t\t\tmon.dethis = newDethis_mon\r\n\t\t\t\t\tmon.save()\r\n\t\t\tdethi.delete()\r\n\t\t\tres.end()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t\t//res.send(user)\r\n\t}\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903186
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\kithi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\kithi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\kithi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\kithi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "kithi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  tieude: String,\n  matkhau: String,\n  ngaythi: String,\n  hocki: String,\n  thoigian: Number,\n  trangthai: Boolean,\n  tinhtrang: Number,\n  // 0 da thi, 1 dang thi, 2 chua thi\n  mon: {\n    type: Schema.Types.ObjectId,\n    ref: \"Mon\"\n  },\n  dethis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  dethidongs: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  dethimos: [{\n    type: Schema.Types.ObjectId,\n    ref: \"DeThi\"\n  }],\n  nhoms: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Nhom\"\n  }],\n  giaovien: {\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }\n});\nvar KiThi = mongoose.model('KiThi', schema);\nmodule.exports = KiThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpdGhpLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsIm1hIiwiU3RyaW5nIiwidGlldWRlIiwibWF0a2hhdSIsIm5nYXl0aGkiLCJob2NraSIsInRob2lnaWFuIiwiTnVtYmVyIiwidHJhbmd0aGFpIiwiQm9vbGVhbiIsInRpbmh0cmFuZyIsIm1vbiIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiZGV0aGlzIiwiZGV0aGlkb25ncyIsImRldGhpbW9zIiwibmhvbXMiLCJnaWFvdmllbiIsIktpVGhpIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsRUFBRSxFQUFFQyxNQUZnQjtBQUdwQkMsRUFBQUEsTUFBTSxFQUFDRCxNQUhhO0FBSXBCRSxFQUFBQSxPQUFPLEVBQUNGLE1BSlk7QUFLcEJHLEVBQUFBLE9BQU8sRUFBRUgsTUFMVztBQU1wQkksRUFBQUEsS0FBSyxFQUFFSixNQU5hO0FBT3BCSyxFQUFBQSxRQUFRLEVBQUNDLE1BUFc7QUFRcEJDLEVBQUFBLFNBQVMsRUFBRUMsT0FSUztBQVNwQkMsRUFBQUEsU0FBUyxFQUFFSCxNQVRTO0FBU0Q7QUFFckJJLEVBQUFBLEdBQUcsRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURkO0FBRUpDLElBQUFBLEdBQUcsRUFBQztBQUZBLEdBWGtCO0FBZXZCQyxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNQSixJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURYO0FBRVBDLElBQUFBLEdBQUcsRUFBQztBQUZHLEdBQUQsQ0FmZ0I7QUFtQnZCRSxFQUFBQSxVQUFVLEVBQUMsQ0FBQztBQUNYTCxJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURQO0FBRVhDLElBQUFBLEdBQUcsRUFBQztBQUZPLEdBQUQsQ0FuQlk7QUF1QnZCRyxFQUFBQSxRQUFRLEVBQUMsQ0FBQztBQUNUTixJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURUO0FBRVRDLElBQUFBLEdBQUcsRUFBQztBQUZLLEdBQUQsQ0F2QmM7QUEyQnZCSSxFQUFBQSxLQUFLLEVBQUMsQ0FBQztBQUNOUCxJQUFBQSxJQUFJLEVBQUNkLE1BQU0sQ0FBQ2UsS0FBUCxDQUFhQyxRQURaO0FBRU5DLElBQUFBLEdBQUcsRUFBQztBQUZFLEdBQUQsQ0EzQmlCO0FBK0J2QkssRUFBQUEsUUFBUSxFQUFDO0FBQ1JSLElBQUFBLElBQUksRUFBQ2QsTUFBTSxDQUFDZSxLQUFQLENBQWFDLFFBRFY7QUFFUkMsSUFBQUEsR0FBRyxFQUFDO0FBRkk7QUEvQmMsQ0FBWCxDQUFiO0FBcUNBLElBQUlNLEtBQUssR0FBR3pCLFFBQVEsQ0FBQzBCLEtBQVQsQ0FBZSxPQUFmLEVBQXdCdkIsTUFBeEIsQ0FBWjtBQUVBd0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxLQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxyXG5cclxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxyXG5cclxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG5cclxuICAgIG1hOiBTdHJpbmcsXHJcbiAgICB0aWV1ZGU6U3RyaW5nLFxyXG4gICAgbWF0a2hhdTpTdHJpbmcsXHJcbiAgICBuZ2F5dGhpOiBTdHJpbmcsICAgIFxyXG4gICAgaG9ja2k6IFN0cmluZywgICAgXHJcbiAgICB0aG9pZ2lhbjpOdW1iZXIsICAgIFxyXG4gICAgdHJhbmd0aGFpOiBCb29sZWFuLFxyXG4gICAgdGluaHRyYW5nOiBOdW1iZXIsIC8vIDAgZGEgdGhpLCAxIGRhbmcgdGhpLCAyIGNodWEgdGhpXHJcbiBcdCBcdFxyXG4gXHRtb246e1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJNb25cIlxyXG5cdH0sXHJcblx0ZGV0aGlzOlt7XHJcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIkRlVGhpXCJcclxuXHR9XSxcdFxyXG5cdGRldGhpZG9uZ3M6W3tcclxuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG5cdFx0cmVmOlwiRGVUaGlcIlxyXG5cdH1dLFx0XHJcblx0ZGV0aGltb3M6W3tcclxuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG5cdFx0cmVmOlwiRGVUaGlcIlxyXG5cdH1dLFx0XHJcblx0bmhvbXM6W3tcclxuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG5cdFx0cmVmOlwiTmhvbVwiXHJcblx0fV0sXHJcblx0Z2lhb3ZpZW46e1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJUYWlLaG9hblwiXHJcblx0fSxcclxufSlcclxuXHJcbnZhciBLaVRoaSA9IG1vbmdvb3NlLm1vZGVsKCdLaVRoaScsIHNjaGVtYSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gS2lUaGkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "kithi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "tieude",
        "matkhau",
        "ngaythi",
        "hocki",
        "thoigian",
        "Number",
        "trangthai",
        "Boolean",
        "tinhtrang",
        "mon",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "dethis",
        "dethidongs",
        "dethimos",
        "nhoms",
        "giaovien",
        "KiThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,MAAM,EAACD,MAHa;AAIpBE,EAAAA,OAAO,EAACF,MAJY;AAKpBG,EAAAA,OAAO,EAAEH,MALW;AAMpBI,EAAAA,KAAK,EAAEJ,MANa;AAOpBK,EAAAA,QAAQ,EAACC,MAPW;AAQpBC,EAAAA,SAAS,EAAEC,OARS;AASpBC,EAAAA,SAAS,EAAEH,MATS;AASD;AAErBI,EAAAA,GAAG,EAAC;AACJC,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAXkB;AAevBC,EAAAA,MAAM,EAAC,CAAC;AACPJ,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD,CAfgB;AAmBvBE,EAAAA,UAAU,EAAC,CAAC;AACXL,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADP;AAEXC,IAAAA,GAAG,EAAC;AAFO,GAAD,CAnBY;AAuBvBG,EAAAA,QAAQ,EAAC,CAAC;AACTN,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GAAD,CAvBc;AA2BvBI,EAAAA,KAAK,EAAC,CAAC;AACNP,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADZ;AAENC,IAAAA,GAAG,EAAC;AAFE,GAAD,CA3BiB;AA+BvBK,EAAAA,QAAQ,EAAC;AACRR,IAAAA,IAAI,EAACd,MAAM,CAACe,KAAP,CAAaC,QADV;AAERC,IAAAA,GAAG,EAAC;AAFI;AA/Bc,CAAX,CAAb;AAqCA,IAAIM,KAAK,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,OAAf,EAAwBvB,MAAxB,CAAZ;AAEAwB,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ma: String,\r\n    tieude:String,\r\n    matkhau:String,\r\n    ngaythi: String,    \r\n    hocki: String,    \r\n    thoigian:Number,    \r\n    trangthai: Boolean,\r\n    tinhtrang: Number, // 0 da thi, 1 dang thi, 2 chua thi\r\n \t \t\r\n \tmon:{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"Mon\"\r\n\t},\r\n\tdethis:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"DeThi\"\r\n\t}],\t\r\n\tdethidongs:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"DeThi\"\r\n\t}],\t\r\n\tdethimos:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"DeThi\"\r\n\t}],\t\r\n\tnhoms:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"Nhom\"\r\n\t}],\r\n\tgiaovien:{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"TaiKhoan\"\r\n\t},\r\n})\r\n\r\nvar KiThi = mongoose.model('KiThi', schema)\r\n\r\nmodule.exports = KiThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903197
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\kithi.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\kithi.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\kithi.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\kithi.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "kithi.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _kithi = _interopRequireDefault(require(\"../controllers/kithi.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _kithi[\"default\"].index);\nrouter.get('/detail/:_idkithi', _kithi[\"default\"].detail);\nrouter.get('/trang-thai/:_idkithi', _kithi[\"default\"].updateStatus);\nrouter.get('/sinh-vien/:_idsv', _kithi[\"default\"].kithiCuaSV);\nrouter.post('/load-de/', _kithi[\"default\"].loadDeCuaKiThi); // add ki thi\n\nrouter.post('/', _kithi[\"default\"].post); // delete cau  hoi\n\nrouter[\"delete\"]('/remove/:_idkithi', _kithi[\"default\"].destroy); // them de thi cho ki thi\n\nrouter.post('/them-de-thi', _kithi[\"default\"].themDeThi); // tahy doi de dong mo\n\nrouter.post('/de-dong-mo', _kithi[\"default\"].changeDongMo); // set tinh trang\n\nrouter.post('/tinh-trang', _kithi[\"default\"].tinhtrang); // doi mat khau ki thi\n\nrouter.post('/doi-mat-khau', _kithi[\"default\"].DoiMatKhau); // them nhom thi cho ki thi\n\nrouter.post('/them-nhom', _kithi[\"default\"].themNhom);\nrouter.post('/remove-de-thi', _kithi[\"default\"].removeDethi);\nrouter.post('/remove-nhom', _kithi[\"default\"].removeNhom);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpdGhpLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwiY29udHJvbGxlcnMiLCJpbmRleCIsImRldGFpbCIsInVwZGF0ZVN0YXR1cyIsImtpdGhpQ3VhU1YiLCJwb3N0IiwibG9hZERlQ3VhS2lUaGkiLCJkZXN0cm95IiwidGhlbURlVGhpIiwiY2hhbmdlRG9uZ01vIiwidGluaHRyYW5nIiwiRG9pTWF0S2hhdSIsInRoZW1OaG9tIiwicmVtb3ZlRGV0aGkiLCJyZW1vdmVOaG9tIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUhBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUlBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxrQkFBWUMsS0FBNUI7QUFFQUosTUFBTSxDQUFDRSxHQUFQLENBQVcsbUJBQVgsRUFBZ0NDLGtCQUFZRSxNQUE1QztBQUVBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ0Msa0JBQVlHLFlBQWhEO0FBRUFOLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLG1CQUFYLEVBQWdDQyxrQkFBWUksVUFBNUM7QUFFQVAsTUFBTSxDQUFDUSxJQUFQLENBQVksV0FBWixFQUF5Qkwsa0JBQVlNLGNBQXJDLEUsQ0FFQTs7QUFDQVQsTUFBTSxDQUFDUSxJQUFQLENBQVksR0FBWixFQUFpQkwsa0JBQVlLLElBQTdCLEUsQ0FDQTs7QUFDQVIsTUFBTSxVQUFOLENBQWMsbUJBQWQsRUFBbUNHLGtCQUFZTyxPQUEvQyxFLENBRUE7O0FBQ0FWLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGNBQVosRUFBNEJMLGtCQUFZUSxTQUF4QyxFLENBQ0E7O0FBQ0FYLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGFBQVosRUFBMkJMLGtCQUFZUyxZQUF2QyxFLENBRUE7O0FBQ0FaLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGFBQVosRUFBMkJMLGtCQUFZVSxTQUF2QyxFLENBRUE7O0FBQ0FiLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGVBQVosRUFBNkJMLGtCQUFZVyxVQUF6QyxFLENBRUE7O0FBQ0FkLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFlBQVosRUFBMEJMLGtCQUFZWSxRQUF0QztBQUVBZixNQUFNLENBQUNRLElBQVAsQ0FBWSxnQkFBWixFQUE4Qkwsa0JBQVlhLFdBQTFDO0FBQ0FoQixNQUFNLENBQUNRLElBQVAsQ0FBWSxjQUFaLEVBQTRCTCxrQkFBWWMsVUFBeEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxyXG5cclxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL2tpdGhpLmNvbnRyb2xsZXInXHJcblxyXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXHJcblxyXG5yb3V0ZXIuZ2V0KCcvZGV0YWlsLzpfaWRraXRoaScsIGNvbnRyb2xsZXJzLmRldGFpbClcclxuXHJcbnJvdXRlci5nZXQoJy90cmFuZy10aGFpLzpfaWRraXRoaScsIGNvbnRyb2xsZXJzLnVwZGF0ZVN0YXR1cylcclxuXHJcbnJvdXRlci5nZXQoJy9zaW5oLXZpZW4vOl9pZHN2JywgY29udHJvbGxlcnMua2l0aGlDdWFTVilcclxuXHJcbnJvdXRlci5wb3N0KCcvbG9hZC1kZS8nLCBjb250cm9sbGVycy5sb2FkRGVDdWFLaVRoaSlcclxuXHJcbi8vIGFkZCBraSB0aGlcclxucm91dGVyLnBvc3QoJy8nLCBjb250cm9sbGVycy5wb3N0KVxyXG4vLyBkZWxldGUgY2F1ICBob2lcclxucm91dGVyLmRlbGV0ZSgnL3JlbW92ZS86X2lka2l0aGknLCBjb250cm9sbGVycy5kZXN0cm95KVxyXG5cclxuLy8gdGhlbSBkZSB0aGkgY2hvIGtpIHRoaVxyXG5yb3V0ZXIucG9zdCgnL3RoZW0tZGUtdGhpJywgY29udHJvbGxlcnMudGhlbURlVGhpKVxyXG4vLyB0YWh5IGRvaSBkZSBkb25nIG1vXHJcbnJvdXRlci5wb3N0KCcvZGUtZG9uZy1tbycsIGNvbnRyb2xsZXJzLmNoYW5nZURvbmdNbylcclxuXHJcbi8vIHNldCB0aW5oIHRyYW5nXHJcbnJvdXRlci5wb3N0KCcvdGluaC10cmFuZycsIGNvbnRyb2xsZXJzLnRpbmh0cmFuZylcclxuXHJcbi8vIGRvaSBtYXQga2hhdSBraSB0aGlcclxucm91dGVyLnBvc3QoJy9kb2ktbWF0LWtoYXUnLCBjb250cm9sbGVycy5Eb2lNYXRLaGF1KVxyXG5cclxuLy8gdGhlbSBuaG9tIHRoaSBjaG8ga2kgdGhpXHJcbnJvdXRlci5wb3N0KCcvdGhlbS1uaG9tJywgY29udHJvbGxlcnMudGhlbU5ob20pXHJcblxyXG5yb3V0ZXIucG9zdCgnL3JlbW92ZS1kZS10aGknLCBjb250cm9sbGVycy5yZW1vdmVEZXRoaSlcclxucm91dGVyLnBvc3QoJy9yZW1vdmUtbmhvbScsIGNvbnRyb2xsZXJzLnJlbW92ZU5ob20pXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "kithi.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "detail",
        "updateStatus",
        "kithiCuaSV",
        "post",
        "loadDeCuaKiThi",
        "destroy",
        "themDeThi",
        "changeDongMo",
        "tinhtrang",
        "DoiMatKhau",
        "themNhom",
        "removeDethi",
        "removeNhom",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,kBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYE,MAA5C;AAEAL,MAAM,CAACE,GAAP,CAAW,uBAAX,EAAoCC,kBAAYG,YAAhD;AAEAN,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCC,kBAAYI,UAA5C;AAEAP,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBL,kBAAYM,cAArC,E,CAEA;;AACAT,MAAM,CAACQ,IAAP,CAAY,GAAZ,EAAiBL,kBAAYK,IAA7B,E,CACA;;AACAR,MAAM,UAAN,CAAc,mBAAd,EAAmCG,kBAAYO,OAA/C,E,CAEA;;AACAV,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BL,kBAAYQ,SAAxC,E,CACA;;AACAX,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,kBAAYS,YAAvC,E,CAEA;;AACAZ,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,kBAAYU,SAAvC,E,CAEA;;AACAb,MAAM,CAACQ,IAAP,CAAY,eAAZ,EAA6BL,kBAAYW,UAAzC,E,CAEA;;AACAd,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0BL,kBAAYY,QAAtC;AAEAf,MAAM,CAACQ,IAAP,CAAY,gBAAZ,EAA8BL,kBAAYa,WAA1C;AACAhB,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BL,kBAAYc,UAAxC;AAEAC,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nimport controllers from '../controllers/kithi.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\nrouter.get('/detail/:_idkithi', controllers.detail)\r\n\r\nrouter.get('/trang-thai/:_idkithi', controllers.updateStatus)\r\n\r\nrouter.get('/sinh-vien/:_idsv', controllers.kithiCuaSV)\r\n\r\nrouter.post('/load-de/', controllers.loadDeCuaKiThi)\r\n\r\n// add ki thi\r\nrouter.post('/', controllers.post)\r\n// delete cau  hoi\r\nrouter.delete('/remove/:_idkithi', controllers.destroy)\r\n\r\n// them de thi cho ki thi\r\nrouter.post('/them-de-thi', controllers.themDeThi)\r\n// tahy doi de dong mo\r\nrouter.post('/de-dong-mo', controllers.changeDongMo)\r\n\r\n// set tinh trang\r\nrouter.post('/tinh-trang', controllers.tinhtrang)\r\n\r\n// doi mat khau ki thi\r\nrouter.post('/doi-mat-khau', controllers.DoiMatKhau)\r\n\r\n// them nhom thi cho ki thi\r\nrouter.post('/them-nhom', controllers.themNhom)\r\n\r\nrouter.post('/remove-de-thi', controllers.removeDethi)\r\nrouter.post('/remove-nhom', controllers.removeNhom)\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904080
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\kithi.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\kithi.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\kithi.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\kithi.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "kithi.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Cauhoi = require('../models/cauhoi.model');\n\nvar DeThi = require('../models/dethi.model');\n\nvar KiThi = require('../models/kithi.model');\n\nvar Mon = require('../models/mon.model');\n\nvar Nhom = require('../models/nhom.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var kithi;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return KiThi.find().populate({\n                path: 'dethis',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'sinhviens',\n                  model: 'TaiKhoan'\n                }\n              }).populate({\n                path: 'dethidongs',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              }).populate({\n                path: 'dethimos',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              });\n\n            case 2:\n              kithi = _context.sent;\n              //.sort({'_id':-1})\n              res.send(kithi);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  updateStatus: function () {\n    var _updateStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _idkithi = req.params._idkithi;\n              _context2.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context2.sent;\n              kithi.trangthai = !kithi.trangthai;\n              kithi.save();\n              res.end();\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    function updateStatus(_x3, _x4) {\n      return _updateStatus.apply(this, arguments);\n    }\n\n    return updateStatus;\n  }(),\n  kithiCuaSV: function () {\n    var _kithiCuaSV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idsv, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _idsv = req.params._idsv;\n              _context3.next = 4;\n              return TaiKhoan.findById(_idsv).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'kithis',\n                  model: 'KiThi'\n                }\n              });\n\n            case 4:\n              taikhoan = _context3.sent;\n              res.send(taikhoan);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    function kithiCuaSV(_x5, _x6) {\n      return _kithiCuaSV.apply(this, arguments);\n    }\n\n    return kithiCuaSV;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _idkithi = req.params._idkithi;\n              _context4.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context4.sent;\n              res.send(kithi);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              res.send(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    function detail(_x7, _x8) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  questionOfExam: function () {\n    var _questionOfExam = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var _iddethi, cauhoi, dethi;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _iddethi = req.params.id;\n              _context5.prev = 1;\n              cauhoi = [];\n              _context5.next = 5;\n              return DeThi.findById(_iddethi).populate('cauhois').select('cauhois');\n\n            case 5:\n              dethi = _context5.sent;\n              cauhoi.push(dethi); //const cauhoi = await Cauhoi.find()\n\n              res.send(cauhoi);\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](1);\n              res.send(_context5.t0);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 10]]);\n    }));\n\n    function questionOfExam(_x9, _x10) {\n      return _questionOfExam.apply(this, arguments);\n    }\n\n    return questionOfExam;\n  }(),\n  // add ki thi\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n      var _req$body, ma, tieude, matkhau, dethi, ngaythi, hocki, thoigian, mon, user, kithi;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _req$body = req.body, ma = _req$body.ma, tieude = _req$body.tieude, matkhau = _req$body.matkhau, dethi = _req$body.dethi, ngaythi = _req$body.ngaythi, hocki = _req$body.hocki, thoigian = _req$body.thoigian, mon = _req$body.mon, user = _req$body.user;\n              _context7.next = 3;\n              return new KiThi({\n                ma: ma,\n                tieude: tieude,\n                matkhau: matkhau,\n                ngaythi: ngaythi,\n                hocki: hocki,\n                mon: mon,\n                thoigian: thoigian,\n                trangthai: 0,\n                tinhtrang: 2,\n                // chua thi\n                giaovien: user._id\n              });\n\n            case 3:\n              kithi = _context7.sent;\n\n              try {\n                kithi.save().then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(respone) {\n                    var p_kithi, p_dethi;\n                    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.next = 2;\n                            return KiThi.findById(respone._id).populate({\n                              path: 'dethis',\n                              model: 'DeThi',\n                              populate: {\n                                path: 'mon',\n                                model: 'Mon'\n                              }\n                            });\n\n                          case 2:\n                            p_kithi = _context6.sent;\n                            p_kithi.dethis.push(dethi);\n                            p_kithi.dethimos.push(dethi);\n                            p_kithi.save();\n                            _context6.next = 8;\n                            return DeThi.findById(dethi);\n\n                          case 8:\n                            p_dethi = _context6.sent;\n                            p_dethi.kithis.push(respone._id);\n                            p_dethi.save();\n                            res.send(p_kithi);\n\n                          case 12:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x13) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (err) {\n                res.json({\n                  error: error\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function post(_x11, _x12) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  // delete cauhoi (id)\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n      var _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _idkithi = req.params._idkithi;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context10.sent;\n\n              if (kithi.dethis.length > 0) {\n                kithi.dethis.forEach( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(item) {\n                    var dethi, newKithis;\n                    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            _context8.next = 2;\n                            return DeThi.findById(item);\n\n                          case 2:\n                            dethi = _context8.sent;\n                            newKithis = dethi.kithis.filter(function (x) {\n                              return \"\".concat(x) != _idkithi;\n                            });\n                            dethi.kithis = newKithis;\n                            dethi.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function (_x16) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              }\n\n              if (kithi.nhoms.length > 0) {\n                kithi.nhoms.forEach( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(item_n) {\n                    var nhom, newKithis_n;\n                    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            _context9.next = 2;\n                            return Nhom.findById(item_n);\n\n                          case 2:\n                            nhom = _context9.sent;\n                            newKithis_n = nhom.kithis.filter(function (x) {\n                              return \"\".concat(x) != _idkithi;\n                            });\n                            nhom.kithis = newKithis_n;\n                            nhom.save();\n\n                          case 6:\n                          case \"end\":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee9);\n                  }));\n\n                  return function (_x17) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }\n\n              kithi[\"delete\"]();\n              res.send('ok');\n              _context10.next = 14;\n              break;\n\n            case 11:\n              _context10.prev = 11;\n              _context10.t0 = _context10[\"catch\"](1);\n              res.send(_context10.t0);\n\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 11]]);\n    }));\n\n    function destroy(_x14, _x15) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }(),\n  themDeThi: function () {\n    var _themDeThi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n      var _req$body2, _idkithi, _iddethi, dethi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _req$body2 = req.body, _idkithi = _req$body2._idkithi, _iddethi = _req$body2._iddethi;\n              _context11.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context11.sent;\n              dethi.kithis.push(_idkithi);\n              dethi.save();\n              _context11.next = 9;\n              return KiThi.findById(_idkithi).populate({\n                path: 'dethis',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              });\n\n            case 9:\n              kithi = _context11.sent;\n              kithi.dethis.push(_iddethi);\n              kithi.dethimos.push(_iddethi);\n              kithi.save();\n              res.send(kithi);\n              _context11.next = 19;\n              break;\n\n            case 16:\n              _context11.prev = 16;\n              _context11.t0 = _context11[\"catch\"](0);\n              res.send(_context11.t0);\n\n            case 19:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 16]]);\n    }));\n\n    function themDeThi(_x18, _x19) {\n      return _themDeThi.apply(this, arguments);\n    }\n\n    return themDeThi;\n  }(),\n  themNhom: function () {\n    var _themNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n      var _req$body3, _idkithi, _idnhom, nhom, kithi;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              _req$body3 = req.body, _idkithi = _req$body3._idkithi, _idnhom = _req$body3._idnhom;\n              _context13.next = 4;\n              return Nhom.findById(_idnhom);\n\n            case 4:\n              nhom = _context13.sent;\n              nhom.kithis.push(_idkithi);\n              nhom.save();\n              _context13.next = 9;\n              return KiThi.findById(_idkithi).populate({\n                path: 'dethis',\n                model: 'DeThi',\n                populate: {\n                  path: 'mon',\n                  model: 'Mon'\n                }\n              }).populate({\n                path: 'nhoms',\n                model: 'Nhom',\n                populate: {\n                  path: 'sinhviens',\n                  model: 'TaiKhoan'\n                }\n              });\n\n            case 9:\n              kithi = _context13.sent;\n              kithi.nhoms.push(_idnhom);\n              kithi.save().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                var kithi_result;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _context12.next = 2;\n                        return KiThi.findById(_idkithi).populate({\n                          path: 'dethis',\n                          model: 'DeThi',\n                          populate: {\n                            path: 'mon',\n                            model: 'Mon'\n                          }\n                        }).populate({\n                          path: 'nhoms',\n                          model: 'Nhom',\n                          populate: {\n                            path: 'sinhviens',\n                            model: 'TaiKhoan'\n                          }\n                        });\n\n                      case 2:\n                        kithi_result = _context12.sent;\n                        res.send(kithi_result);\n\n                      case 4:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              })));\n              _context13.next = 17;\n              break;\n\n            case 14:\n              _context13.prev = 14;\n              _context13.t0 = _context13[\"catch\"](0);\n              res.send(_context13.t0);\n\n            case 17:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 14]]);\n    }));\n\n    function themNhom(_x20, _x21) {\n      return _themNhom.apply(this, arguments);\n    }\n\n    return themNhom;\n  }(),\n  removeDethi: function () {\n    var _removeDethi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n      var _req$body4, _iddethi, _idkithi, dethirendermo, dethirenderdong, dethi, newKithis, kithi, newDethis;\n\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              _req$body4 = req.body, _iddethi = _req$body4._iddethi, _idkithi = _req$body4._idkithi, dethirendermo = _req$body4.dethirendermo, dethirenderdong = _req$body4.dethirenderdong;\n              _context14.next = 4;\n              return DeThi.findById(_iddethi);\n\n            case 4:\n              dethi = _context14.sent;\n              newKithis = dethi.kithis.filter(function (x) {\n                return \"\".concat(x) != _idkithi;\n              });\n              dethi.kithis = newKithis;\n              dethi.save();\n              _context14.next = 10;\n              return KiThi.findById(_idkithi);\n\n            case 10:\n              kithi = _context14.sent;\n              newDethis = kithi.dethis.filter(function (x) {\n                return \"\".concat(x) != _iddethi;\n              });\n              kithi.dethis = newDethis;\n              kithi.dethimos = dethirendermo;\n              kithi.dethidongs = dethirenderdong;\n              kithi.save();\n              res.end();\n              _context14.next = 22;\n              break;\n\n            case 19:\n              _context14.prev = 19;\n              _context14.t0 = _context14[\"catch\"](0);\n              res.send(_context14.t0);\n\n            case 22:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 19]]);\n    }));\n\n    function removeDethi(_x22, _x23) {\n      return _removeDethi.apply(this, arguments);\n    }\n\n    return removeDethi;\n  }(),\n  //remove nhom\n  removeNhom: function () {\n    var _removeNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n      var _req$body5, _idnhom, _idkithi, kithi, newNhoms, nhom, newKithis;\n\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              _req$body5 = req.body, _idnhom = _req$body5._idnhom, _idkithi = _req$body5._idkithi;\n              _context15.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context15.sent;\n              newNhoms = kithi.nhoms.filter(function (x) {\n                return \"\".concat(x) != _idnhom;\n              });\n              kithi.nhoms = newNhoms;\n              kithi.save();\n              _context15.next = 10;\n              return Nhom.findById(_idnhom);\n\n            case 10:\n              nhom = _context15.sent;\n              newKithis = nhom.kithis.filter(function (x) {\n                return \"\".concat(x) != _idkithi;\n              });\n              nhom.kithis = newKithis;\n              nhom.save();\n              res.end();\n              _context15.next = 20;\n              break;\n\n            case 17:\n              _context15.prev = 17;\n              _context15.t0 = _context15[\"catch\"](0);\n              res.send(_context15.t0);\n\n            case 20:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[0, 17]]);\n    }));\n\n    function removeNhom(_x24, _x25) {\n      return _removeNhom.apply(this, arguments);\n    }\n\n    return removeNhom;\n  }(),\n  loadDeCuaKiThi: function () {\n    var _loadDeCuaKiThi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n      var iddethis, dethis;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              try {\n                iddethis = req.body.iddethis;\n                dethis = [];\n\n                if (iddethis.length > 0) {\n                  iddethis.forEach( /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(_iddethi, idx) {\n                      var dethi;\n                      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                        while (1) {\n                          switch (_context16.prev = _context16.next) {\n                            case 0:\n                              _context16.next = 2;\n                              return DeThi.findById(_iddethi);\n\n                            case 2:\n                              dethi = _context16.sent;\n                              dethis.push(dethi);\n\n                              if (idx === iddethis.length - 1) {\n                                res.send(dethis);\n                              }\n\n                            case 5:\n                            case \"end\":\n                              return _context16.stop();\n                          }\n                        }\n                      }, _callee16);\n                    }));\n\n                    return function (_x28, _x29) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                }\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    function loadDeCuaKiThi(_x26, _x27) {\n      return _loadDeCuaKiThi.apply(this, arguments);\n    }\n\n    return loadDeCuaKiThi;\n  }(),\n  changeDongMo: function () {\n    var _changeDongMo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res) {\n      var _req$body6, dedong, demo, _idkithi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.prev = 0;\n              _req$body6 = req.body, dedong = _req$body6.dedong, demo = _req$body6.demo, _idkithi = _req$body6._idkithi;\n              _context18.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context18.sent;\n              kithi.dethidongs = dedong;\n              kithi.dethimos = demo;\n              kithi.save();\n              _context18.next = 13;\n              break;\n\n            case 10:\n              _context18.prev = 10;\n              _context18.t0 = _context18[\"catch\"](0);\n              res.send(_context18.t0);\n\n            case 13:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[0, 10]]);\n    }));\n\n    function changeDongMo(_x30, _x31) {\n      return _changeDongMo.apply(this, arguments);\n    }\n\n    return changeDongMo;\n  }(),\n  DoiMatKhau: function () {\n    var _DoiMatKhau = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res) {\n      var _req$body7, _idkithi, mkmoi, kithi;\n\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.prev = 0;\n              _req$body7 = req.body, _idkithi = _req$body7._idkithi, mkmoi = _req$body7.mkmoi;\n              _context19.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context19.sent;\n              kithi.matkhau = mkmoi;\n              kithi.save();\n              res.end();\n              _context19.next = 13;\n              break;\n\n            case 10:\n              _context19.prev = 10;\n              _context19.t0 = _context19[\"catch\"](0);\n              res.send(_context19.t0);\n\n            case 13:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[0, 10]]);\n    }));\n\n    function DoiMatKhau(_x32, _x33) {\n      return _DoiMatKhau.apply(this, arguments);\n    }\n\n    return DoiMatKhau;\n  }(),\n  tinhtrang: function () {\n    var _tinhtrang = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n      var _req$body8, _idkithi, _tinhtrang2, kithi;\n\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _req$body8 = req.body, _idkithi = _req$body8._idkithi, _tinhtrang2 = _req$body8.tinhtrang;\n              _context20.next = 4;\n              return KiThi.findById(_idkithi);\n\n            case 4:\n              kithi = _context20.sent;\n              kithi.tinhtrang = _tinhtrang2;\n              kithi.save();\n              res.send(kithi);\n              _context20.next = 13;\n              break;\n\n            case 10:\n              _context20.prev = 10;\n              _context20.t0 = _context20[\"catch\"](0);\n              res.send(_context20.t0);\n\n            case 13:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[0, 10]]);\n    }));\n\n    function tinhtrang(_x34, _x35) {\n      return _tinhtrang.apply(this, arguments);\n    }\n\n    return tinhtrang;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "kithi.controller.js"
      ],
      "names": [
        "Cauhoi",
        "require",
        "DeThi",
        "KiThi",
        "Mon",
        "Nhom",
        "TaiKhoan",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "path",
        "model",
        "kithi",
        "send",
        "updateStatus",
        "_idkithi",
        "params",
        "findById",
        "trangthai",
        "save",
        "end",
        "kithiCuaSV",
        "_idsv",
        "taikhoan",
        "detail",
        "questionOfExam",
        "_iddethi",
        "id",
        "cauhoi",
        "select",
        "dethi",
        "push",
        "post",
        "body",
        "ma",
        "tieude",
        "matkhau",
        "ngaythi",
        "hocki",
        "thoigian",
        "mon",
        "user",
        "tinhtrang",
        "giaovien",
        "_id",
        "then",
        "respone",
        "p_kithi",
        "dethis",
        "dethimos",
        "p_dethi",
        "kithis",
        "err",
        "json",
        "error",
        "destroy",
        "length",
        "forEach",
        "item",
        "newKithis",
        "filter",
        "x",
        "nhoms",
        "item_n",
        "nhom",
        "newKithis_n",
        "themDeThi",
        "themNhom",
        "_idnhom",
        "kithi_result",
        "removeDethi",
        "dethirendermo",
        "dethirenderdong",
        "newDethis",
        "dethidongs",
        "removeNhom",
        "newNhoms",
        "loadDeCuaKiThi",
        "iddethis",
        "idx",
        "changeDongMo",
        "dedong",
        "demo",
        "DoiMatKhau",
        "mkmoi",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMO,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcR,KAAK,CAACS,IAAN,GAAaC,QAAb,CAAsB;AACzCC,gBAAAA,IAAI,EAAC,QADoC;AAEzCC,gBAAAA,KAAK,EAAC,OAFmC;AAGzCF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHgC,eAAtB,EAOjBF,QAPiB,CAOR;AACXC,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAPQ,EAcjBF,QAdiB,CAcR;AACXC,gBAAAA,IAAI,EAAC,YADM;AAEXC,gBAAAA,KAAK,EAAG,OAFG;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAdQ,EAqBjBF,QArBiB,CAqBR;AACXC,gBAAAA,IAAI,EAAC,UADM;AAEXC,gBAAAA,KAAK,EAAG,OAFG;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eArBQ,CADd;;AAAA;AACAC,cAAAA,KADA;AA8BN;AACAL,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;;AA/BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAkCfE,EAAAA,YAAY;AAAA,gFAAG,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAENQ,cAAAA,QAFM,GAEMT,GAAG,CAACU,MAFV,CAEND,QAFM;AAAA;AAAA,qBAGOhB,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAHP;;AAAA;AAGPH,cAAAA,KAHO;AAIZA,cAAAA,KAAK,CAACM,SAAN,GAAkB,CAACN,KAAK,CAACM,SAAzB;AACAN,cAAAA,KAAK,CAACO,IAAN;AACDZ,cAAAA,GAAG,CAACa,GAAJ;AANa;AAAA;;AAAA;AAAA;AAAA;AAQbb,cAAAA,GAAG,CAACM,IAAJ;;AARa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlCG;AA6CfQ,EAAAA,UAAU;AAAA,8EAAG,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJe,cAAAA,KAFI,GAEKhB,GAAG,CAACU,MAFT,CAEJM,KAFI;AAAA;AAAA,qBAGYpB,QAAQ,CAACe,QAAT,CAAkBK,KAAlB,EAAyBb,QAAzB,CAAkC;AACxDC,gBAAAA,IAAI,EAAC,OADmD;AAExDC,gBAAAA,KAAK,EAAC,MAFkD;AAGxDF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,QADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH+C,eAAlC,CAHZ;;AAAA;AAGLY,cAAAA,QAHK;AAWXhB,cAAAA,GAAG,CAACM,IAAJ,CAASU,QAAT;AAXW;AAAA;;AAAA;AAAA;AAAA;AAaXhB,cAAAA,GAAG,CAACM,IAAJ;;AAbW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7CK;AA6DfW,EAAAA,MAAM;AAAA,0EAAG,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAQ,cAAAA,QAFA,GAEYT,GAAG,CAACU,MAFhB,CAEAD,QAFA;AAAA;AAAA,qBAGahB,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAHb;;AAAA;AAGDH,cAAAA,KAHC;AAIPL,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AAJO;AAAA;;AAAA;AAAA;AAAA;AAMPL,cAAAA,GAAG,CAACM,IAAJ;;AANO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7DS;AAsEfY,EAAAA,cAAc;AAAA,kFAAG,kBAAOnB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVmB,cAAAA,QADU,GACCpB,GAAG,CAACU,MAAJ,CAAWW,EADZ;AAAA;AAGXC,cAAAA,MAHW,GAGF,EAHE;AAAA;AAAA,qBAIK9B,KAAK,CAACmB,QAAN,CAAeS,QAAf,EAAyBjB,QAAzB,CAAkC,SAAlC,EAA6CoB,MAA7C,CAAoD,SAApD,CAJL;;AAAA;AAITC,cAAAA,KAJS;AAMfF,cAAAA,MAAM,CAACG,IAAP,CAAYD,KAAZ,EANe,CAQf;;AACAvB,cAAAA,GAAG,CAACM,IAAJ,CAASe,MAAT;AATe;AAAA;;AAAA;AAAA;AAAA;AAWfrB,cAAAA,GAAG,CAACM,IAAJ;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtEC;AAoFf;AACAmB,EAAAA,IAAI;AAAA,wEAAE,kBAAO1B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BAC4ED,GAAG,CAAC2B,IADhF,EACSC,EADT,aACSA,EADT,EACaC,MADb,aACaA,MADb,EACqBC,OADrB,aACqBA,OADrB,EAC8BN,KAD9B,aAC8BA,KAD9B,EACqCO,OADrC,aACqCA,OADrC,EAC8CC,KAD9C,aAC8CA,KAD9C,EACqDC,QADrD,aACqDA,QADrD,EAC+DC,GAD/D,aAC+DA,GAD/D,EACmEC,IADnE,aACmEA,IADnE;AAAA;AAAA,qBAEe,IAAI1C,KAAJ,CAAU;AACpBmC,gBAAAA,EAAE,EAAEA,EADgB;AAEpBC,gBAAAA,MAAM,EAAEA,MAFY;AAGpBC,gBAAAA,OAAO,EAACA,OAHY;AAIpBC,gBAAAA,OAAO,EAAEA,OAJW;AAKpBC,gBAAAA,KAAK,EAAEA,KALa;AAMpBE,gBAAAA,GAAG,EAACA,GANgB;AAOpBD,gBAAAA,QAAQ,EAACA,QAPW;AAQpBrB,gBAAAA,SAAS,EAAE,CARS;AASpBwB,gBAAAA,SAAS,EAAE,CATS;AASP;AACbC,gBAAAA,QAAQ,EAACF,IAAI,CAACG;AAVM,eAAV,CAFf;;AAAA;AAEChC,cAAAA,KAFD;;AAcL,kBAAG;AACFA,gBAAAA,KAAK,CAACO,IAAN,GAAa0B,IAAb;AAAA,qFAAkB,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACK/C,KAAK,CAACkB,QAAN,CAAe6B,OAAO,CAACF,GAAvB,EAA4BnC,QAA5B,CAAqC;AACzDC,8BAAAA,IAAI,EAAC,QADoD;AAEzDC,8BAAAA,KAAK,EAAC,OAFmD;AAGzDF,8BAAAA,QAAQ,EAAC;AACRC,gCAAAA,IAAI,EAAC,KADG;AAERC,gCAAAA,KAAK,EAAC;AAFE;AAHgD,6BAArC,CADL;;AAAA;AACXoC,4BAAAA,OADW;AAShBA,4BAAAA,OAAO,CAACC,MAAR,CAAejB,IAAf,CAAoBD,KAApB;AACAiB,4BAAAA,OAAO,CAACE,QAAR,CAAiBlB,IAAjB,CAAsBD,KAAtB;AACAiB,4BAAAA,OAAO,CAAC5B,IAAR;AAXgB;AAAA,mCAYGrB,KAAK,CAACmB,QAAN,CAAea,KAAf,CAZH;;AAAA;AAYboB,4BAAAA,OAZa;AAajBA,4BAAAA,OAAO,CAACC,MAAR,CAAepB,IAAf,CAAoBe,OAAO,CAACF,GAA5B;AACAM,4BAAAA,OAAO,CAAC/B,IAAR;AAEAZ,4BAAAA,GAAG,CAACM,IAAJ,CAASkC,OAAT;;AAhBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;;AAAA;AAAA;AAAA;AAAA;AAkBA,eAnBD,CAmBE,OAAMK,GAAN,EAAU;AACX7C,gBAAAA,GAAG,CAAC8C,IAAJ,CAAS;AACRC,kBAAAA,KAAK,EAAGA;AADA,iBAAT;AAGA;;AArCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArFW;AA4Hf;AACAC,EAAAA,OAAO;AAAA,2EAAE,mBAAOjD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACDQ,cAAAA,QADC,GACWT,GAAG,CAACU,MADf,CACDD,QADC;AAAA;AAAA;AAAA,qBAGahB,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAHb;;AAAA;AAGDH,cAAAA,KAHC;;AAIN,kBAAGA,KAAK,CAACoC,MAAN,CAAaQ,MAAb,GAAsB,CAAzB,EAA2B;AAC1B5C,gBAAAA,KAAK,CAACoC,MAAN,CAAaS,OAAb;AAAA,sFAAsB,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACD5D,KAAK,CAACmB,QAAN,CAAeyC,IAAf,CADC;;AAAA;AACf5B,4BAAAA,KADe;AAEhB6B,4BAAAA,SAFgB,GAEJ7B,KAAK,CAACqB,MAAN,CAAaS,MAAb,CAAoB,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAAS9C,QAAZ;AAAA,6BAArB,CAFI;AAGpBe,4BAAAA,KAAK,CAACqB,MAAN,GAAeQ,SAAf;AACA7B,4BAAAA,KAAK,CAACX,IAAN;;AAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AACD,kBAAGP,KAAK,CAACkD,KAAN,CAAYN,MAAZ,GAAqB,CAAxB,EAA0B;AACzB5C,gBAAAA,KAAK,CAACkD,KAAN,CAAYL,OAAZ;AAAA,sFAAqB,kBAAMM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACD9D,IAAI,CAACgB,QAAL,CAAc8C,MAAd,CADC;;AAAA;AACdC,4BAAAA,IADc;AAEfC,4BAAAA,WAFe,GAEDD,IAAI,CAACb,MAAL,CAAYS,MAAZ,CAAmB,UAAAC,CAAC;AAAA,qCAAG,UAAGA,CAAH,KAAS9C,QAAZ;AAAA,6BAApB,CAFC;AAGnBiD,4BAAAA,IAAI,CAACb,MAAL,GAAcc,WAAd;AACAD,4BAAAA,IAAI,CAAC7C,IAAL;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB;;AAAA;AAAA;AAAA;AAAA;AAMA;;AACDP,cAAAA,KAAK,UAAL;AACDL,cAAAA,GAAG,CAACM,IAAJ,CAAS,IAAT;AArBO;AAAA;;AAAA;AAAA;AAAA;AAuBPN,cAAAA,GAAG,CAACM,IAAJ;;AAvBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7HQ;AAwJfqD,EAAAA,SAAS;AAAA,6EAAG,mBAAO5D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEmBD,GAAG,CAAC2B,IAFvB,EAEHlB,QAFG,cAEHA,QAFG,EAEOW,QAFP,cAEOA,QAFP;AAAA;AAAA,qBAGU5B,KAAK,CAACmB,QAAN,CAAeS,QAAf,CAHV;;AAAA;AAGJI,cAAAA,KAHI;AAITA,cAAAA,KAAK,CAACqB,MAAN,CAAapB,IAAb,CAAkBhB,QAAlB;AACAe,cAAAA,KAAK,CAACX,IAAN;AALS;AAAA,qBAMUpB,KAAK,CAACkB,QAAN,CAAeF,QAAf,EAAyBN,QAAzB,CAAkC;AACpDC,gBAAAA,IAAI,EAAC,QAD+C;AAEpDC,gBAAAA,KAAK,EAAC,OAF8C;AAGpDF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH2C,eAAlC,CANV;;AAAA;AAMJC,cAAAA,KANI;AAcTA,cAAAA,KAAK,CAACoC,MAAN,CAAajB,IAAb,CAAkBL,QAAlB;AACAd,cAAAA,KAAK,CAACqC,QAAN,CAAelB,IAAf,CAAoBL,QAApB;AACAd,cAAAA,KAAK,CAACO,IAAN;AACDZ,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AAjBU;AAAA;;AAAA;AAAA;AAAA;AAmBVL,cAAAA,GAAG,CAACM,IAAJ;;AAnBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxJM;AA8KfsD,EAAAA,QAAQ;AAAA,4EAAG,mBAAO7D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEmBD,GAAG,CAAC2B,IAFvB,EAEFlB,QAFE,cAEFA,QAFE,EAEQqD,OAFR,cAEQA,OAFR;AAAA;AAAA,qBAIUnE,IAAI,CAACgB,QAAL,CAAcmD,OAAd,CAJV;;AAAA;AAIHJ,cAAAA,IAJG;AAKRA,cAAAA,IAAI,CAACb,MAAL,CAAYpB,IAAZ,CAAiBhB,QAAjB;AACAiD,cAAAA,IAAI,CAAC7C,IAAL;AANQ;AAAA,qBAQWpB,KAAK,CAACkB,QAAN,CAAeF,QAAf,EAAyBN,QAAzB,CAAkC;AACpDC,gBAAAA,IAAI,EAAC,QAD+C;AAEpDC,gBAAAA,KAAK,EAAC,OAF8C;AAGpDF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,KADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAH2C,eAAlC,EAOhBF,QAPgB,CAOP;AACXC,gBAAAA,IAAI,EAAC,OADM;AAEXC,gBAAAA,KAAK,EAAC,MAFK;AAGXF,gBAAAA,QAAQ,EAAC;AACRC,kBAAAA,IAAI,EAAC,WADG;AAERC,kBAAAA,KAAK,EAAC;AAFE;AAHE,eAPO,CARX;;AAAA;AAQHC,cAAAA,KARG;AAwBRA,cAAAA,KAAK,CAACkD,KAAN,CAAY/B,IAAZ,CAAiBqC,OAAjB;AACAxD,cAAAA,KAAK,CAACO,IAAN,GAAa0B,IAAb,uEAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU9C,KAAK,CAACkB,QAAN,CAAeF,QAAf,EAAyBN,QAAzB,CAAkC;AAC7DC,0BAAAA,IAAI,EAAC,QADwD;AAE7DC,0BAAAA,KAAK,EAAC,OAFuD;AAG7DF,0BAAAA,QAAQ,EAAC;AACRC,4BAAAA,IAAI,EAAC,KADG;AAERC,4BAAAA,KAAK,EAAC;AAFE;AAHoD,yBAAlC,EAOxBF,QAPwB,CAOf;AACXC,0BAAAA,IAAI,EAAC,OADM;AAEXC,0BAAAA,KAAK,EAAC,MAFK;AAGXF,0BAAAA,QAAQ,EAAC;AACRC,4BAAAA,IAAI,EAAC,WADG;AAERC,4BAAAA,KAAK,EAAC;AAFE;AAHE,yBAPe,CADV;;AAAA;AACX0D,wBAAAA,YADW;AAgBjB9D,wBAAAA,GAAG,CAACM,IAAJ,CAASwD,YAAT;;AAhBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;AAzBQ;AAAA;;AAAA;AAAA;AAAA;AA4CT9D,cAAAA,GAAG,CAACM,IAAJ;;AA5CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9KO;AA6NfyD,EAAAA,WAAW;AAAA,+EAAG,mBAAOhE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEiDD,GAAG,CAAC2B,IAFrD,EAELP,QAFK,cAELA,QAFK,EAEKX,QAFL,cAEKA,QAFL,EAEewD,aAFf,cAEeA,aAFf,EAE8BC,eAF9B,cAE8BA,eAF9B;AAAA;AAAA,qBAIQ1E,KAAK,CAACmB,QAAN,CAAeS,QAAf,CAJR;;AAAA;AAINI,cAAAA,KAJM;AAKL6B,cAAAA,SALK,GAKO7B,KAAK,CAACqB,MAAN,CAAaS,MAAb,CAAoB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAAU9C,QAAd;AAAA,eAArB,CALP;AAMXe,cAAAA,KAAK,CAACqB,MAAN,GAAeQ,SAAf;AACA7B,cAAAA,KAAK,CAACX,IAAN;AAPW;AAAA,qBAQQpB,KAAK,CAACkB,QAAN,CAAeF,QAAf,CARR;;AAAA;AAQNH,cAAAA,KARM;AASL6D,cAAAA,SATK,GASO7D,KAAK,CAACoC,MAAN,CAAaY,MAAb,CAAoB,UAAAC,CAAC;AAAA,uBAAI,UAAGA,CAAH,KAAUnC,QAAd;AAAA,eAArB,CATP;AAUXd,cAAAA,KAAK,CAACoC,MAAN,GAAeyB,SAAf;AACA7D,cAAAA,KAAK,CAACqC,QAAN,GAAiBsB,aAAjB;AACA3D,cAAAA,KAAK,CAAC8D,UAAN,GAAmBF,eAAnB;AACA5D,cAAAA,KAAK,CAACO,IAAN;AAEDZ,cAAAA,GAAG,CAACa,GAAJ;AAfY;AAAA;;AAAA;AAAA;AAAA;AAiBZb,cAAAA,GAAG,CAACM,IAAJ;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7NI;AAiPf;AACA8D,EAAAA,UAAU;AAAA,8EAAG,mBAAOrE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEiBD,GAAG,CAAC2B,IAFrB,EAEJmC,OAFI,cAEJA,OAFI,EAEKrD,QAFL,cAEKA,QAFL;AAAA;AAAA,qBAGShB,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAHT;;AAAA;AAGLH,cAAAA,KAHK;AAIJgE,cAAAA,QAJI,GAIOhE,KAAK,CAACkD,KAAN,CAAYF,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAE,UAAGA,CAAH,KAAQO,OAAV;AAAA,eAApB,CAJP;AAKVxD,cAAAA,KAAK,CAACkD,KAAN,GAAcc,QAAd;AACAhE,cAAAA,KAAK,CAACO,IAAN;AANU;AAAA,qBAOQlB,IAAI,CAACgB,QAAL,CAAcmD,OAAd,CAPR;;AAAA;AAOLJ,cAAAA,IAPK;AAQJL,cAAAA,SARI,GAQOK,IAAI,CAACb,MAAL,CAAYS,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAE,UAAGA,CAAH,KAAQ9C,QAAV;AAAA,eAApB,CARP;AASViD,cAAAA,IAAI,CAACb,MAAL,GAAcQ,SAAd;AACAK,cAAAA,IAAI,CAAC7C,IAAL;AAEDZ,cAAAA,GAAG,CAACa,GAAJ;AAZW;AAAA;;AAAA;AAAA;AAAA;AAcXb,cAAAA,GAAG,CAACM,IAAJ;;AAdW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlPK;AAmQfgE,EAAAA,cAAc;AAAA,kFAAG,mBAAOvE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,kBAAG;AACKuE,gBAAAA,QADL,GACiBxE,GAAG,CAAC2B,IADrB,CACK6C,QADL;AAEE9B,gBAAAA,MAFF,GAEW,EAFX;;AAGF,oBAAI8B,QAAQ,CAACtB,MAAT,GAAiB,CAArB,EAAuB;AACtBsB,kBAAAA,QAAQ,CAACrB,OAAT;AAAA,wFAAiB,mBAAO/B,QAAP,EAAiBqD,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACIjF,KAAK,CAACmB,QAAN,CAAeS,QAAf,CADJ;;AAAA;AACVI,8BAAAA,KADU;AAEhBkB,8BAAAA,MAAM,CAACjB,IAAP,CAAYD,KAAZ;;AACA,kCAAIiD,GAAG,KAAKD,QAAQ,CAACtB,MAAT,GAAgB,CAA5B,EAA8B;AAC7BjD,gCAAAA,GAAG,CAACM,IAAJ,CAASmC,MAAT;AACA;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjB;;AAAA;AAAA;AAAA;AAAA;AAOA;AACD,eAZD,CAYE,OAAMI,GAAN,EAAU;AACX7C,gBAAAA,GAAG,CAACM,IAAJ,CAASuC,GAAT;AACA;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAnQC;AAoRf4B,EAAAA,YAAY;AAAA,gFAAG,mBAAO1E,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEoBD,GAAG,CAAC2B,IAFxB,EAENgD,MAFM,cAENA,MAFM,EAEEC,IAFF,cAEEA,IAFF,EAEQnE,QAFR,cAEQA,QAFR;AAAA;AAAA,qBAIOhB,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAJP;;AAAA;AAIPH,cAAAA,KAJO;AAKZA,cAAAA,KAAK,CAAC8D,UAAN,GAAmBO,MAAnB;AACArE,cAAAA,KAAK,CAACqC,QAAN,GAAiBiC,IAAjB;AACAtE,cAAAA,KAAK,CAACO,IAAN;AAPY;AAAA;;AAAA;AAAA;AAAA;AASbZ,cAAAA,GAAG,CAACM,IAAJ;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApRG;AAgSfsE,EAAAA,UAAU;AAAA,8EAAG,mBAAO7E,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEeD,GAAG,CAAC2B,IAFnB,EAEJlB,QAFI,cAEJA,QAFI,EAEMqE,KAFN,cAEMA,KAFN;AAAA;AAAA,qBAGSrF,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAHT;;AAAA;AAGLH,cAAAA,KAHK;AAIVA,cAAAA,KAAK,CAACwB,OAAN,GAAgBgD,KAAhB;AACAxE,cAAAA,KAAK,CAACO,IAAN;AACDZ,cAAAA,GAAG,CAACa,GAAJ;AANW;AAAA;;AAAA;AAAA;AAAA;AAQXb,cAAAA,GAAG,CAACM,IAAJ;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhSK;AA2Sf6B,EAAAA,SAAS;AAAA,6EAAG,mBAAOpC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEsBD,GAAG,CAAC2B,IAF1B,EAEFlB,QAFE,cAEFA,QAFE,EAEQ2B,WAFR,cAEQA,SAFR;AAAA;AAAA,qBAGU3C,KAAK,CAACkB,QAAN,CAAeF,QAAf,CAHV;;AAAA;AAGJH,cAAAA,KAHI;AAITA,cAAAA,KAAK,CAAC8B,SAAN,GAAkBA,WAAlB;AACA9B,cAAAA,KAAK,CAACO,IAAN;AACDZ,cAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AANU;AAAA;;AAAA;AAAA;AAAA;AAQVL,cAAAA,GAAG,CAACM,IAAJ;;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA3SM,CAAhB;AAwTAwE,MAAM,CAACC,OAAP,GAAiBlF,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let Cauhoi = require('../models/cauhoi.model')\r\nlet DeThi = require('../models/dethi.model')\r\nlet KiThi = require('../models/kithi.model')\r\nlet Mon = require('../models/mon.model')\r\nlet Nhom = require('../models/nhom.model')\r\nlet TaiKhoan = require('../models/taikhoan.model')\r\nvar shortid = require('shortid');\r\n\r\nconst methods = {\r\n\tindex: async (req, res)=>{\r\n\t\tconst kithi = await KiThi.find().populate({\r\n\t\t\tpath:'dethis',\r\n\t\t\tmodel:'DeThi',\r\n\t\t\tpopulate:{\r\n\t\t\t\tpath:'mon',\r\n\t\t\t\tmodel:'Mon'\r\n\t\t\t}\r\n\t\t}).populate({\r\n\t\t\tpath:'nhoms',\r\n\t\t\tmodel:'Nhom',\r\n\t\t\tpopulate:{\r\n\t\t\t\tpath:'sinhviens',\r\n\t\t\t\tmodel:'TaiKhoan'\r\n\t\t\t}\r\n\t\t}).populate({\r\n\t\t\tpath:'dethidongs',\r\n\t\t\tmodel : 'DeThi',\r\n\t\t\tpopulate:{\r\n\t\t\t\tpath:'mon',\r\n\t\t\t\tmodel:'Mon'\r\n\t\t\t}\r\n\t\t}).populate({\r\n\t\t\tpath:'dethimos',\r\n\t\t\tmodel : 'DeThi',\r\n\t\t\tpopulate:{\r\n\t\t\t\tpath:'mon',\r\n\t\t\t\tmodel:'Mon'\r\n\t\t\t}\r\n\t\t})\r\n\t\t//.sort({'_id':-1})\r\n\t\tres.send(kithi)\r\n\t},\r\n\tupdateStatus : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idkithi} = req.params\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tkithi.trangthai = !kithi.trangthai\r\n\t\t\t\tkithi.save()\r\n\t\t\tres.end()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tkithiCuaSV : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idsv} = req.params\r\n\t\t\tconst taikhoan = await TaiKhoan.findById(_idsv).populate({\r\n\t\t\t\tpath:'nhoms',\r\n\t\t\t\tmodel:'Nhom',\r\n\t\t\t\tpopulate:{\r\n\t\t\t\t\tpath:'kithis',\r\n\t\t\t\t\tmodel:'KiThi'\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t})\r\n\t\t\tres.send(taikhoan)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tdetail : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idkithi} = req.params\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\tres.send(kithi)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tquestionOfExam : async (req, res)=>{\r\n\t\tconst _iddethi = req.params.id\t\t\r\n\t\ttry{\r\n\t\t\tlet cauhoi = []\r\n\t\t\tconst dethi = await DeThi.findById(_iddethi).populate('cauhois').select('cauhois')\r\n\t\t\t\r\n\t\t\tcauhoi.push(dethi)\r\n\t\t\t\r\n\t\t\t//const cauhoi = await Cauhoi.find()\r\n\t\t\tres.send(cauhoi)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\t\t\r\n\t},\r\n\t// add ki thi\r\n\tpost: async (req, res)=>{\r\n        const { ma, tieude, matkhau ,dethi, ngaythi, hocki, thoigian, mon,user } = req.body        \r\n\t\tconst kithi = await new KiThi({\r\n            ma: ma,\r\n            tieude: tieude,            \r\n            matkhau:matkhau,\r\n            ngaythi: ngaythi,\r\n            hocki: hocki,\r\n            mon:mon,\r\n            thoigian:thoigian,\r\n            trangthai: 0,\r\n            tinhtrang: 2,// chua thi\r\n            giaovien:user._id\r\n\t\t})\r\n\t\ttry{\t\t\t\r\n\t\t\tkithi.save().then(async (respone)=>{\r\n\t\t\t\tconst p_kithi = await KiThi.findById(respone._id).populate({\r\n\t\t\t\t\t\tpath:'dethis',\r\n\t\t\t\t\t\tmodel:'DeThi',\r\n\t\t\t\t\t\tpopulate:{\r\n\t\t\t\t\t\t\tpath:'mon',\r\n\t\t\t\t\t\t\tmodel:'Mon'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tp_kithi.dethis.push(dethi)\t\t\r\n\t\t\t\t\tp_kithi.dethimos.push(dethi)\t\t\t\t\t\r\n\t\t\t\t\tp_kithi.save()\r\n\t\t\t\tlet p_dethi = await DeThi.findById(dethi)\r\n\t\t\t\tp_dethi.kithis.push(respone._id)\r\n\t\t\t\tp_dethi.save()\r\n\r\n\t\t\t\tres.send(p_kithi)\r\n\t\t\t})\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.json({\r\n\t\t\t\terror : error \r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// delete cauhoi (id)\r\n\tdestroy: async (req, res)=>{\r\n\t\tconst {_idkithi} = req.params\t\t\r\n\t\ttry{\t\t\t\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tif(kithi.dethis.length > 0){\r\n\t\t\t\t\tkithi.dethis.forEach( async item=>{\r\n\t\t\t\t\t\tconst dethi = await DeThi.findById(item)\r\n\t\t\t\t\t\t\tlet newKithis = dethi.kithis.filter(x=> `${x}`!= _idkithi)\r\n\t\t\t\t\t\t\tdethi.kithis = newKithis\r\n\t\t\t\t\t\t\tdethi.save()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif(kithi.nhoms.length > 0){\r\n\t\t\t\t\tkithi.nhoms.forEach( async item_n=>{\r\n\t\t\t\t\t\tconst nhom = await Nhom.findById(item_n)\r\n\t\t\t\t\t\t\tlet newKithis_n = nhom.kithis.filter(x=> `${x}`!= _idkithi)\r\n\t\t\t\t\t\t\tnhom.kithis = newKithis_n\r\n\t\t\t\t\t\t\tnhom.save()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tkithi.delete()\r\n\t\t\tres.send('ok')\r\n\t\t}catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t\t//res.send(user)\r\n\t},\r\n\tthemDeThi : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idkithi, _iddethi} = req.body\r\n\t\t\tconst dethi = await DeThi.findById(_iddethi)\r\n\t\t\t\tdethi.kithis.push(_idkithi)\r\n\t\t\t\tdethi.save()\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi).populate({\r\n\t\t\t\t\tpath:'dethis',\r\n\t\t\t\t\tmodel:'DeThi',\r\n\t\t\t\t\tpopulate:{\r\n\t\t\t\t\t\tpath:'mon',\r\n\t\t\t\t\t\tmodel:'Mon'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tkithi.dethis.push(_iddethi)\r\n\t\t\t\tkithi.dethimos.push(_iddethi)\r\n\t\t\t\tkithi.save()\r\n\t\t\tres.send(kithi)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tthemNhom : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idkithi, _idnhom} = req.body\r\n\t\t\t\r\n\t\t\tconst nhom = await Nhom.findById(_idnhom)\r\n\t\t\t\tnhom.kithis.push(_idkithi)\r\n\t\t\t\tnhom.save()\r\n\t\t\t\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi).populate({\r\n\t\t\t\t\tpath:'dethis',\r\n\t\t\t\t\tmodel:'DeThi',\r\n\t\t\t\t\tpopulate:{\r\n\t\t\t\t\t\tpath:'mon',\r\n\t\t\t\t\t\tmodel:'Mon'\r\n\t\t\t\t\t}\r\n\t\t\t\t}).populate({\r\n\t\t\t\t\tpath:'nhoms',\r\n\t\t\t\t\tmodel:'Nhom',\r\n\t\t\t\t\tpopulate:{\r\n\t\t\t\t\t\tpath:'sinhviens',\r\n\t\t\t\t\t\tmodel:'TaiKhoan'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tkithi.nhoms.push(_idnhom)\r\n\t\t\t\tkithi.save().then(async ()=>{\r\n\t\t\t\t\tconst kithi_result = await KiThi.findById(_idkithi).populate({\r\n\t\t\t\t\tpath:'dethis',\r\n\t\t\t\t\tmodel:'DeThi',\r\n\t\t\t\t\tpopulate:{\r\n\t\t\t\t\t\tpath:'mon',\r\n\t\t\t\t\t\tmodel:'Mon'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).populate({\r\n\t\t\t\t\t\tpath:'nhoms',\r\n\t\t\t\t\t\tmodel:'Nhom',\r\n\t\t\t\t\t\tpopulate:{\r\n\t\t\t\t\t\t\tpath:'sinhviens',\r\n\t\t\t\t\t\t\tmodel:'TaiKhoan'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\t\r\n\t\t\t\t\tres.send(kithi_result)\r\n\t\t\t\t})\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tremoveDethi : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_iddethi, _idkithi, dethirendermo, dethirenderdong} = req.body\t\t\t\r\n\t\t\t\r\n\t\t\tconst dethi = await DeThi.findById(_iddethi)\r\n\t\t\t\tconst newKithis = dethi.kithis.filter(x => `${x}` != _idkithi)\r\n\t\t\t\tdethi.kithis = newKithis\r\n\t\t\t\tdethi.save()\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tconst newDethis = kithi.dethis.filter(x => `${x}` != _iddethi)\r\n\t\t\t\tkithi.dethis = newDethis\r\n\t\t\t\tkithi.dethimos = dethirendermo\r\n\t\t\t\tkithi.dethidongs = dethirenderdong\r\n\t\t\t\tkithi.save()\t\t\t\r\n\t\t\t\r\n\t\t\tres.end()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\t//remove nhom\r\n\tremoveNhom : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idnhom, _idkithi} = req.body\t\t\t\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tconst newNhoms = kithi.nhoms.filter(x=>`${x}`!=_idnhom)\r\n\t\t\t\tkithi.nhoms = newNhoms\r\n\t\t\t\tkithi.save()\r\n\t\t\tconst nhom = await Nhom.findById(_idnhom)\r\n\t\t\t\tconst newKithis= nhom.kithis.filter(x=>`${x}`!=_idkithi)\r\n\t\t\t\tnhom.kithis = newKithis\r\n\t\t\t\tnhom.save()\t\t\t\r\n\t\t\t\r\n\t\t\tres.end()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tloadDeCuaKiThi : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {iddethis} = req.body\r\n\t\t\tlet dethis = []\r\n\t\t\tif (iddethis.length >0){\r\n\t\t\t\tiddethis.forEach(async (_iddethi, idx) => {\r\n\t\t\t\t\tconst dethi = await DeThi.findById(_iddethi)\r\n\t\t\t\t\tdethis.push(dethi)\r\n\t\t\t\t\tif (idx === iddethis.length-1){\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.send(dethis)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tchangeDongMo : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {dedong, demo, _idkithi} = req.body\t\r\n\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tkithi.dethidongs = dedong\r\n\t\t\t\tkithi.dethimos = demo\r\n\t\t\t\tkithi.save()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tDoiMatKhau : async (req, res) => {\r\n\t\ttry{\r\n\t\t\tconst {_idkithi, mkmoi} = req.body\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tkithi.matkhau = mkmoi\r\n\t\t\t\tkithi.save()\r\n\t\t\tres.end()\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\ttinhtrang : async (req, res) =>{\r\n\t\ttry{\r\n\t\t\tconst { _idkithi, tinhtrang } = req.body\r\n\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\tkithi.tinhtrang = tinhtrang\r\n\t\t\t\tkithi.save()\r\n\t\t\tres.send(kithi)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903188
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\nhom.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\nhom.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\nhom.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\nhom.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "nhom.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  ten: String,\n  namhoc: String,\n  ghichu: String,\n  trangthai: Number,\n  sinhviens: [{\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }],\n  giaoviens: [{\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  }],\n  thongbaos: [{\n    type: Schema.Types.ObjectId,\n    ref: \"ThongBao\"\n  }],\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }]\n});\nvar Nhom = mongoose.model('Nhom', schema);\nmodule.exports = Nhom;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ob20ubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwic2NoZW1hIiwibWEiLCJTdHJpbmciLCJ0ZW4iLCJuYW1ob2MiLCJnaGljaHUiLCJ0cmFuZ3RoYWkiLCJOdW1iZXIiLCJzaW5odmllbnMiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImdpYW92aWVucyIsInRob25nYmFvcyIsImtpdGhpcyIsIk5ob20iLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0UsTUFBdEI7QUFFQSxJQUFJQyxNQUFNLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBRXBCRSxFQUFBQSxFQUFFLEVBQUVDLE1BRmdCO0FBR3BCQyxFQUFBQSxHQUFHLEVBQUNELE1BSGdCO0FBSXBCRSxFQUFBQSxNQUFNLEVBQUVGLE1BSlk7QUFLcEJHLEVBQUFBLE1BQU0sRUFBRUgsTUFMWTtBQU1wQkksRUFBQUEsU0FBUyxFQUFFQyxNQU5TO0FBUXRCQyxFQUFBQSxTQUFTLEVBQUMsQ0FBQztBQUNYQyxJQUFBQSxJQUFJLEVBQUNWLE1BQU0sQ0FBQ1csS0FBUCxDQUFhQyxRQURQO0FBRVhDLElBQUFBLEdBQUcsRUFBQztBQUZPLEdBQUQsQ0FSWTtBQVl2QkMsRUFBQUEsU0FBUyxFQUFDLENBQUM7QUFDVkosSUFBQUEsSUFBSSxFQUFDVixNQUFNLENBQUNXLEtBQVAsQ0FBYUMsUUFEUjtBQUVWQyxJQUFBQSxHQUFHLEVBQUM7QUFGTSxHQUFELENBWmE7QUFnQnZCRSxFQUFBQSxTQUFTLEVBQUMsQ0FBQztBQUNWTCxJQUFBQSxJQUFJLEVBQUNWLE1BQU0sQ0FBQ1csS0FBUCxDQUFhQyxRQURSO0FBRVZDLElBQUFBLEdBQUcsRUFBQztBQUZNLEdBQUQsQ0FoQmE7QUFvQnZCRyxFQUFBQSxNQUFNLEVBQUMsQ0FBQztBQUNQTixJQUFBQSxJQUFJLEVBQUNWLE1BQU0sQ0FBQ1csS0FBUCxDQUFhQyxRQURYO0FBRVBDLElBQUFBLEdBQUcsRUFBQztBQUZHLEdBQUQ7QUFwQmdCLENBQVgsQ0FBYjtBQTJCQSxJQUFJSSxJQUFJLEdBQUduQixRQUFRLENBQUNvQixLQUFULENBQWUsTUFBZixFQUF1QmpCLE1BQXZCLENBQVg7QUFFQWtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsSUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcclxuXHJcbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcclxuXHJcbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuXHJcbiAgICBtYTogU3RyaW5nLFxyXG4gICAgdGVuOlN0cmluZywgICAgICBcclxuICAgIG5hbWhvYzogU3RyaW5nLFxyXG4gICAgZ2hpY2h1OiBTdHJpbmcsXHJcbiAgICB0cmFuZ3RoYWk6IE51bWJlcixcclxuIFx0XHJcbiBcdHNpbmh2aWVuczpbe1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJUYWlLaG9hblwiXHJcblx0fV0sXHJcblx0Z2lhb3ZpZW5zOlt7XHJcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIlRhaUtob2FuXCJcclxuXHR9XSxcclxuXHR0aG9uZ2Jhb3M6W3tcclxuXHRcdHR5cGU6U2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG5cdFx0cmVmOlwiVGhvbmdCYW9cIlxyXG5cdH1dLFxyXG5cdGtpdGhpczpbe1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJLaVRoaVwiXHJcblx0fV0sXHJcbiAgICBcclxufSlcclxuXHJcbnZhciBOaG9tID0gbW9uZ29vc2UubW9kZWwoJ05ob20nLCBzY2hlbWEpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE5ob20iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nhom.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "ten",
        "namhoc",
        "ghichu",
        "trangthai",
        "Number",
        "sinhviens",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "giaoviens",
        "thongbaos",
        "kithis",
        "Nhom",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,GAAG,EAACD,MAHgB;AAIpBE,EAAAA,MAAM,EAAEF,MAJY;AAKpBG,EAAAA,MAAM,EAAEH,MALY;AAMpBI,EAAAA,SAAS,EAAEC,MANS;AAQtBC,EAAAA,SAAS,EAAC,CAAC;AACXC,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADP;AAEXC,IAAAA,GAAG,EAAC;AAFO,GAAD,CARY;AAYvBC,EAAAA,SAAS,EAAC,CAAC;AACVJ,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADR;AAEVC,IAAAA,GAAG,EAAC;AAFM,GAAD,CAZa;AAgBvBE,EAAAA,SAAS,EAAC,CAAC;AACVL,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADR;AAEVC,IAAAA,GAAG,EAAC;AAFM,GAAD,CAhBa;AAoBvBG,EAAAA,MAAM,EAAC,CAAC;AACPN,IAAAA,IAAI,EAACV,MAAM,CAACW,KAAP,CAAaC,QADX;AAEPC,IAAAA,GAAG,EAAC;AAFG,GAAD;AApBgB,CAAX,CAAb;AA2BA,IAAII,IAAI,GAAGnB,QAAQ,CAACoB,KAAT,CAAe,MAAf,EAAuBjB,MAAvB,CAAX;AAEAkB,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ma: String,\r\n    ten:String,      \r\n    namhoc: String,\r\n    ghichu: String,\r\n    trangthai: Number,\r\n \t\r\n \tsinhviens:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"TaiKhoan\"\r\n\t}],\r\n\tgiaoviens:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"TaiKhoan\"\r\n\t}],\r\n\tthongbaos:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"ThongBao\"\r\n\t}],\r\n\tkithis:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"KiThi\"\r\n\t}],\r\n    \r\n})\r\n\r\nvar Nhom = mongoose.model('Nhom', schema)\r\n\r\nmodule.exports = Nhom"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903198
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\taikhoan.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\taikhoan.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\taikhoan.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\taikhoan.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "taikhoan.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar bcrypt = require('bcrypt');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  maso: String,\n  matkhau: String,\n  ten: String,\n  ngaysinh: String,\n  gioitinh: String,\n  sdt: String,\n  email: String,\n  diachi: String,\n  vaitro: Number,\n  // 0- admin/ 1 giaovien/ 2 sinh vien\n  matkhautam: String,\n  hinhanh: String,\n  nhoms: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Nhom\"\n  }],\n  kithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"KiThi\"\n  }],\n  baithis: [{\n    type: Schema.Types.ObjectId,\n    ref: \"BaiThi\"\n  }]\n});\nvar TaiKhoan = mongoose.model('TaiKhoan', schema);\nmodule.exports = TaiKhoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImJjcnlwdCIsIlNjaGVtYSIsInNjaGVtYSIsIm1hc28iLCJTdHJpbmciLCJtYXRraGF1IiwidGVuIiwibmdheXNpbmgiLCJnaW9pdGluaCIsInNkdCIsImVtYWlsIiwiZGlhY2hpIiwidmFpdHJvIiwiTnVtYmVyIiwibWF0a2hhdXRhbSIsImhpbmhhbmgiLCJuaG9tcyIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwia2l0aGlzIiwiYmFpdGhpcyIsIlRhaUtob2FuIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFFQSxJQUFJRSxNQUFNLEdBQUdILFFBQVEsQ0FBQ0csTUFBdEI7QUFFQSxJQUFJQyxNQUFNLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBRXBCRSxFQUFBQSxJQUFJLEVBQUVDLE1BRmM7QUFHcEJDLEVBQUFBLE9BQU8sRUFBRUQsTUFIVztBQUlwQkUsRUFBQUEsR0FBRyxFQUFFRixNQUplO0FBS3BCRyxFQUFBQSxRQUFRLEVBQUVILE1BTFU7QUFNcEJJLEVBQUFBLFFBQVEsRUFBQ0osTUFOVztBQU9wQkssRUFBQUEsR0FBRyxFQUFFTCxNQVBlO0FBUXBCTSxFQUFBQSxLQUFLLEVBQUVOLE1BUmE7QUFTcEJPLEVBQUFBLE1BQU0sRUFBRVAsTUFUWTtBQVVwQlEsRUFBQUEsTUFBTSxFQUFFQyxNQVZZO0FBVUQ7QUFDckJDLEVBQUFBLFVBQVUsRUFBQ1YsTUFYVztBQVlwQlcsRUFBQUEsT0FBTyxFQUFFWCxNQVpXO0FBY3BCWSxFQUFBQSxLQUFLLEVBQUMsQ0FBQztBQUNUQyxJQUFBQSxJQUFJLEVBQUNoQixNQUFNLENBQUNpQixLQUFQLENBQWFDLFFBRFQ7QUFFVEMsSUFBQUEsR0FBRyxFQUFDO0FBRkssR0FBRCxDQWRjO0FBa0JwQkMsRUFBQUEsTUFBTSxFQUFDLENBQUM7QUFDSkosSUFBQUEsSUFBSSxFQUFDaEIsTUFBTSxDQUFDaUIsS0FBUCxDQUFhQyxRQURkO0FBRUpDLElBQUFBLEdBQUcsRUFBQztBQUZBLEdBQUQsQ0FsQmE7QUFzQnBCRSxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNMTCxJQUFBQSxJQUFJLEVBQUNoQixNQUFNLENBQUNpQixLQUFQLENBQWFDLFFBRGI7QUFFTEMsSUFBQUEsR0FBRyxFQUFDO0FBRkMsR0FBRDtBQXRCWSxDQUFYLENBQWI7QUE2QkEsSUFBSUcsUUFBUSxHQUFHekIsUUFBUSxDQUFDMEIsS0FBVCxDQUFlLFVBQWYsRUFBMkJ0QixNQUEzQixDQUFmO0FBRUF1QixNQUFNLENBQUNDLE9BQVAsR0FBaUJILFFBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxzZXJ2ZXJfZFxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXHJcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xyXG5cclxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxyXG5cclxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gICAgXHJcbiAgICBtYXNvOiBTdHJpbmcsXHJcbiAgICBtYXRraGF1OiBTdHJpbmcsXHJcbiAgICB0ZW46IFN0cmluZyxcclxuICAgIG5nYXlzaW5oOiBTdHJpbmcsXHJcbiAgICBnaW9pdGluaDpTdHJpbmcsXHJcbiAgICBzZHQ6IFN0cmluZywgICAgXHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgZGlhY2hpOiBTdHJpbmcsXHJcbiAgICB2YWl0cm86IE51bWJlciwgICAgLy8gMC0gYWRtaW4vIDEgZ2lhb3ZpZW4vIDIgc2luaCB2aWVuXHJcbiBcdG1hdGtoYXV0YW06U3RyaW5nLFxyXG4gICAgaGluaGFuaDogU3RyaW5nLFxyXG4gXHRcclxuICAgIG5ob21zOlt7XHJcblx0XHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIk5ob21cIlxyXG5cdH1dLFxyXG4gICAga2l0aGlzOlt7XHJcbiAgICAgICAgdHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgcmVmOlwiS2lUaGlcIlxyXG4gICAgfV0sXHJcbiAgICBiYWl0aGlzOlt7XHJcbiAgICAgICAgdHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgcmVmOlwiQmFpVGhpXCJcclxuICAgIH1dLFxyXG5cclxufSlcclxuXHJcbnZhciBUYWlLaG9hbiA9IG1vbmdvb3NlLm1vZGVsKCdUYWlLaG9hbicsIHNjaGVtYSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVGFpS2hvYW4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "Schema",
        "schema",
        "maso",
        "String",
        "matkhau",
        "ten",
        "ngaysinh",
        "gioitinh",
        "sdt",
        "email",
        "diachi",
        "vaitro",
        "Number",
        "matkhautam",
        "hinhanh",
        "nhoms",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "kithis",
        "baithis",
        "TaiKhoan",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAIE,MAAM,GAAGH,QAAQ,CAACG,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,IAAI,EAAEC,MAFc;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,GAAG,EAAEF,MAJe;AAKpBG,EAAAA,QAAQ,EAAEH,MALU;AAMpBI,EAAAA,QAAQ,EAACJ,MANW;AAOpBK,EAAAA,GAAG,EAAEL,MAPe;AAQpBM,EAAAA,KAAK,EAAEN,MARa;AASpBO,EAAAA,MAAM,EAAEP,MATY;AAUpBQ,EAAAA,MAAM,EAAEC,MAVY;AAUD;AACrBC,EAAAA,UAAU,EAACV,MAXW;AAYpBW,EAAAA,OAAO,EAAEX,MAZW;AAcpBY,EAAAA,KAAK,EAAC,CAAC;AACTC,IAAAA,IAAI,EAAChB,MAAM,CAACiB,KAAP,CAAaC,QADT;AAETC,IAAAA,GAAG,EAAC;AAFK,GAAD,CAdc;AAkBpBC,EAAAA,MAAM,EAAC,CAAC;AACJJ,IAAAA,IAAI,EAAChB,MAAM,CAACiB,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD,CAlBa;AAsBpBE,EAAAA,OAAO,EAAC,CAAC;AACLL,IAAAA,IAAI,EAAChB,MAAM,CAACiB,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD;AAtBY,CAAX,CAAb;AA6BA,IAAIG,QAAQ,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,UAAf,EAA2BtB,MAA3B,CAAf;AAEAuB,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\nconst bcrypt = require('bcrypt');\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n    \r\n    maso: String,\r\n    matkhau: String,\r\n    ten: String,\r\n    ngaysinh: String,\r\n    gioitinh:String,\r\n    sdt: String,    \r\n    email: String,\r\n    diachi: String,\r\n    vaitro: Number,    // 0- admin/ 1 giaovien/ 2 sinh vien\r\n \tmatkhautam:String,\r\n    hinhanh: String,\r\n \t\r\n    nhoms:[{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"Nhom\"\r\n\t}],\r\n    kithis:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"KiThi\"\r\n    }],\r\n    baithis:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"BaiThi\"\r\n    }],\r\n\r\n})\r\n\r\nvar TaiKhoan = mongoose.model('TaiKhoan', schema)\r\n\r\nmodule.exports = TaiKhoan"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903199
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\nhom.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\nhom.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\nhom.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\nhom.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "nhom.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _nhom = _interopRequireDefault(require(\"../controllers/nhom.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', _nhom[\"default\"].index);\nrouter.get('/giao-vien/:_idtaikhoan', _nhom[\"default\"].giaovien);\nrouter.get('/sinh-vien/:_idtaikhoan', _nhom[\"default\"].sinhvien); // add nhom\n\nrouter.post('/add', _nhom[\"default\"].post);\nrouter.get('/detail/:_idnhom', _nhom[\"default\"].detail); // delete loai lop\n//router.delete('/:id', controllers.destroy)\n\nrouter.get('/remove/:_idnhom', _nhom[\"default\"].remove);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ob20ucm91dGUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJjb250cm9sbGVycyIsImluZGV4IiwiZ2lhb3ZpZW4iLCJzaW5odmllbiIsInBvc3QiLCJkZXRhaWwiLCJyZW1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0FBSEEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBSUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGlCQUFZQyxLQUE1QjtBQUVBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyx5QkFBWCxFQUFzQ0MsaUJBQVlFLFFBQWxEO0FBQ0FMLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLHlCQUFYLEVBQXNDQyxpQkFBWUcsUUFBbEQsRSxDQUNBOztBQUNBTixNQUFNLENBQUNPLElBQVAsQ0FBWSxNQUFaLEVBQW9CSixpQkFBWUksSUFBaEM7QUFDQVAsTUFBTSxDQUFDRSxHQUFQLENBQVcsa0JBQVgsRUFBK0JDLGlCQUFZSyxNQUEzQyxFLENBQ0E7QUFDQTs7QUFDQVIsTUFBTSxDQUFDRSxHQUFQLENBQVcsa0JBQVgsRUFBK0JDLGlCQUFZTSxNQUEzQztBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxzZXJ2ZXJfZFxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcclxuXHJcbmltcG9ydCBjb250cm9sbGVycyBmcm9tICcuLi9jb250cm9sbGVycy9uaG9tLmNvbnRyb2xsZXInXHJcblxyXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXHJcblxyXG5yb3V0ZXIuZ2V0KCcvZ2lhby12aWVuLzpfaWR0YWlraG9hbicsIGNvbnRyb2xsZXJzLmdpYW92aWVuKVxyXG5yb3V0ZXIuZ2V0KCcvc2luaC12aWVuLzpfaWR0YWlraG9hbicsIGNvbnRyb2xsZXJzLnNpbmh2aWVuKVxyXG4vLyBhZGQgbmhvbVxyXG5yb3V0ZXIucG9zdCgnL2FkZCcsIGNvbnRyb2xsZXJzLnBvc3QpXHJcbnJvdXRlci5nZXQoJy9kZXRhaWwvOl9pZG5ob20nLCBjb250cm9sbGVycy5kZXRhaWwpXHJcbi8vIGRlbGV0ZSBsb2FpIGxvcFxyXG4vL3JvdXRlci5kZWxldGUoJy86aWQnLCBjb250cm9sbGVycy5kZXN0cm95KVxyXG5yb3V0ZXIuZ2V0KCcvcmVtb3ZlLzpfaWRuaG9tJywgY29udHJvbGxlcnMucmVtb3ZlKVxyXG5cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "nhom.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "controllers",
        "index",
        "giaovien",
        "sinhvien",
        "post",
        "detail",
        "remove",
        "module",
        "exports"
      ],
      "mappings": ";;AAGA;;;;AAHA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBC,iBAAYC,KAA5B;AAEAJ,MAAM,CAACE,GAAP,CAAW,yBAAX,EAAsCC,iBAAYE,QAAlD;AACAL,MAAM,CAACE,GAAP,CAAW,yBAAX,EAAsCC,iBAAYG,QAAlD,E,CACA;;AACAN,MAAM,CAACO,IAAP,CAAY,MAAZ,EAAoBJ,iBAAYI,IAAhC;AACAP,MAAM,CAACE,GAAP,CAAW,kBAAX,EAA+BC,iBAAYK,MAA3C,E,CACA;AACA;;AACAR,MAAM,CAACE,GAAP,CAAW,kBAAX,EAA+BC,iBAAYM,MAA3C;AAIAC,MAAM,CAACC,OAAP,GAAiBX,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nimport controllers from '../controllers/nhom.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\nrouter.get('/giao-vien/:_idtaikhoan', controllers.giaovien)\r\nrouter.get('/sinh-vien/:_idtaikhoan', controllers.sinhvien)\r\n// add nhom\r\nrouter.post('/add', controllers.post)\r\nrouter.get('/detail/:_idnhom', controllers.detail)\r\n// delete loai lop\r\n//router.delete('/:id', controllers.destroy)\r\nrouter.get('/remove/:_idnhom', controllers.remove)\r\n\r\n\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904081
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\nhom.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\nhom.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\nhom.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\nhom.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "nhom.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Nhom = require('../models/nhom.model');\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar ThongBao = require('../models/thongbao.model');\n\nvar shortid = require('shortid');\n\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var nhoms;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Nhom.find().populate('giaoviens').populate('thongbaos');\n\n            case 2:\n              nhoms = _context.sent;\n              res.send(nhoms);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  detail: function () {\n    var _detail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _idnhom, nhom;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context2.next = 4;\n              return Nhom.findById(_idnhom).populate({\n                path: 'sinhviens',\n                model: 'TaiKhoan'\n              });\n\n            case 4:\n              nhom = _context2.sent;\n              res.send(nhom);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.send(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function detail(_x3, _x4) {\n      return _detail.apply(this, arguments);\n    }\n\n    return detail;\n  }(),\n  giaovien: function () {\n    var _giaovien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _idtaikhoan, nhoms;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _idtaikhoan = req.params._idtaikhoan; //res.send(_idtaikhoan)\n\n              _context3.next = 4;\n              return Nhom.find({\n                giaoviens: _idtaikhoan\n              }).populate('giaoviens').populate('thongbaos');\n\n            case 4:\n              nhoms = _context3.sent;\n              res.send(nhoms);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    function giaovien(_x5, _x6) {\n      return _giaovien.apply(this, arguments);\n    }\n\n    return giaovien;\n  }(),\n  sinhvien: function () {\n    var _sinhvien = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var _idtaikhoan, nhoms;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _idtaikhoan = req.params._idtaikhoan; //res.send(_idtaikhoan)\n\n              _context4.next = 4;\n              return Nhom.find({\n                sinhviens: _idtaikhoan\n              }).populate('giaoviens').populate('thongbaos');\n\n            case 4:\n              nhoms = _context4.sent;\n              res.send(nhoms);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              res.send(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    function sinhvien(_x7, _x8) {\n      return _sinhvien.apply(this, arguments);\n    }\n\n    return sinhvien;\n  }(),\n  // nhom -> nhieu tai khoan\n  post: function () {\n    var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body, ma, ten, namhoc, giaovien, nhom;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _req$body = req.body, ma = _req$body.ma, ten = _req$body.ten, namhoc = _req$body.namhoc, giaovien = _req$body.giaovien;\n              _context6.next = 4;\n              return new Nhom({\n                ma: ma,\n                ten: ten,\n                giaoviens: giaovien,\n                namhoc: namhoc,\n                trangthai: 0\n              });\n\n            case 4:\n              nhom = _context6.sent;\n              nhom.save().then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(respone) {\n                  var taikhoan, nhoms;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return TaiKhoan.findById(giaovien);\n\n                        case 2:\n                          taikhoan = _context5.sent;\n                          taikhoan.nhoms.push(respone._id);\n                          taikhoan.save(); //res.send(respone)\n\n                          _context5.next = 7;\n                          return Nhom.find().populate('giaoviens');\n\n                        case 7:\n                          nhoms = _context5.sent;\n                          res.send(nhoms);\n\n                        case 9:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x11) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](0);\n              res.send(_context6.t0);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 8]]);\n    }));\n\n    function post(_x9, _x10) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n      var _idnhom, nhom, thongbao;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context10.next = 4;\n              return Nhom.findById(_idnhom);\n\n            case 4:\n              nhom = _context10.sent;\n              _context10.next = 7;\n              return ThongBao.deleteMany({\n                nhom: _idnhom\n              });\n\n            case 7:\n              thongbao = _context10.sent;\n              //}\n              // cap nhat sinh vien va giao vien\n              nhom.kithis.forEach( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_idkithi) {\n                  var kithi, newNhoms;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return KiThi.findById(_idkithi);\n\n                        case 2:\n                          kithi = _context7.sent;\n                          newNhoms = kithi.nhoms.filter(function (x) {\n                            return \"\".concat(x) != _idnhom;\n                          });\n                          kithi.nhom = newNhoms;\n                          kithi.save();\n\n                        case 6:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x14) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              nhom.sinhviens.forEach( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_idtaikhoan) {\n                  var taikhoan_sv, newNhoms_sv;\n                  return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _context8.next = 2;\n                          return TaiKhoan.findById(_idtaikhoan);\n\n                        case 2:\n                          taikhoan_sv = _context8.sent;\n                          newNhoms_sv = taikhoan_sv.nhoms.filter(function (x) {\n                            return \"\".concat(x) != _idnhom;\n                          });\n                          taikhoan_sv.nhoms = newNhoms_sv;\n                          taikhoan_sv.save();\n\n                        case 6:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function (_x15) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              nhom.giaoviens.forEach( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_idtaikhoan) {\n                  var taikhoan_gv, newNhoms_gv;\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          _context9.next = 2;\n                          return TaiKhoan.findById(_idtaikhoan);\n\n                        case 2:\n                          taikhoan_gv = _context9.sent;\n                          newNhoms_gv = taikhoan_gv.nhoms.filter(function (x) {\n                            return \"\".concat(x) != _idnhom;\n                          });\n                          taikhoan_gv.nhoms = newNhoms_gv;\n                          taikhoan_gv.save();\n\n                        case 6:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x16) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n              nhom[\"delete\"]();\n              res.end();\n              _context10.next = 18;\n              break;\n\n            case 15:\n              _context10.prev = 15;\n              _context10.t0 = _context10[\"catch\"](0);\n              res.send(_context10.t0);\n\n            case 18:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 15]]);\n    }));\n\n    function remove(_x12, _x13) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "nhom.controller.js"
      ],
      "names": [
        "Nhom",
        "require",
        "TaiKhoan",
        "ThongBao",
        "shortid",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "populate",
        "nhoms",
        "send",
        "detail",
        "_idnhom",
        "params",
        "findById",
        "path",
        "model",
        "nhom",
        "giaovien",
        "_idtaikhoan",
        "giaoviens",
        "sinhvien",
        "sinhviens",
        "post",
        "body",
        "ma",
        "ten",
        "namhoc",
        "trangthai",
        "save",
        "then",
        "respone",
        "taikhoan",
        "push",
        "_id",
        "remove",
        "deleteMany",
        "thongbao",
        "kithis",
        "forEach",
        "_idkithi",
        "KiThi",
        "kithi",
        "newNhoms",
        "filter",
        "x",
        "taikhoan_sv",
        "newNhoms_sv",
        "taikhoan_gv",
        "newNhoms_gv",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAtB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMI,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcR,IAAI,CAACS,IAAL,GAAYC,QAAZ,CAAqB,WAArB,EAAkCA,QAAlC,CAA2C,WAA3C,CADd;;AAAA;AACAC,cAAAA,KADA;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKfE,EAAAA,MAAM;AAAA,0EAAG,kBAAON,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAM,cAAAA,OAFA,GAEWP,GAAG,CAACQ,MAFf,CAEAD,OAFA;AAAA;AAAA,qBAGYd,IAAI,CAACgB,QAAL,CAAcF,OAAd,EAAuBJ,QAAvB,CAAgC;AAClDO,gBAAAA,IAAI,EAAC,WAD6C;AAElDC,gBAAAA,KAAK,EAAC;AAF4C,eAAhC,CAHZ;;AAAA;AAGDC,cAAAA,IAHC;AAOPX,cAAAA,GAAG,CAACI,IAAJ,CAASO,IAAT;AAPO;AAAA;;AAAA;AAAA;AAAA;AASPX,cAAAA,GAAG,CAACI,IAAJ;;AATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALS;AAiBfQ,EAAAA,QAAQ;AAAA,4EAAG,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFa,cAAAA,WAFE,GAEad,GAAG,CAACQ,MAFjB,CAEFM,WAFE,EAGT;;AAHS;AAAA,qBAIWrB,IAAI,CAACS,IAAL,CAAU;AAACa,gBAAAA,SAAS,EAACD;AAAX,eAAV,EAAmCX,QAAnC,CAA4C,WAA5C,EAAyDA,QAAzD,CAAkE,WAAlE,CAJX;;AAAA;AAIHC,cAAAA,KAJG;AAKTH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTH,cAAAA,GAAG,CAACI,IAAJ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAjBO;AA2BfW,EAAAA,QAAQ;AAAA,4EAAG,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFa,cAAAA,WAFE,GAEad,GAAG,CAACQ,MAFjB,CAEFM,WAFE,EAGT;;AAHS;AAAA,qBAIWrB,IAAI,CAACS,IAAL,CAAU;AAACe,gBAAAA,SAAS,EAACH;AAAX,eAAV,EAAmCX,QAAnC,CAA4C,WAA5C,EAAyDA,QAAzD,CAAkE,WAAlE,CAJX;;AAAA;AAIHC,cAAAA,KAJG;AAKTH,cAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTH,cAAAA,GAAG,CAACI,IAAJ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3BO;AAqCf;AACAa,EAAAA,IAAI;AAAA,wEAAG,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAE+BD,GAAG,CAACmB,IAFnC,EAEEC,EAFF,aAEEA,EAFF,EAEMC,GAFN,aAEMA,GAFN,EAEWC,MAFX,aAEWA,MAFX,EAEmBT,QAFnB,aAEmBA,QAFnB;AAAA;AAAA,qBAGc,IAAIpB,IAAJ,CAAS;AAC3B2B,gBAAAA,EAAE,EAAEA,EADuB;AAE3BC,gBAAAA,GAAG,EAAEA,GAFsB;AAG3BN,gBAAAA,SAAS,EAACF,QAHiB;AAI3BS,gBAAAA,MAAM,EAAEA,MAJmB;AAK3BC,gBAAAA,SAAS,EAAE;AALgB,eAAT,CAHd;;AAAA;AAGCX,cAAAA,IAHD;AAULA,cAAAA,IAAI,CAACY,IAAL,GAAYC,IAAZ;AAAA,mFAAiB,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACO/B,QAAQ,CAACc,QAAT,CAAkBI,QAAlB,CADP;;AAAA;AACVc,0BAAAA,QADU;AAEfA,0BAAAA,QAAQ,CAACvB,KAAT,CAAewB,IAAf,CAAoBF,OAAO,CAACG,GAA5B;AACAF,0BAAAA,QAAQ,CAACH,IAAT,GAHe,CAIhB;;AAJgB;AAAA,iCAKI/B,IAAI,CAACS,IAAL,GAAYC,QAAZ,CAAqB,WAArB,CALJ;;AAAA;AAKVC,0BAAAA,KALU;AAMhBH,0BAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;AAAA;AAVK;AAAA;;AAAA;AAAA;AAAA;AAmBLH,cAAAA,GAAG,CAACI,IAAJ;;AAnBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtCW;AA4DfyB,EAAAA,MAAM;AAAA,0EAAG,mBAAO9B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMCM,cAAAA,OAND,GAMaP,GAAG,CAACQ,MANjB,CAMCD,OAND;AAAA;AAAA,qBAOYd,IAAI,CAACgB,QAAL,CAAcF,OAAd,CAPZ;;AAAA;AAODK,cAAAA,IAPC;AAAA;AAAA,qBASgBhB,QAAQ,CAACmC,UAAT,CAAoB;AAACnB,gBAAAA,IAAI,EAACL;AAAN,eAApB,CAThB;;AAAA;AASDyB,cAAAA,QATC;AAUP;AACA;AACApB,cAAAA,IAAI,CAACqB,MAAL,CAAYC,OAAZ;AAAA,oFAAoB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACCC,KAAK,CAAC3B,QAAN,CAAe0B,QAAf,CADD;;AAAA;AACbE,0BAAAA,KADa;AAEZC,0BAAAA,QAFY,GAEDD,KAAK,CAACjC,KAAN,CAAYmC,MAAZ,CAAmB,UAAAC,CAAC;AAAA,mCAAG,UAAGA,CAAH,KAAUjC,OAAb;AAAA,2BAApB,CAFC;AAGlB8B,0BAAAA,KAAK,CAACzB,IAAN,GAAa0B,QAAb;AACAD,0BAAAA,KAAK,CAACb,IAAN;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;;AAAA;AAAA;AAAA;AAAA;AAMAZ,cAAAA,IAAI,CAACK,SAAL,CAAeiB,OAAf;AAAA,oFAAwB,kBAAMpB,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGnB,QAAQ,CAACc,QAAT,CAAkBK,WAAlB,CADH;;AAAA;AACjB2B,0BAAAA,WADiB;AAEhBC,0BAAAA,WAFgB,GAEFD,WAAW,CAACrC,KAAZ,CAAkBmC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mCAAI,UAAGA,CAAH,KAASjC,OAAb;AAAA,2BAA1B,CAFE;AAGtBkC,0BAAAA,WAAW,CAACrC,KAAZ,GAAoBsC,WAApB;AACAD,0BAAAA,WAAW,CAACjB,IAAZ;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB;;AAAA;AAAA;AAAA;AAAA;AAMAZ,cAAAA,IAAI,CAACG,SAAL,CAAemB,OAAf;AAAA,oFAAwB,kBAAMpB,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGnB,QAAQ,CAACc,QAAT,CAAkBK,WAAlB,CADH;;AAAA;AACjB6B,0BAAAA,WADiB;AAEhBC,0BAAAA,WAFgB,GAEFD,WAAW,CAACvC,KAAZ,CAAkBmC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mCAAI,UAAGA,CAAH,KAAUjC,OAAd;AAAA,2BAA1B,CAFE;AAGtBoC,0BAAAA,WAAW,CAACvC,KAAZ,GAAoBwC,WAApB;AACAD,0BAAAA,WAAW,CAACnB,IAAZ;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB;;AAAA;AAAA;AAAA;AAAA;AAOAZ,cAAAA,IAAI,UAAJ;AACAX,cAAAA,GAAG,CAAC4C,GAAJ;AAhCO;AAAA;;AAAA;AAAA;AAAA;AAkCP5C,cAAAA,GAAG,CAACI,IAAJ;;AAlCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5DS,CAAhB;AAmGAyC,MAAM,CAACC,OAAP,GAAiBjD,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let Nhom = require('../models/nhom.model')\r\nlet TaiKhoan = require('../models/taikhoan.model')\r\nlet ThongBao = require('../models/thongbao.model')\r\n\r\nvar shortid = require('shortid');\r\n\r\nconst methods = {\r\n\tindex: async(req, res)=>{\r\n\t\tconst nhoms = await Nhom.find().populate('giaoviens').populate('thongbaos')\r\n\t\tres.send(nhoms)\r\n\t},\r\n\tdetail : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_idnhom} = req.params\r\n\t\t\tconst nhom = await Nhom.findById(_idnhom).populate({\r\n\t\t\t\tpath:'sinhviens',\r\n\t\t\t\tmodel:'TaiKhoan'\r\n\t\t\t})\r\n\t\t\tres.send(nhom)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tgiaovien : async (req, res) => {\r\n\t\ttry{\r\n\t\t\tconst {_idtaikhoan} = req.params\r\n\t\t\t//res.send(_idtaikhoan)\r\n\t\t\tconst nhoms = await Nhom.find({giaoviens:_idtaikhoan}).populate('giaoviens').populate('thongbaos')\r\n\t\t\tres.send(nhoms)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tsinhvien : async (req, res) => {\r\n\t\ttry{\r\n\t\t\tconst {_idtaikhoan} = req.params\r\n\t\t\t//res.send(_idtaikhoan)\r\n\t\t\tconst nhoms = await Nhom.find({sinhviens:_idtaikhoan}).populate('giaoviens').populate('thongbaos')\r\n\t\t\tres.send(nhoms)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\t// nhom -> nhieu tai khoan\r\n\tpost : async (req, res) => {\r\n\t\ttry{\t\t\t\r\n\t\t\tconst {ma, ten, namhoc, giaovien} = req.body\r\n\t\t\tconst nhom = await new Nhom({\r\n\t\t\t\tma: ma,\r\n\t\t\t\tten: ten,\r\n\t\t\t\tgiaoviens:giaovien,\r\n\t\t\t\tnamhoc: namhoc,\r\n\t\t\t\ttrangthai: 0,\r\n\t\t\t})\r\n\t\t\tnhom.save().then(async respone=>{\r\n\t\t\t\tconst taikhoan = await TaiKhoan.findById(giaovien)\r\n\t\t\t\t\ttaikhoan.nhoms.push(respone._id)\r\n\t\t\t\t\ttaikhoan.save()\r\n\t\t\t\t//res.send(respone)\r\n\t\t\t\tconst nhoms = await Nhom.find().populate('giaoviens')\r\n\t\t\t\tres.send(nhoms)\r\n\t\t\t})\t\t\t\r\n\t\t} catch (err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tremove : async (req, res) => {\r\n\t\t// nhom -> giaoviens\r\n\t\t// nhom -> sinhviens\r\n\t\t// nhom -> thongbaos\r\n\t\t// nhom -> kithis\r\n\t\ttry {\t\t\t\r\n\t\t\tconst { _idnhom } = req.params\r\n\t\t\tconst nhom = await Nhom.findById(_idnhom)\t\t\t\r\n\t\t\t// if (nhom.thongbaos.length>0){\r\n\t\t\tconst thongbao = await ThongBao.deleteMany({nhom:_idnhom})\r\n\t\t\t//}\r\n\t\t\t// cap nhat sinh vien va giao vien\r\n\t\t\tnhom.kithis.forEach(async _idkithi=>{\r\n\t\t\t\tconst kithi = await KiThi.findById(_idkithi)\r\n\t\t\t\t\tconst newNhoms = kithi.nhoms.filter(x=> `${x}` != _idnhom)\r\n\t\t\t\t\tkithi.nhom = newNhoms\r\n\t\t\t\t\tkithi.save()\r\n\t\t\t})\r\n\t\t\tnhom.sinhviens.forEach( async _idtaikhoan=>{\r\n\t\t\t\tconst taikhoan_sv = await TaiKhoan.findById(_idtaikhoan)\r\n\t\t\t\t\tconst newNhoms_sv = taikhoan_sv.nhoms.filter(x => `${x}`!= _idnhom)\r\n\t\t\t\t\ttaikhoan_sv.nhoms = newNhoms_sv\r\n\t\t\t\t\ttaikhoan_sv.save()\r\n\t\t\t})\r\n\t\t\tnhom.giaoviens.forEach( async _idtaikhoan=>{\r\n\t\t\t\tconst taikhoan_gv = await TaiKhoan.findById(_idtaikhoan)\r\n\t\t\t\t\tconst newNhoms_gv = taikhoan_gv.nhoms.filter(x => `${x}` != _idnhom)\r\n\t\t\t\t\ttaikhoan_gv.nhoms = newNhoms_gv\r\n\t\t\t\t\ttaikhoan_gv.save()\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tnhom.delete()\r\n\t\t\tres.end()\t\t\t\t\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903193
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\thongbao.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\thongbao.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\thongbao.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\thongbao.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "thongbao.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  noidung: String,\n  ngay: String,\n  gio: String,\n  nhom: {\n    type: Schema.Types.ObjectId,\n    ref: \"Nhom\"\n  }\n});\nvar ThongBao = mongoose.model('ThongBao', schema);\nmodule.exports = ThongBao;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRob25nYmFvLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsInNjaGVtYSIsIm1hIiwiU3RyaW5nIiwibm9pZHVuZyIsIm5nYXkiLCJnaW8iLCJuaG9tIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJUaG9uZ0JhbyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF0QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFFcEJFLEVBQUFBLEVBQUUsRUFBRUMsTUFGZ0I7QUFHcEJDLEVBQUFBLE9BQU8sRUFBRUQsTUFIVztBQUlwQkUsRUFBQUEsSUFBSSxFQUFDRixNQUplO0FBS3BCRyxFQUFBQSxHQUFHLEVBQUNILE1BTGdCO0FBT3ZCSSxFQUFBQSxJQUFJLEVBQUM7QUFDSkMsSUFBQUEsSUFBSSxFQUFDUixNQUFNLENBQUNTLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQTtBQVBrQixDQUFYLENBQWI7QUFjQSxJQUFJQyxRQUFRLEdBQUdkLFFBQVEsQ0FBQ2UsS0FBVCxDQUFlLFVBQWYsRUFBMkJaLE1BQTNCLENBQWY7QUFFQWEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxRQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxyXG5cclxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxyXG5cclxudmFyIHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG5cclxuICAgIG1hOiBTdHJpbmcsICAgICAgICBcclxuICAgIG5vaWR1bmc6IFN0cmluZywgICAgXHJcbiAgICBuZ2F5OlN0cmluZyxcclxuICAgIGdpbzpTdHJpbmcsXHJcbiBcdCBcdFxyXG5cdG5ob206e1xyXG5cdFx0dHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6XCJOaG9tXCJcclxuXHR9LFxyXG4gICAgXHRcclxufSlcclxuXHJcbnZhciBUaG9uZ0JhbyA9IG1vbmdvb3NlLm1vZGVsKCdUaG9uZ0JhbycsIHNjaGVtYSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVGhvbmdCYW8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "thongbao.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "noidung",
        "ngay",
        "gio",
        "nhom",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "ThongBao",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,OAAO,EAAED,MAHW;AAIpBE,EAAAA,IAAI,EAACF,MAJe;AAKpBG,EAAAA,GAAG,EAACH,MALgB;AAOvBI,EAAAA,IAAI,EAAC;AACJC,IAAAA,IAAI,EAACR,MAAM,CAACS,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA;AAPkB,CAAX,CAAb;AAcA,IAAIC,QAAQ,GAAGd,QAAQ,CAACe,KAAT,CAAe,UAAf,EAA2BZ,MAA3B,CAAf;AAEAa,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ma: String,        \r\n    noidung: String,    \r\n    ngay:String,\r\n    gio:String,\r\n \t \t\r\n\tnhom:{\r\n\t\ttype:Schema.Types.ObjectId,\r\n\t\tref:\"Nhom\"\r\n\t},\r\n    \t\r\n})\r\n\r\nvar ThongBao = mongoose.model('ThongBao', schema)\r\n\r\nmodule.exports = ThongBao"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903199
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\routes\\\\taikhoan.route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\routes\\taikhoan.route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\routes\\taikhoan.route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\routes\\taikhoan.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
        "sourceFileName": "taikhoan.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _taikhoan = _interopRequireDefault(require(\"../controllers/taikhoan.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar multer = require('multer');\n\nvar upload = multer({\n  dest: 'assets/image'\n});\nrouter.get('/', _taikhoan[\"default\"].index); // add nhom\n\nrouter.post('/register', _taikhoan[\"default\"].register);\nrouter.post('/login', _taikhoan[\"default\"].login);\nrouter.post('/changepassword', _taikhoan[\"default\"].doiMatKhau); // tao danh sach sinh vien import \n\nrouter.post('/create', _taikhoan[\"default\"].createStudent); // cap nhat tai khoan\n\nrouter.post('/cap-nhat', _taikhoan[\"default\"].capnhat); // lich su thi cua  tai khoan\n\nrouter.get('/lich-su-thi/:_idtaikhoan', _taikhoan[\"default\"].lichsuthi); //image\n\nrouter.post('/upload-image', upload.single('image'), _taikhoan[\"default\"].uploadImage);\nrouter.post('/update-user', _taikhoan[\"default\"].updateUser); // tai khoan cua nhom\n\nrouter.get('/nhom/:_idnhom', _taikhoan[\"default\"].taiKhoanCuaNhom); // delete loai lop\n//router.delete('/:id', controllers.destroy)\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuLnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibXVsdGVyIiwidXBsb2FkIiwiZGVzdCIsImdldCIsImNvbnRyb2xsZXJzIiwiaW5kZXgiLCJwb3N0IiwicmVnaXN0ZXIiLCJsb2dpbiIsImRvaU1hdEtoYXUiLCJjcmVhdGVTdHVkZW50IiwiY2FwbmhhdCIsImxpY2hzdXRoaSIsInNpbmdsZSIsInVwbG9hZEltYWdlIiwidXBkYXRlVXNlciIsInRhaUtob2FuQ3VhTmhvbSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBTUE7Ozs7QUFOQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsSUFBSUMsTUFBTSxHQUFJSCxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFDQSxJQUFJSSxNQUFNLEdBQUdELE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUFELENBQW5CO0FBSUFKLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLHFCQUFZQyxLQUE1QixFLENBRUE7O0FBQ0FQLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFdBQVosRUFBeUJGLHFCQUFZRyxRQUFyQztBQUNBVCxNQUFNLENBQUNRLElBQVAsQ0FBWSxRQUFaLEVBQXNCRixxQkFBWUksS0FBbEM7QUFFQVYsTUFBTSxDQUFDUSxJQUFQLENBQVksaUJBQVosRUFBK0JGLHFCQUFZSyxVQUEzQyxFLENBRUE7O0FBQ0FYLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFNBQVosRUFBdUJGLHFCQUFZTSxhQUFuQyxFLENBRUE7O0FBQ0FaLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFdBQVosRUFBeUJGLHFCQUFZTyxPQUFyQyxFLENBQ0E7O0FBQ0FiLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXLDJCQUFYLEVBQXdDQyxxQkFBWVEsU0FBcEQsRSxDQUVBOztBQUNBZCxNQUFNLENBQUNRLElBQVAsQ0FBWSxlQUFaLEVBQTZCTCxNQUFNLENBQUNZLE1BQVAsQ0FBYyxPQUFkLENBQTdCLEVBQXFEVCxxQkFBWVUsV0FBakU7QUFDQWhCLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLGNBQVosRUFBNEJGLHFCQUFZVyxVQUF4QyxFLENBRUE7O0FBQ0FqQixNQUFNLENBQUNLLEdBQVAsQ0FBVyxnQkFBWCxFQUE2QkMscUJBQVlZLGVBQXpDLEUsQ0FDQTtBQUNBOztBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcc2VydmVyX2RcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXHJcblxyXG52YXIgbXVsdGVyICA9IHJlcXVpcmUoJ211bHRlcicpXHJcbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBkZXN0OiAnYXNzZXRzL2ltYWdlJyB9KVxyXG5cclxuaW1wb3J0IGNvbnRyb2xsZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL3RhaWtob2FuLmNvbnRyb2xsZXInXHJcblxyXG5yb3V0ZXIuZ2V0KCcvJywgY29udHJvbGxlcnMuaW5kZXgpXHJcblxyXG4vLyBhZGQgbmhvbVxyXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJywgY29udHJvbGxlcnMucmVnaXN0ZXIpXHJcbnJvdXRlci5wb3N0KCcvbG9naW4nLCBjb250cm9sbGVycy5sb2dpbilcclxuXHJcbnJvdXRlci5wb3N0KCcvY2hhbmdlcGFzc3dvcmQnLCBjb250cm9sbGVycy5kb2lNYXRLaGF1KVxyXG5cclxuLy8gdGFvIGRhbmggc2FjaCBzaW5oIHZpZW4gaW1wb3J0IFxyXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIGNvbnRyb2xsZXJzLmNyZWF0ZVN0dWRlbnQpXHJcblxyXG4vLyBjYXAgbmhhdCB0YWkga2hvYW5cclxucm91dGVyLnBvc3QoJy9jYXAtbmhhdCcsIGNvbnRyb2xsZXJzLmNhcG5oYXQpXHJcbi8vIGxpY2ggc3UgdGhpIGN1YSAgdGFpIGtob2FuXHJcbnJvdXRlci5nZXQoJy9saWNoLXN1LXRoaS86X2lkdGFpa2hvYW4nLCBjb250cm9sbGVycy5saWNoc3V0aGkpXHJcblxyXG4vL2ltYWdlXHJcbnJvdXRlci5wb3N0KCcvdXBsb2FkLWltYWdlJywgdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKSwgY29udHJvbGxlcnMudXBsb2FkSW1hZ2UpXHJcbnJvdXRlci5wb3N0KCcvdXBkYXRlLXVzZXInLCBjb250cm9sbGVycy51cGRhdGVVc2VyKVxyXG5cclxuLy8gdGFpIGtob2FuIGN1YSBuaG9tXHJcbnJvdXRlci5nZXQoJy9uaG9tLzpfaWRuaG9tJywgY29udHJvbGxlcnMudGFpS2hvYW5DdWFOaG9tKVxyXG4vLyBkZWxldGUgbG9haSBsb3BcclxuLy9yb3V0ZXIuZGVsZXRlKCcvOmlkJywgY29udHJvbGxlcnMuZGVzdHJveSlcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "multer",
        "upload",
        "dest",
        "get",
        "controllers",
        "index",
        "post",
        "register",
        "login",
        "doiMatKhau",
        "createStudent",
        "capnhat",
        "lichsuthi",
        "single",
        "uploadImage",
        "updateUser",
        "taiKhoanCuaNhom",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;;;AANA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAIC,MAAM,GAAIH,OAAO,CAAC,QAAD,CAArB;;AACA,IAAII,MAAM,GAAGD,MAAM,CAAC;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAnB;AAIAJ,MAAM,CAACK,GAAP,CAAW,GAAX,EAAgBC,qBAAYC,KAA5B,E,CAEA;;AACAP,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBF,qBAAYG,QAArC;AACAT,MAAM,CAACQ,IAAP,CAAY,QAAZ,EAAsBF,qBAAYI,KAAlC;AAEAV,MAAM,CAACQ,IAAP,CAAY,iBAAZ,EAA+BF,qBAAYK,UAA3C,E,CAEA;;AACAX,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuBF,qBAAYM,aAAnC,E,CAEA;;AACAZ,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBF,qBAAYO,OAArC,E,CACA;;AACAb,MAAM,CAACK,GAAP,CAAW,2BAAX,EAAwCC,qBAAYQ,SAApD,E,CAEA;;AACAd,MAAM,CAACQ,IAAP,CAAY,eAAZ,EAA6BL,MAAM,CAACY,MAAP,CAAc,OAAd,CAA7B,EAAqDT,qBAAYU,WAAjE;AACAhB,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BF,qBAAYW,UAAxC,E,CAEA;;AACAjB,MAAM,CAACK,GAAP,CAAW,gBAAX,EAA6BC,qBAAYY,eAAzC,E,CACA;AACA;;AAIAC,MAAM,CAACC,OAAP,GAAiBpB,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\routes\\",
      "sourcesContent": [
        "const express = require('express')\r\nconst router = express.Router()\r\n\r\nvar multer  = require('multer')\r\nvar upload = multer({ dest: 'assets/image' })\r\n\r\nimport controllers from '../controllers/taikhoan.controller'\r\n\r\nrouter.get('/', controllers.index)\r\n\r\n// add nhom\r\nrouter.post('/register', controllers.register)\r\nrouter.post('/login', controllers.login)\r\n\r\nrouter.post('/changepassword', controllers.doiMatKhau)\r\n\r\n// tao danh sach sinh vien import \r\nrouter.post('/create', controllers.createStudent)\r\n\r\n// cap nhat tai khoan\r\nrouter.post('/cap-nhat', controllers.capnhat)\r\n// lich su thi cua  tai khoan\r\nrouter.get('/lich-su-thi/:_idtaikhoan', controllers.lichsuthi)\r\n\r\n//image\r\nrouter.post('/upload-image', upload.single('image'), controllers.uploadImage)\r\nrouter.post('/update-user', controllers.updateUser)\r\n\r\n// tai khoan cua nhom\r\nrouter.get('/nhom/:_idnhom', controllers.taiKhoanCuaNhom)\r\n// delete loai lop\r\n//router.delete('/:id', controllers.destroy)\r\n\r\n\r\n\r\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044904081
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\controllers\\\\taikhoan.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\controllers\\taikhoan.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\controllers\\taikhoan.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\controllers\\taikhoan.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
        "sourceFileName": "taikhoan.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar TaiKhoan = require('../models/taikhoan.model');\n\nvar Nhom = require('../models/nhom.model');\n\nvar BaiThi = require('../models/baithi.model');\n\nvar bcrypt = require('bcrypt');\n\nvar fs = require('fs');\n\nvar shortid = require('shortid');\n\nvar saltRounds = 1;\nvar myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nvar someOtherPlaintextPassword = 'not_bacon';\nvar methods = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var taikhoan;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return TaiKhoan.find();\n\n            case 2:\n              taikhoan = _context.sent;\n              res.send(taikhoan);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  register: function () {\n    var _register = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, username, password, hash_pass;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                _req$body = req.body, username = _req$body.username, password = _req$body.password; // bcrypt.genSalt(saltRounds, function(err, salt) {\n                //     bcrypt.hash(myPlaintextPassword, salt, function(err, hash) {\n                //         console.log(hash)\n                //     });\n                // });\t\t\t\n\n                hash_pass = '';\n                bcrypt.hash(password, saltRounds).then(function (hash) {\n                  //console.log(hash)\t\t\t\t\n                  var taikhoan = new TaiKhoan({\n                    maso: username,\n                    matkhau: hash,\n                    vaitro: 1\n                  });\n                  taikhoan.save();\n                });\n                res.send('ok'); // const taikhoan = await new TaiKhoan({\n                // })\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function register(_x3, _x4) {\n      return _register.apply(this, arguments);\n    }\n\n    return register;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$body2, username, password, user, check;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n              _context3.next = 4;\n              return TaiKhoan.find({\n                maso: username\n              });\n\n            case 4:\n              user = _context3.sent;\n\n              if (!(user != '')) {\n                _context3.next = 10;\n                break;\n              }\n\n              check = false;\n              bcrypt.compare(password, user[0].matkhau).then(function (result) {\n                check = result;\n\n                if (check === true) {\n                  return res.send({\n                    checked: true,\n                    user: user\n                  });\n                } else {\n                  return res.send({\n                    checked: false,\n                    mess: 'Wrong Password'\n                  });\n                }\n              });\n              _context3.next = 11;\n              break;\n\n            case 10:\n              return _context3.abrupt(\"return\", res.send({\n                checked: false,\n                mess: 'Not exit'\n              }));\n\n            case 11:\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              res.send(_context3.t0);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 13]]);\n    }));\n\n    function login(_x5, _x6) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  createStudent: function () {\n    var _createStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n      var _req$body3, students, nhomActived;\n\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              try {\n                _req$body3 = req.body, students = _req$body3.students, nhomActived = _req$body3.nhomActived;\n\n                if (students) {\n                  students.forEach( /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(student, idx) {\n                      var matkhautam, sv;\n                      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              matkhautam = shortid.generate();\n                              _context8.next = 3;\n                              return TaiKhoan.find({\n                                maso: student.MSSV\n                              });\n\n                            case 3:\n                              sv = _context8.sent;\n\n                              if (sv.length != 0) {\n                                sv.forEach( /*#__PURE__*/function () {\n                                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(item) {\n                                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                                      while (1) {\n                                        switch (_context5.prev = _context5.next) {\n                                          case 0:\n                                            item.nhoms.push(nhomActived._id);\n                                            item.save().then( /*#__PURE__*/function () {\n                                              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(response) {\n                                                var nhom;\n                                                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                                                  while (1) {\n                                                    switch (_context4.prev = _context4.next) {\n                                                      case 0:\n                                                        _context4.next = 2;\n                                                        return Nhom.findById(nhomActived._id);\n\n                                                      case 2:\n                                                        nhom = _context4.sent;\n                                                        nhom.sinhviens.push(item._id);\n                                                        nhom.save();\n\n                                                      case 5:\n                                                      case \"end\":\n                                                        return _context4.stop();\n                                                    }\n                                                  }\n                                                }, _callee4);\n                                              }));\n\n                                              return function (_x12) {\n                                                return _ref3.apply(this, arguments);\n                                              };\n                                            }());\n\n                                          case 2:\n                                          case \"end\":\n                                            return _context5.stop();\n                                        }\n                                      }\n                                    }, _callee5);\n                                  }));\n\n                                  return function (_x11) {\n                                    return _ref2.apply(this, arguments);\n                                  };\n                                }()); //sv[0].nhoms.push(nhomActived._id)\t\t\t\t\t\t\n                              } else {\n                                bcrypt.hash(matkhautam, saltRounds).then( /*#__PURE__*/function () {\n                                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(hash) {\n                                    var taikhoan;\n                                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                      while (1) {\n                                        switch (_context7.prev = _context7.next) {\n                                          case 0:\n                                            _context7.next = 2;\n                                            return new TaiKhoan({\n                                              maso: student.MSSV,\n                                              ten: student['Họ tên'],\n                                              gioitinh: student['Giới tính'],\n                                              email: student.Email,\n                                              matkhau: hash,\n                                              nhoms: nhomActived._id,\n                                              matkhautam: matkhautam,\n                                              vaitro: 2\n                                            });\n\n                                          case 2:\n                                            taikhoan = _context7.sent;\n                                            taikhoan.save().then( /*#__PURE__*/function () {\n                                              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(respone) {\n                                                var nhom;\n                                                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                                  while (1) {\n                                                    switch (_context6.prev = _context6.next) {\n                                                      case 0:\n                                                        _context6.next = 2;\n                                                        return Nhom.findById(nhomActived._id);\n\n                                                      case 2:\n                                                        nhom = _context6.sent;\n                                                        nhom.sinhviens.push(respone);\n                                                        nhom.save();\n\n                                                      case 5:\n                                                      case \"end\":\n                                                        return _context6.stop();\n                                                    }\n                                                  }\n                                                }, _callee6);\n                                              }));\n\n                                              return function (_x14) {\n                                                return _ref5.apply(this, arguments);\n                                              };\n                                            }());\n\n                                          case 4:\n                                          case \"end\":\n                                            return _context7.stop();\n                                        }\n                                      }\n                                    }, _callee7);\n                                  }));\n\n                                  return function (_x13) {\n                                    return _ref4.apply(this, arguments);\n                                  };\n                                }());\n                              }\n\n                              if (idx === students.length - 1) {\n                                //const students_result = await Nhom.findById(nhomActived._id).populate('sinhviens')\n                                res.send('ok');\n                              }\n\n                            case 6:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, _callee8);\n                    }));\n\n                    return function (_x9, _x10) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n                }\n              } catch (err) {\n                res.send(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function createStudent(_x7, _x8) {\n      return _createStudent.apply(this, arguments);\n    }\n\n    return createStudent;\n  }(),\n  taiKhoanCuaNhom: function () {\n    var _taiKhoanCuaNhom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n      var _idnhom, nhom;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _idnhom = req.params._idnhom;\n              _context10.next = 4;\n              return Nhom.findById(_idnhom).populate('sinhviens').sort({\n                'maso': -1\n              });\n\n            case 4:\n              nhom = _context10.sent;\n              // const nhom = await Nhom.findById(_idnhom).populate({\n              // \tpath:'sinhviens',\n              // \tmodel:'TaiKhoan',\n              // \tsort: {'maso':-1}\n              // })\n              res.send(nhom);\n              _context10.next = 11;\n              break;\n\n            case 8:\n              _context10.prev = 8;\n              _context10.t0 = _context10[\"catch\"](0);\n              res.send(_context10.t0);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 8]]);\n    }));\n\n    function taiKhoanCuaNhom(_x15, _x16) {\n      return _taiKhoanCuaNhom.apply(this, arguments);\n    }\n\n    return taiKhoanCuaNhom;\n  }(),\n  doiMatKhau: function () {\n    var _doiMatKhau = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n      var _req$body4, user, mkc, mkm, mkm2, taikhoan, check;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _req$body4 = req.body, user = _req$body4.user, mkc = _req$body4.mkc, mkm = _req$body4.mkm, mkm2 = _req$body4.mkm2;\n              _context12.next = 4;\n              return TaiKhoan.findById(user._id);\n\n            case 4:\n              taikhoan = _context12.sent;\n              check = false;\n              bcrypt.compare(mkc, taikhoan.matkhau).then(function (result) {\n                check = result;\n\n                if (check === true) {\n                  bcrypt.hash(mkm, saltRounds).then( /*#__PURE__*/function () {\n                    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(hash) {\n                      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                        while (1) {\n                          switch (_context11.prev = _context11.next) {\n                            case 0:\n                              //console.log(hash)\t\t\t\t\n                              taikhoan.matkhau = hash;\n                              taikhoan.matkhautam = mkm;\n                              taikhoan.save();\n\n                            case 3:\n                            case \"end\":\n                              return _context11.stop();\n                          }\n                        }\n                      }, _callee11);\n                    }));\n\n                    return function (_x19) {\n                      return _ref6.apply(this, arguments);\n                    };\n                  }());\n                  res.send({\n                    result: true\n                  });\n                } else {\n                  //return res.send({checked:false,mess:'Wrong Password'})\n                  //res.send(check)\n                  res.send({\n                    result: false\n                  });\n                }\n              }); //console.log(_iduser.password)\n              //res.send(check)\n\n              _context12.next = 12;\n              break;\n\n            case 9:\n              _context12.prev = 9;\n              _context12.t0 = _context12[\"catch\"](0);\n              res.send(_context12.t0);\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 9]]);\n    }));\n\n    function doiMatKhau(_x17, _x18) {\n      return _doiMatKhau.apply(this, arguments);\n    }\n\n    return doiMatKhau;\n  }(),\n  capnhat: function () {\n    var _capnhat = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n      var _req$body5, _iduser, ten, ngaysinh, gioitinh, email, diachi, sdt, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              _req$body5 = req.body, _iduser = _req$body5._iduser, ten = _req$body5.ten, ngaysinh = _req$body5.ngaysinh, gioitinh = _req$body5.gioitinh, email = _req$body5.email, diachi = _req$body5.diachi, sdt = _req$body5.sdt;\n              _context13.next = 4;\n              return TaiKhoan.findById(_iduser);\n\n            case 4:\n              taikhoan = _context13.sent;\n              taikhoan.ten = ten ? ten : taikhoan.ten;\n              taikhoan.ngaysinh = ngaysinh ? ngaysinh : taikhoan.ngaysinh;\n              taikhoan.gioitinh = gioitinh ? gioitinh : taikhoan.gioitinh;\n              taikhoan.email = email ? email : taikhoan.email;\n              taikhoan.diachi = diachi ? diachi : taikhoan.diachi;\n              taikhoan.sdt = sdt ? sdt : taikhoan.sdt;\n              taikhoan.save();\n              res.send([taikhoan]);\n              _context13.next = 18;\n              break;\n\n            case 15:\n              _context13.prev = 15;\n              _context13.t0 = _context13[\"catch\"](0);\n              res.send(_context13.t0);\n\n            case 18:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 15]]);\n    }));\n\n    function capnhat(_x20, _x21) {\n      return _capnhat.apply(this, arguments);\n    }\n\n    return capnhat;\n  }(),\n  lichsuthi: function () {\n    var _lichsuthi = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n      var _idtaikhoan, baithis;\n\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              _idtaikhoan = req.params._idtaikhoan;\n              _context14.next = 4;\n              return BaiThi.find({\n                'sinhvien': _idtaikhoan\n              }).populate({\n                path: 'cauhois',\n                model: 'CauHoi',\n                populate: {\n                  path: 'phuongans',\n                  model: 'PhuongAn'\n                }\n              });\n\n            case 4:\n              baithis = _context14.sent;\n              res.send({\n                baithis: baithis\n              });\n              _context14.next = 11;\n              break;\n\n            case 8:\n              _context14.prev = 8;\n              _context14.t0 = _context14[\"catch\"](0);\n              res.send(_context14.t0);\n\n            case 11:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 8]]);\n    }));\n\n    function lichsuthi(_x22, _x23) {\n      return _lichsuthi.apply(this, arguments);\n    }\n\n    return lichsuthi;\n  }(),\n  uploadImage: function () {\n    var _uploadImage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n      var processedFile, orgName, fullPathInServ, newFullPath;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              //res.send(req.file)\n              processedFile = req.file || {}; // MULTER xử lý và gắn đối tượng FILE vào req\t\t\n\n              orgName = processedFile.originalname || ''; // Tên gốc trong máy tính của người upload    \n\n              orgName = orgName.trim().replace(/ /g, \"-\");\n              fullPathInServ = processedFile.path; // Đường dẫn đầy đủ của file vừa đc upload lên server\n              // Đổi tên của file vừa upload lên, vì multer đang đặt default ko có đuôi file\n\n              newFullPath = \"\".concat(fullPathInServ, \"-\").concat(orgName);\n              fs.renameSync(fullPathInServ, newFullPath);\n              res.send(newFullPath);\n\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    function uploadImage(_x24, _x25) {\n      return _uploadImage.apply(this, arguments);\n    }\n\n    return uploadImage;\n  }(),\n  updateUser: function () {\n    var _updateUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res) {\n      var _req$body6, _iduser, imageName, taikhoan;\n\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _req$body6 = req.body, _iduser = _req$body6._iduser, imageName = _req$body6.imageName;\n              _context16.next = 4;\n              return TaiKhoan.findById(_iduser);\n\n            case 4:\n              taikhoan = _context16.sent;\n              taikhoan.hinhanh = imageName;\n              taikhoan.save();\n              res.send(taikhoan);\n              _context16.next = 13;\n              break;\n\n            case 10:\n              _context16.prev = 10;\n              _context16.t0 = _context16[\"catch\"](0);\n              res.send(_context16.t0);\n\n            case 13:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 10]]);\n    }));\n\n    function updateUser(_x26, _x27) {\n      return _updateUser.apply(this, arguments);\n    }\n\n    return updateUser;\n  }()\n};\nmodule.exports = methods;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.controller.js"
      ],
      "names": [
        "TaiKhoan",
        "require",
        "Nhom",
        "BaiThi",
        "bcrypt",
        "fs",
        "shortid",
        "saltRounds",
        "myPlaintextPassword",
        "someOtherPlaintextPassword",
        "methods",
        "index",
        "req",
        "res",
        "find",
        "taikhoan",
        "send",
        "register",
        "body",
        "username",
        "password",
        "hash_pass",
        "hash",
        "then",
        "maso",
        "matkhau",
        "vaitro",
        "save",
        "err",
        "login",
        "user",
        "check",
        "compare",
        "result",
        "checked",
        "mess",
        "createStudent",
        "students",
        "nhomActived",
        "forEach",
        "student",
        "idx",
        "matkhautam",
        "generate",
        "MSSV",
        "sv",
        "length",
        "item",
        "nhoms",
        "push",
        "_id",
        "response",
        "findById",
        "nhom",
        "sinhviens",
        "ten",
        "gioitinh",
        "email",
        "Email",
        "respone",
        "taiKhoanCuaNhom",
        "_idnhom",
        "params",
        "populate",
        "sort",
        "doiMatKhau",
        "mkc",
        "mkm",
        "mkm2",
        "capnhat",
        "_iduser",
        "ngaysinh",
        "diachi",
        "sdt",
        "lichsuthi",
        "_idtaikhoan",
        "path",
        "model",
        "baithis",
        "uploadImage",
        "processedFile",
        "file",
        "orgName",
        "originalname",
        "trim",
        "replace",
        "fullPathInServ",
        "newFullPath",
        "renameSync",
        "updateUser",
        "imageName",
        "hinhanh",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAII,EAAE,GAAGJ,OAAO,CAAE,IAAF,CAAhB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMM,UAAU,GAAG,CAAnB;AACA,IAAMC,mBAAmB,GAAG,gBAA5B;AACA,IAAMC,0BAA0B,GAAG,WAAnC;AAEA,IAAMC,OAAO,GAAG;AACfC,EAAAA,KAAK;AAAA,yEAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBb,QAAQ,CAACc,IAAT,EADjB;;AAAA;AACAC,cAAAA,QADA;AAENF,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADU;AAKfE,EAAAA,QAAQ;AAAA,4EAAG,kBAAOL,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACV,kBAAG;AAAA,4BAC2BD,GAAG,CAACM,IAD/B,EACKC,QADL,aACKA,QADL,EACeC,QADf,aACeA,QADf,EAEF;AACA;AACA;AACA;AACA;;AACIC,gBAAAA,SAPF,GAOc,EAPd;AAQFjB,gBAAAA,MAAM,CAACkB,IAAP,CAAYF,QAAZ,EAAsBb,UAAtB,EAAkCgB,IAAlC,CAAuC,UAAAD,IAAI,EAAE;AAC5C;AAEA,sBAAIP,QAAQ,GAAG,IAAIf,QAAJ,CAAa;AAC3BwB,oBAAAA,IAAI,EAACL,QADsB;AAE3BM,oBAAAA,OAAO,EAACH,IAFmB;AAG3BI,oBAAAA,MAAM,EAAC;AAHoB,mBAAb,CAAf;AAKAX,kBAAAA,QAAQ,CAACY,IAAT;AACA,iBATD;AAWAd,gBAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT,EAnBE,CAoBF;AAEA;AAEA,eAxBD,CAwBE,OAAOY,GAAP,EAAW;AACZf,gBAAAA,GAAG,CAACG,IAAJ,CAASY,GAAT;AACA;;AA3BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALO;AAkCfC,EAAAA,KAAK;AAAA,yEAAG,kBAAOjB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEuBD,GAAG,CAACM,IAF3B,EAECC,QAFD,cAECA,QAFD,EAEWC,QAFX,cAEWA,QAFX;AAAA;AAAA,qBAGapB,QAAQ,CAACc,IAAT,CAAc;AAACU,gBAAAA,IAAI,EAACL;AAAN,eAAd,CAHb;;AAAA;AAGAW,cAAAA,IAHA;;AAAA,oBAIFA,IAAI,IAAI,EAJN;AAAA;AAAA;AAAA;;AAKDC,cAAAA,KALC,GAKO,KALP;AAML3B,cAAAA,MAAM,CAAC4B,OAAP,CAAeZ,QAAf,EAAyBU,IAAI,CAAC,CAAD,CAAJ,CAAQL,OAAjC,EAA0CF,IAA1C,CAA+C,UAASU,MAAT,EAAiB;AAC5DF,gBAAAA,KAAK,GAAGE,MAAR;;AACA,oBAAGF,KAAK,KAAG,IAAX,EAAgB;AACf,yBAAOlB,GAAG,CAACG,IAAJ,CAAS;AAACkB,oBAAAA,OAAO,EAAC,IAAT;AAAcJ,oBAAAA,IAAI,EAACA;AAAnB,mBAAT,CAAP;AACA,iBAFD,MAEO;AACN,yBAAOjB,GAAG,CAACG,IAAJ,CAAS;AAACkB,oBAAAA,OAAO,EAAC,KAAT;AAAeC,oBAAAA,IAAI,EAAC;AAApB,mBAAT,CAAP;AACA;AACJ,eAPD;AANK;AAAA;;AAAA;AAAA,gDAeEtB,GAAG,CAACG,IAAJ,CAAS;AAACkB,gBAAAA,OAAO,EAAC,KAAT;AAAgBC,gBAAAA,IAAI,EAAC;AAArB,eAAT,CAfF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBNtB,cAAAA,GAAG,CAACG,IAAJ;;AAlBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlCU;AAuDfoB,EAAAA,aAAa;AAAA,iFAAG,kBAAOxB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACf,kBAAG;AAAA,6BACgCD,GAAG,CAACM,IADpC,EACMmB,QADN,cACMA,QADN,EACgBC,WADhB,cACgBA,WADhB;;AAGF,oBAAGD,QAAH,EAAY;AACXA,kBAAAA,QAAQ,CAACE,OAAT;AAAA,uFAAiB,kBAAOC,OAAP,EAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,8BAAAA,UADU,GACGpC,OAAO,CAACqC,QAAR,EADH;AAAA;AAAA,qCAEC3C,QAAQ,CAACc,IAAT,CAAc;AAACU,gCAAAA,IAAI,EAACgB,OAAO,CAACI;AAAd,+BAAd,CAFD;;AAAA;AAEVC,8BAAAA,EAFU;;AAGhB,kCAAIA,EAAE,CAACC,MAAH,IAAW,CAAf,EAAiB;AAChBD,gCAAAA,EAAE,CAACN,OAAH;AAAA,sGAAW,kBAAMQ,IAAN;AAAA;AAAA;AAAA;AAAA;AACVA,4CAAAA,IAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBX,WAAW,CAACY,GAA5B;AACAH,4CAAAA,IAAI,CAACpB,IAAL,GAAYJ,IAAZ;AAAA,kHAAiB,kBAAM4B,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACCjD,IAAI,CAACkD,QAAL,CAAcd,WAAW,CAACY,GAA1B,CADD;;AAAA;AACZG,wDAAAA,IADY;AAEfA,wDAAAA,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAoBF,IAAI,CAACG,GAAzB;AACAG,wDAAAA,IAAI,CAAC1B,IAAL;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAjB;;AAAA;AAAA;AAAA;AAAA;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAX;;AAAA;AAAA;AAAA;AAAA,qCADgB,CAShB;AACA,+BAVD,MAUO;AACNvB,gCAAAA,MAAM,CAACkB,IAAP,CAAYoB,UAAZ,EAAwBnC,UAAxB,EAAoCgB,IAApC;AAAA,sGAAyC,kBAAMD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAGnB,IAAItB,QAAJ,CAAa;AACjCwB,8CAAAA,IAAI,EAACgB,OAAO,CAACI,IADoB;AAEjCW,8CAAAA,GAAG,EAACf,OAAO,CAAC,QAAD,CAFsB;AAGjCgB,8CAAAA,QAAQ,EAAChB,OAAO,CAAC,WAAD,CAHiB;AAIjCiB,8CAAAA,KAAK,EAACjB,OAAO,CAACkB,KAJmB;AAKjCjC,8CAAAA,OAAO,EAACH,IALyB;AAMjC0B,8CAAAA,KAAK,EAACV,WAAW,CAACY,GANe;AAOjCR,8CAAAA,UAAU,EAACA,UAPsB;AAQjChB,8CAAAA,MAAM,EAAC;AAR0B,6CAAb,CAHmB;;AAAA;AAGpCX,4CAAAA,QAHoC;AAaxCA,4CAAAA,QAAQ,CAACY,IAAT,GAAgBJ,IAAhB;AAAA,kHAAqB,kBAAMoC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACHzD,IAAI,CAACkD,QAAL,CAAcd,WAAW,CAACY,GAA1B,CADG;;AAAA;AAChBG,wDAAAA,IADgB;AAEnBA,wDAAAA,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAoBU,OAApB;AACAN,wDAAAA,IAAI,CAAC1B,IAAL;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAArB;;AAAA;AAAA;AAAA;AAAA;;AAbwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAzC;;AAAA;AAAA;AAAA;AAAA;AAmBA;;AAED,kCAAIc,GAAG,KAAKJ,QAAQ,CAACS,MAAT,GAAgB,CAA5B,EAA8B;AAC7B;AACAjC,gCAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AACA;;AAtCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjB;;AAAA;AAAA;AAAA;AAAA;AAwCA;AACD,eA7CD,CA6CE,OAAMY,GAAN,EAAU;AACXf,gBAAAA,GAAG,CAACG,IAAJ,CAASY,GAAT;AACA;;AAhDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvDE;AAyGfgC,EAAAA,eAAe;AAAA,mFAAG,mBAAOhD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAERgD,cAAAA,OAFQ,GAEIjD,GAAG,CAACkD,MAFR,CAERD,OAFQ;AAAA;AAAA,qBAGG3D,IAAI,CAACkD,QAAL,CAAcS,OAAd,EAAuBE,QAAvB,CAAgC,WAAhC,EAA6CC,IAA7C,CAAkD;AAAC,wBAAO,CAAC;AAAT,eAAlD,CAHH;;AAAA;AAGVX,cAAAA,IAHU;AAIhB;AACA;AACA;AACA;AACA;AACAxC,cAAAA,GAAG,CAACG,IAAJ,CAASqC,IAAT;AATgB;AAAA;;AAAA;AAAA;AAAA;AAWhBxC,cAAAA,GAAG,CAACG,IAAJ;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzGA;AAuHfiD,EAAAA,UAAU;AAAA,8EAAG,mBAAOrD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEkBD,GAAG,CAACM,IAFtB,EAEJY,IAFI,cAEJA,IAFI,EAEEoC,GAFF,cAEEA,GAFF,EAEOC,GAFP,cAEOA,GAFP,EAEYC,IAFZ,cAEYA,IAFZ;AAAA;AAAA,qBAGYpE,QAAQ,CAACoD,QAAT,CAAkBtB,IAAI,CAACoB,GAAvB,CAHZ;;AAAA;AAGLnC,cAAAA,QAHK;AAIPgB,cAAAA,KAJO,GAIC,KAJD;AAKV3B,cAAAA,MAAM,CAAC4B,OAAP,CAAekC,GAAf,EAAoBnD,QAAQ,CAACU,OAA7B,EAAsCF,IAAtC,CAA2C,UAASU,MAAT,EAAiB;AACxDF,gBAAAA,KAAK,GAAGE,MAAR;;AACA,oBAAGF,KAAK,KAAG,IAAX,EAAgB;AAEf3B,kBAAAA,MAAM,CAACkB,IAAP,CAAY6C,GAAZ,EAAiB5D,UAAjB,EAA6BgB,IAA7B;AAAA,wFAAkC,mBAAMD,IAAN;AAAA;AAAA;AAAA;AAAA;AACpC;AACAP,8BAAAA,QAAQ,CAACU,OAAT,GAAmBH,IAAnB;AACAP,8BAAAA,QAAQ,CAAC2B,UAAT,GAAsByB,GAAtB;AACApD,8BAAAA,QAAQ,CAACY,IAAT;;AAJoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlC;;AAAA;AAAA;AAAA;AAAA;AAQAd,kBAAAA,GAAG,CAACG,IAAJ,CAAS;AAACiB,oBAAAA,MAAM,EAAC;AAAR,mBAAT;AACA,iBAXD,MAWO;AACN;AACA;AACApB,kBAAAA,GAAG,CAACG,IAAJ,CAAS;AAACiB,oBAAAA,MAAM,EAAC;AAAR,mBAAT;AACA;AACD,eAlBJ,EALU,CAwBX;AACA;;AAzBW;AAAA;;AAAA;AAAA;AAAA;AA2BXpB,cAAAA,GAAG,CAACG,IAAJ;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvHK;AAqJfqD,EAAAA,OAAO;AAAA,2EAAG,mBAAOzD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEuDD,GAAG,CAACM,IAF3D,EAEDoD,OAFC,cAEDA,OAFC,EAEOf,GAFP,cAEOA,GAFP,EAEYgB,QAFZ,cAEYA,QAFZ,EAEsBf,QAFtB,cAEsBA,QAFtB,EAEgCC,KAFhC,cAEgCA,KAFhC,EAEuCe,MAFvC,cAEuCA,MAFvC,EAE+CC,GAF/C,cAE+CA,GAF/C;AAAA;AAAA,qBAGezE,QAAQ,CAACoD,QAAT,CAAkBkB,OAAlB,CAHf;;AAAA;AAGFvD,cAAAA,QAHE;AAIPA,cAAAA,QAAQ,CAACwC,GAAT,GAAeA,GAAG,GAAGA,GAAH,GAASxC,QAAQ,CAACwC,GAApC;AACAxC,cAAAA,QAAQ,CAACwD,QAAT,GAAoBA,QAAQ,GAAGA,QAAH,GAAcxD,QAAQ,CAACwD,QAAnD;AACAxD,cAAAA,QAAQ,CAACyC,QAAT,GAAoBA,QAAQ,GAAGA,QAAH,GAAczC,QAAQ,CAACyC,QAAnD;AACAzC,cAAAA,QAAQ,CAAC0C,KAAT,GAAiBA,KAAK,GAAGA,KAAH,GAAW1C,QAAQ,CAAC0C,KAA1C;AACA1C,cAAAA,QAAQ,CAACyD,MAAT,GAAkBA,MAAM,GAAGA,MAAH,GAAYzD,QAAQ,CAACyD,MAA7C;AACAzD,cAAAA,QAAQ,CAAC0D,GAAT,GAAeA,GAAG,GAAGA,GAAH,GAAS1D,QAAQ,CAAC0D,GAApC;AACA1D,cAAAA,QAAQ,CAACY,IAAT;AACDd,cAAAA,GAAG,CAACG,IAAJ,CAAS,CAACD,QAAD,CAAT;AAXQ;AAAA;;AAAA;AAAA;AAAA;AAaRF,cAAAA,GAAG,CAACG,IAAJ;;AAbQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArJQ;AAqKf0D,EAAAA,SAAS;AAAA,6EAAG,mBAAO9D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEF8D,cAAAA,WAFE,GAEc/D,GAAG,CAACkD,MAFlB,CAEFa,WAFE;AAAA;AAAA,qBAGYxE,MAAM,CAACW,IAAP,CAAY;AAAC,4BAAW6D;AAAZ,eAAZ,EAAsCZ,QAAtC,CAA+C;AACpEa,gBAAAA,IAAI,EAAC,SAD+D;AAEpEC,gBAAAA,KAAK,EAAC,QAF8D;AAGpEd,gBAAAA,QAAQ,EAAC;AACRa,kBAAAA,IAAI,EAAE,WADE;AAERC,kBAAAA,KAAK,EAAE;AAFC;AAH2D,eAA/C,CAHZ;;AAAA;AAGJC,cAAAA,OAHI;AAWVjE,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAAC8D,gBAAAA,OAAO,EAACA;AAAT,eAAT;AAXU;AAAA;;AAAA;AAAA;AAAA;AAaVjE,cAAAA,GAAG,CAACG,IAAJ;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArKM;AAqLf+D,EAAAA,WAAW;AAAA,+EAAE,mBAAOnE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ;AACMmE,cAAAA,aAFM,GAEUpE,GAAG,CAACqE,IAAJ,IAAY,EAFtB,EAE0B;;AAC/BC,cAAAA,OAHK,GAGKF,aAAa,CAACG,YAAd,IAA8B,EAHnC,EAGuC;;AAChDD,cAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,GAAeC,OAAf,CAAuB,IAAvB,EAA6B,GAA7B,CAAV;AACMC,cAAAA,cALG,GAKcN,aAAa,CAACJ,IAL5B,EAKkC;AAC3C;;AACMW,cAAAA,WAPG,aAOcD,cAPd,cAOgCJ,OAPhC;AAQT7E,cAAAA,EAAE,CAACmF,UAAH,CAAcF,cAAd,EAA8BC,WAA9B;AACH1E,cAAAA,GAAG,CAACG,IAAJ,CAASuE,WAAT;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArLI;AAgMfE,EAAAA,UAAU;AAAA,8EAAG,mBAAO7E,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEkBD,GAAG,CAACM,IAFtB,EAEJoD,OAFI,cAEJA,OAFI,EAEKoB,SAFL,cAEKA,SAFL;AAAA;AAAA,qBAGY1F,QAAQ,CAACoD,QAAT,CAAkBkB,OAAlB,CAHZ;;AAAA;AAGLvD,cAAAA,QAHK;AAIVA,cAAAA,QAAQ,CAAC4E,OAAT,GAAmBD,SAAnB;AACA3E,cAAAA,QAAQ,CAACY,IAAT;AACDd,cAAAA,GAAG,CAACG,IAAJ,CAASD,QAAT;AANW;AAAA;;AAAA;AAAA;AAAA;AAQXF,cAAAA,GAAG,CAACG,IAAJ;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAhMK,CAAhB;AA6MA4E,MAAM,CAACC,OAAP,GAAiBnF,OAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\controllers\\",
      "sourcesContent": [
        "let TaiKhoan = require('../models/taikhoan.model')\r\nlet Nhom = require('../models/nhom.model')\r\nlet BaiThi = require('../models/baithi.model')\r\nconst bcrypt = require('bcrypt');\r\n\r\nvar fs = require ('fs')\r\nvar shortid = require('shortid');\r\nconst saltRounds = 1;\r\nconst myPlaintextPassword = 's0/\\/\\P4$$w0rD';\r\nconst someOtherPlaintextPassword = 'not_bacon';\r\n\r\nconst methods = {\r\n\tindex: async (req, res)=>{\r\n\t\tconst taikhoan = await TaiKhoan.find()\r\n\t\tres.send(taikhoan)\r\n\t},\r\n\tregister : async (req, res) => {\r\n\t\ttry{\t\t\t\t\t\r\n\t\t\tconst {username, password} = req.body\t\t\t\r\n\t\t\t// bcrypt.genSalt(saltRounds, function(err, salt) {\r\n\t\t\t//     bcrypt.hash(myPlaintextPassword, salt, function(err, hash) {\r\n\t\t\t//         console.log(hash)\r\n\t\t\t//     });\r\n\t\t\t// });\t\t\t\r\n\t\t\tlet hash_pass = ''\t\t\t\r\n\t\t\tbcrypt.hash(password, saltRounds).then(hash=>{\r\n\t\t\t\t//console.log(hash)\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet taikhoan = new TaiKhoan({\r\n\t\t\t\t\tmaso:username,\r\n\t\t\t\t\tmatkhau:hash,\r\n\t\t\t\t\tvaitro:1\r\n\t\t\t\t})\t\t\t\t\t\t\r\n\t\t\t\ttaikhoan.save()\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tres.send('ok')\t\t\r\n\t\t\t// const taikhoan = await new TaiKhoan({\r\n\t\t\t\t\t\r\n\t\t\t// })\r\n\t\t\t\t\t\r\n\t\t} catch (err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tlogin : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {username, password} = req.body\r\n\t\t\tconst user = await TaiKhoan.find({maso:username})\r\n\t\t\tif (user != ''){\t\t\t\t\r\n\t\t\t\tlet check = false\t\r\n\t\t\t\tbcrypt.compare(password, user[0].matkhau).then(function(result) {\r\n    \t\t\t\tcheck = result\r\n    \t\t\t\tif(check===true){\r\n    \t\t\t\t\treturn res.send({checked:true,user:user})\r\n    \t\t\t\t} else {\r\n    \t\t\t\t\treturn res.send({checked:false,mess:'Wrong Password'})\r\n    \t\t\t\t}\r\n\t\t\t\t});\t\t\t\t\t\t\t\t\r\n\t\t\t} else {\t\t\t\t\r\n\t\t\t\treturn res.send({checked:false, mess:'Not exit'})\r\n\t\t\t}\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tcreateStudent : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst { students, nhomActived } = req.body\r\n\r\n\t\t\tif(students){\r\n\t\t\t\tstudents.forEach(async (student, idx)=>{\r\n\t\t\t\t\tconst matkhautam = shortid.generate()\r\n\t\t\t\t\tconst sv = await TaiKhoan.find({maso:student.MSSV})\r\n\t\t\t\t\tif (sv.length!=0){\r\n\t\t\t\t\t\tsv.forEach(async item=>{\r\n\t\t\t\t\t\t\titem.nhoms.push(nhomActived._id)\r\n\t\t\t\t\t\t\titem.save().then(async response=>{\r\n\t\t\t\t\t\t\t\tlet nhom = await Nhom.findById(nhomActived._id)\r\n\t\t\t\t\t\t\t\t\tnhom.sinhviens.push(item._id)\r\n\t\t\t\t\t\t\t\t\tnhom.save()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t//sv[0].nhoms.push(nhomActived._id)\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbcrypt.hash(matkhautam, saltRounds).then(async hash=>{\r\n\t\t\t\t\t\t\t//console.log(hash)\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet taikhoan = await new TaiKhoan({\r\n\t\t\t\t\t\t\t\tmaso:student.MSSV,\r\n\t\t\t\t\t\t\t\tten:student['Họ tên'],\r\n\t\t\t\t\t\t\t\tgioitinh:student['Giới tính'],\r\n\t\t\t\t\t\t\t\temail:student.Email,\r\n\t\t\t\t\t\t\t\tmatkhau:hash,\r\n\t\t\t\t\t\t\t\tnhoms:nhomActived._id,\r\n\t\t\t\t\t\t\t\tmatkhautam:matkhautam,\r\n\t\t\t\t\t\t\t\tvaitro:2\r\n\t\t\t\t\t\t\t})\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttaikhoan.save().then(async respone=>{\r\n\t\t\t\t\t\t\t\tlet nhom = await Nhom.findById(nhomActived._id)\r\n\t\t\t\t\t\t\t\t\tnhom.sinhviens.push(respone)\r\n\t\t\t\t\t\t\t\t\tnhom.save()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\r\n\t\t\t\t\tif (idx === students.length-1){\r\n\t\t\t\t\t\t//const students_result = await Nhom.findById(nhomActived._id).populate('sinhviens')\r\n\t\t\t\t\t\tres.send('ok')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\ttaiKhoanCuaNhom : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst { _idnhom } = req.params\r\n\t\t\tconst nhom = await Nhom.findById(_idnhom).populate('sinhviens').sort({'maso':-1})\t\t\t\r\n\t\t\t// const nhom = await Nhom.findById(_idnhom).populate({\r\n\t\t\t// \tpath:'sinhviens',\r\n\t\t\t// \tmodel:'TaiKhoan',\r\n\t\t\t// \tsort: {'maso':-1}\r\n\t\t\t// })\r\n\t\t\tres.send(nhom)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tdoiMatKhau : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {user, mkc, mkm, mkm2}=req.body\r\n\t\t\tconst taikhoan = await TaiKhoan.findById(user._id) \t\t\t\r\n\t\t\tlet check = false\t\r\n\t\t\t\tbcrypt.compare(mkc, taikhoan.matkhau).then(function(result) {\r\n    \t\t\t\tcheck = result\r\n    \t\t\t\tif(check===true){    \t\t\r\n\r\n    \t\t\t\t\tbcrypt.hash(mkm, saltRounds).then(async hash=>{\r\n\t\t\t\t\t\t\t//console.log(hash)\t\t\t\t\r\n\t\t\t\t\t\t\ttaikhoan.matkhau = hash\r\n\t\t\t\t\t\t\ttaikhoan.matkhautam = mkm\r\n\t\t\t\t\t\t\ttaikhoan.save()\r\n\r\n\t\t\t\t\t\t})\t\t\t\r\n\r\n    \t\t\t\t\tres.send({result:true})\r\n    \t\t\t\t} else {\r\n    \t\t\t\t\t//return res.send({checked:false,mess:'Wrong Password'})\r\n    \t\t\t\t\t//res.send(check)\r\n    \t\t\t\t\tres.send({result:false})\r\n    \t\t\t\t}\r\n    \t\t\t})\r\n\t\t\t//console.log(_iduser.password)\r\n\t\t\t//res.send(check)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tcapnhat : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_iduser,ten, ngaysinh, gioitinh, email, diachi, sdt } = req.body\r\n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\r\n\t\t\t\ttaikhoan.ten = ten ? ten : taikhoan.ten\r\n\t\t\t\ttaikhoan.ngaysinh = ngaysinh ? ngaysinh : taikhoan.ngaysinh\r\n\t\t\t\ttaikhoan.gioitinh = gioitinh ? gioitinh : taikhoan.gioitinh\r\n\t\t\t\ttaikhoan.email = email ? email : taikhoan.email\r\n\t\t\t\ttaikhoan.diachi = diachi ? diachi : taikhoan.diachi\r\n\t\t\t\ttaikhoan.sdt = sdt ? sdt : taikhoan.sdt\r\n\t\t\t\ttaikhoan.save()\r\n\t\t\tres.send([taikhoan])\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tlichsuthi : async (req, res) => {\r\n\t\ttry{\r\n\t\t\tconst { _idtaikhoan } = req.params\r\n\t\t\tconst baithis = await BaiThi.find({'sinhvien':_idtaikhoan}).populate({\r\n\t\t\t\tpath:'cauhois',\r\n\t\t\t\tmodel:'CauHoi',\r\n\t\t\t\tpopulate:{\r\n\t\t\t\t\tpath: 'phuongans',\r\n\t\t\t\t\tmodel: 'PhuongAn'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tres.send({baithis:baithis})\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t},\r\n\tuploadImage: async (req, res)=>{\r\n\t\t//res.send(req.file)\r\n\t\tconst processedFile = req.file || {}; // MULTER xử lý và gắn đối tượng FILE vào req\t\t\r\n\t    let orgName = processedFile.originalname || ''; // Tên gốc trong máy tính của người upload    \r\n\t    orgName = orgName.trim().replace(/ /g, \"-\")\r\n\t    const fullPathInServ = processedFile.path; // Đường dẫn đầy đủ của file vừa đc upload lên server\r\n\t    // Đổi tên của file vừa upload lên, vì multer đang đặt default ko có đuôi file\r\n\t    const newFullPath = `${fullPathInServ}-${orgName}`;\r\n\t    fs.renameSync(fullPathInServ, newFullPath);\t\t\t\t\r\n\t\tres.send(newFullPath)\r\n\t},\r\n\tupdateUser : async (req, res)=>{\r\n\t\ttry{\r\n\t\t\tconst {_iduser, imageName} = req.body\r\n\t\t\tconst taikhoan = await TaiKhoan.findById(_iduser)\r\n\t\t\t\ttaikhoan.hinhanh = imageName\r\n\t\t\t\ttaikhoan.save()\r\n\t\t\tres.send(taikhoan)\r\n\t\t} catch(err){\r\n\t\t\tres.send(err)\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\nmodule.exports = methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903194
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\server_d\",\"filename\":\"D:\\\\LuanVan\\\\server_d\\\\models\\\\baithi.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\server_d\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\server_d",
      "filename": "D:\\LuanVan\\server_d\\models\\baithi.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\server_d",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\server_d\\models\\baithi.model.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\server_d\\models\\baithi.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
        "sourceFileName": "baithi.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar schema = new Schema({\n  ma: String,\n  thoigian: Number,\n  tgbd: String,\n  tgkt: String,\n  tgnb: String,\n  dung: Number,\n  sai: Number,\n  diem: Number,\n  ngay: String,\n  kithi: Object,\n  dethi: Object,\n  sinhvien: {\n    type: Schema.Types.ObjectId,\n    ref: \"TaiKhoan\"\n  },\n  cauhois: [{\n    type: Schema.Types.ObjectId,\n    ref: \"CauHoi\"\n  }],\n  phuongans: [{\n    type: Schema.Types.ObjectId,\n    ref: \"PhuongAn\"\n  }]\n});\nvar BaiThi = mongoose.model('BaiThi', schema);\nmodule.exports = BaiThi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaXRoaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJzY2hlbWEiLCJtYSIsIlN0cmluZyIsInRob2lnaWFuIiwiTnVtYmVyIiwidGdiZCIsInRna3QiLCJ0Z25iIiwiZHVuZyIsInNhaSIsImRpZW0iLCJuZ2F5Iiwia2l0aGkiLCJPYmplY3QiLCJkZXRoaSIsInNpbmh2aWVuIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJjYXVob2lzIiwicGh1b25nYW5zIiwiQmFpVGhpIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXRCO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUVwQkUsRUFBQUEsRUFBRSxFQUFFQyxNQUZnQjtBQUdwQkMsRUFBQUEsUUFBUSxFQUFFQyxNQUhVO0FBSXBCQyxFQUFBQSxJQUFJLEVBQUVILE1BSmM7QUFLcEJJLEVBQUFBLElBQUksRUFBRUosTUFMYztBQU1wQkssRUFBQUEsSUFBSSxFQUFFTCxNQU5jO0FBT3BCTSxFQUFBQSxJQUFJLEVBQUVKLE1BUGM7QUFRcEJLLEVBQUFBLEdBQUcsRUFBRUwsTUFSZTtBQVNwQk0sRUFBQUEsSUFBSSxFQUFFTixNQVRjO0FBVXBCTyxFQUFBQSxJQUFJLEVBQUVULE1BVmM7QUFZcEJVLEVBQUFBLEtBQUssRUFBQ0MsTUFaYztBQWFwQkMsRUFBQUEsS0FBSyxFQUFDRCxNQWJjO0FBZXBCRSxFQUFBQSxRQUFRLEVBQUM7QUFDUkMsSUFBQUEsSUFBSSxFQUFDakIsTUFBTSxDQUFDa0IsS0FBUCxDQUFhQyxRQURWO0FBRVhDLElBQUFBLEdBQUcsRUFBQztBQUZPLEdBZlc7QUFvQnBCQyxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNMSixJQUFBQSxJQUFJLEVBQUNqQixNQUFNLENBQUNrQixLQUFQLENBQWFDLFFBRGI7QUFFTEMsSUFBQUEsR0FBRyxFQUFDO0FBRkMsR0FBRCxDQXBCWTtBQXdCdkJFLEVBQUFBLFNBQVMsRUFBQyxDQUFDO0FBQ0pMLElBQUFBLElBQUksRUFBQ2pCLE1BQU0sQ0FBQ2tCLEtBQVAsQ0FBYUMsUUFEZDtBQUVKQyxJQUFBQSxHQUFHLEVBQUM7QUFGQSxHQUFEO0FBeEJhLENBQVgsQ0FBYjtBQThCQSxJQUFJRyxNQUFNLEdBQUd6QixRQUFRLENBQUMwQixLQUFULENBQWUsUUFBZixFQUF5QnZCLE1BQXpCLENBQWI7QUFFQXdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXHNlcnZlcl9kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcclxuXHJcbnZhciBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcclxuXHJcbnZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuXHJcbiAgICBtYTogU3RyaW5nLCAgICBcclxuICAgIHRob2lnaWFuOiBOdW1iZXIsICAgIFxyXG4gICAgdGdiZDogU3RyaW5nLFxyXG4gICAgdGdrdDogU3RyaW5nLFxyXG4gICAgdGduYjogU3RyaW5nLFxyXG4gICAgZHVuZzogTnVtYmVyLFxyXG4gICAgc2FpOiBOdW1iZXIsXHJcbiAgICBkaWVtOiBOdW1iZXIsXHJcbiAgICBuZ2F5OiBTdHJpbmcsXHJcbiAgICBcclxuICAgIGtpdGhpOk9iamVjdCxcclxuICAgIGRldGhpOk9iamVjdCxcclxuICAgIFxyXG4gICAgc2luaHZpZW46e1xyXG4gICAgXHR0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjpcIlRhaUtob2FuXCJcclxuICAgIH0sICAgIFxyXG5cclxuICAgIGNhdWhvaXM6W3tcclxuICAgICAgICB0eXBlOlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICByZWY6XCJDYXVIb2lcIlxyXG4gICAgfV0sIFx0XHJcblx0cGh1b25nYW5zOlt7XHJcbiAgICAgICAgdHlwZTpTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgcmVmOlwiUGh1b25nQW5cIlxyXG4gICAgfV0sIFxyXG59KVxyXG5cclxudmFyIEJhaVRoaSA9IG1vbmdvb3NlLm1vZGVsKCdCYWlUaGknLCBzY2hlbWEpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEJhaVRoaSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "baithi.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "schema",
        "ma",
        "String",
        "thoigian",
        "Number",
        "tgbd",
        "tgkt",
        "tgnb",
        "dung",
        "sai",
        "diem",
        "ngay",
        "kithi",
        "Object",
        "dethi",
        "sinhvien",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "cauhois",
        "phuongans",
        "BaiThi",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAEpBE,EAAAA,EAAE,EAAEC,MAFgB;AAGpBC,EAAAA,QAAQ,EAAEC,MAHU;AAIpBC,EAAAA,IAAI,EAAEH,MAJc;AAKpBI,EAAAA,IAAI,EAAEJ,MALc;AAMpBK,EAAAA,IAAI,EAAEL,MANc;AAOpBM,EAAAA,IAAI,EAAEJ,MAPc;AAQpBK,EAAAA,GAAG,EAAEL,MARe;AASpBM,EAAAA,IAAI,EAAEN,MATc;AAUpBO,EAAAA,IAAI,EAAET,MAVc;AAYpBU,EAAAA,KAAK,EAACC,MAZc;AAapBC,EAAAA,KAAK,EAACD,MAbc;AAepBE,EAAAA,QAAQ,EAAC;AACRC,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADV;AAEXC,IAAAA,GAAG,EAAC;AAFO,GAfW;AAoBpBC,EAAAA,OAAO,EAAC,CAAC;AACLJ,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADb;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD,CApBY;AAwBvBE,EAAAA,SAAS,EAAC,CAAC;AACJL,IAAAA,IAAI,EAACjB,MAAM,CAACkB,KAAP,CAAaC,QADd;AAEJC,IAAAA,GAAG,EAAC;AAFA,GAAD;AAxBa,CAAX,CAAb;AA8BA,IAAIG,MAAM,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,QAAf,EAAyBvB,MAAzB,CAAb;AAEAwB,MAAM,CAACC,OAAP,GAAiBH,MAAjB",
      "sourceRoot": "D:\\LuanVan\\server_d\\models\\",
      "sourcesContent": [
        "var mongoose = require('mongoose')\r\n\r\nvar Schema = mongoose.Schema\r\n\r\nvar schema = new Schema({\r\n\r\n    ma: String,    \r\n    thoigian: Number,    \r\n    tgbd: String,\r\n    tgkt: String,\r\n    tgnb: String,\r\n    dung: Number,\r\n    sai: Number,\r\n    diem: Number,\r\n    ngay: String,\r\n    \r\n    kithi:Object,\r\n    dethi:Object,\r\n    \r\n    sinhvien:{\r\n    \ttype:Schema.Types.ObjectId,\r\n\t\tref:\"TaiKhoan\"\r\n    },    \r\n\r\n    cauhois:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"CauHoi\"\r\n    }], \t\r\n\tphuongans:[{\r\n        type:Schema.Types.ObjectId,\r\n        ref:\"PhuongAn\"\r\n    }], \r\n})\r\n\r\nvar BaiThi = mongoose.model('BaiThi', schema)\r\n\r\nmodule.exports = BaiThi"
      ]
    },
    "sourceType": "script",
    "mtime": 1608044903195
  }
}